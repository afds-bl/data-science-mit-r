[
  {
    "objectID": "webpages/web-06-sql-git.html",
    "href": "webpages/web-06-sql-git.html",
    "title": "Unit 6",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\neine Verbindung zu einer Datenbank herstellen und SQL-Abfragen mit {DBI} ausführen\n\n\nden grundlegenden Workflow von Git in RStudio erklären\n\n\ndie wichtigsten Konzepte des Kurses zusammenfassen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 6"
    ]
  },
  {
    "objectID": "webpages/web-06-sql-git.html#ziele",
    "href": "webpages/web-06-sql-git.html#ziele",
    "title": "Unit 6",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\neine Verbindung zu einer Datenbank herstellen und SQL-Abfragen mit {DBI} ausführen\n\n\nden grundlegenden Workflow von Git in RStudio erklären\n\n\ndie wichtigsten Konzepte des Kurses zusammenfassen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 6"
    ]
  },
  {
    "objectID": "webpages/web-06-sql-git.html#folien",
    "href": "webpages/web-06-sql-git.html#folien",
    "title": "Unit 6",
    "section": " Folien",
    "text": "Folien\nFolien im Vollbild anzeigen | Folien als PDF herunterladen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 6"
    ]
  },
  {
    "objectID": "webpages/web-06-sql-git.html#praktika",
    "href": "webpages/web-06-sql-git.html#praktika",
    "title": "Unit 6",
    "section": " Praktika",
    "text": "Praktika\n\nCO2-Emissionen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 6"
    ]
  },
  {
    "objectID": "webpages/web-06-sql-git.html#lektüre",
    "href": "webpages/web-06-sql-git.html#lektüre",
    "title": "Unit 6",
    "section": " Lektüre",
    "text": "Lektüre\n\nDatenbanken in R for Data Science\n{config}-Package\nPostgres und R",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 6"
    ]
  },
  {
    "objectID": "webpages/web-04-import-pivot.html",
    "href": "webpages/web-04-import-pivot.html",
    "title": "Unit 4",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\ngrundlegenden Befehle für den Datenimport und -export benennen\n\n\nBefehle zur Zusammenfügung von Daten identifizieren\n\n\nGrundprinzipien des tidy data-Konzepts nennen\n\n\n{tidyr}-Befehle um Daten zu pivotieren auflisten",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 4"
    ]
  },
  {
    "objectID": "webpages/web-04-import-pivot.html#ziele",
    "href": "webpages/web-04-import-pivot.html#ziele",
    "title": "Unit 4",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\ngrundlegenden Befehle für den Datenimport und -export benennen\n\n\nBefehle zur Zusammenfügung von Daten identifizieren\n\n\nGrundprinzipien des tidy data-Konzepts nennen\n\n\n{tidyr}-Befehle um Daten zu pivotieren auflisten",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 4"
    ]
  },
  {
    "objectID": "webpages/web-04-import-pivot.html#folien",
    "href": "webpages/web-04-import-pivot.html#folien",
    "title": "Unit 4",
    "section": " Folien",
    "text": "Folien\nFolien im Vollbild anzeigen | Folien als PDF herunterladen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 4"
    ]
  },
  {
    "objectID": "webpages/web-04-import-pivot.html#praktika",
    "href": "webpages/web-04-import-pivot.html#praktika",
    "title": "Unit 4",
    "section": " Praktika",
    "text": "Praktika\n\nPraktikum 04a - Daten importieren und exportieren\nPraktikum 04b - Daten zusammenfügen\nPraktikum 04c - Daten pivotieren",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 4"
    ]
  },
  {
    "objectID": "webpages/web-04-import-pivot.html#lektüre",
    "href": "webpages/web-04-import-pivot.html#lektüre",
    "title": "Unit 4",
    "section": " Lektüre",
    "text": "Lektüre\n\ndplyr Cheatsheet\nR for Data Science: Chapters 8 - Data import\nR for Data Science: Chapters 21 - Spreadsheets\nR for Data Science: Chapter 19 - Joins\nR for Data Science: Chapter 5 - Tidy data",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 4"
    ]
  },
  {
    "objectID": "webpages/web-02-viz-dplyr.html",
    "href": "webpages/web-02-viz-dplyr.html",
    "title": "Unit 2",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\nKomponenten eines {ggplot2}-Plots auflisten\n\n\ngeeignete geometrische Objekte auswählen und vergleichen\n\n\nein Projekt in RStudio beschreiben\n\n\nRegeln der {dplyr}-Befehle auflisten\n\n\nBefehle zur Transformation von Zeilen identifizieren und anwenden",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 2"
    ]
  },
  {
    "objectID": "webpages/web-02-viz-dplyr.html#ziele",
    "href": "webpages/web-02-viz-dplyr.html#ziele",
    "title": "Unit 2",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\nKomponenten eines {ggplot2}-Plots auflisten\n\n\ngeeignete geometrische Objekte auswählen und vergleichen\n\n\nein Projekt in RStudio beschreiben\n\n\nRegeln der {dplyr}-Befehle auflisten\n\n\nBefehle zur Transformation von Zeilen identifizieren und anwenden",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 2"
    ]
  },
  {
    "objectID": "webpages/web-02-viz-dplyr.html#folien",
    "href": "webpages/web-02-viz-dplyr.html#folien",
    "title": "Unit 2",
    "section": " Folien",
    "text": "Folien\nFolien im Vollbild anzeigen | Folien als PDF herunterladen\n\nFolien im Vollbild anzeigen | Folien als PDF herunterladen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 2"
    ]
  },
  {
    "objectID": "webpages/web-02-viz-dplyr.html#praktika",
    "href": "webpages/web-02-viz-dplyr.html#praktika",
    "title": "Unit 2",
    "section": " Praktika",
    "text": "Praktika\n\nPraktikum 02a - Visualisierung\nPraktikum 02c - Zeilen transformieren",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 2"
    ]
  },
  {
    "objectID": "webpages/web-02-viz-dplyr.html#hausaufgaben-und-lektüre",
    "href": "webpages/web-02-viz-dplyr.html#hausaufgaben-und-lektüre",
    "title": "Unit 2",
    "section": " Hausaufgaben und Lektüre",
    "text": "Hausaufgaben und Lektüre\n\nHausaufgabe: Verteilungen und Beziehungen visualisieren\nHausaufgabe: Zeilen transformieren\nggplot2 cheat sheet\nR for Data Science: Chapter 1 - Data visualisation; 1.4-1.8\nR for Data Science: Chapter 3 - Data transformation; 3.1-3.4",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 2"
    ]
  },
  {
    "objectID": "slides/slide-06-sql-git.html#praktikum-06a",
    "href": "slides/slide-06-sql-git.html#praktikum-06a",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Praktikum 06a",
    "text": "Praktikum 06a\nCO2-Emissionen\n −+ 30:00"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-database-1",
    "href": "slides/slide-06-sql-git.html#sql-database-1",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Database",
    "text": "SQL Database\n\n\nDBI + RPostgres \\(\\rightarrow\\) Verbindung mit SQL Datenbank\ndbplyr \\(\\rightarrow\\) dplyr-Verben mit Datenbank\n\n\n\n\nlibrary(DBI) # dbConnect()\nlibrary(RPostgres) # Postgres()"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-database-2",
    "href": "slides/slide-06-sql-git.html#sql-database-2",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Database",
    "text": "SQL Database\n\nDBI + RPostgres \\(\\rightarrow\\) Verbindung mit SQL Datenbank\ndbplyr \\(\\rightarrow\\) dplyr-Verben mit Datenbank\n\n\nlibrary(DBI) # dbConnect()\nlibrary(RPostgres) # Postgres()\n\ncon &lt;- dbConnect(\n  Postgres(),\n  sslmode = \"allow\",\n  host = \"host-name\",\n  port = port-number,\n  dbname = \"db-name\",\n  user = \"username\",\n  password = \"my_password\"\n)\n\n\n⛔ Niemals Passwort im Skript speichern!"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-database-3",
    "href": "slides/slide-06-sql-git.html#sql-database-3",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Database",
    "text": "SQL Database\n\nDBI + RPostgres \\(\\rightarrow\\) Verbindung mit SQL Datenbank\ndbplyr \\(\\rightarrow\\) dplyr-Verben mit Datenbank\n\n\nlibrary(DBI) # dbConnect()\nlibrary(RPostgres) # Postgres()\n\ncon &lt;- dbConnect(\n  Postgres(),\n  sslmode = \"allow\",\n  host = \"host-name\",\n  port = port-number,\n  dbname = \"db-name\",\n  user = \"username\",\n  password = rstudioapi::askForPassword(\"Datenbank Passwort\")\n)"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#config.yml",
    "href": "slides/slide-06-sql-git.html#config.yml",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "config.yml",
    "text": "config.yml\n\n\n\ndefault:\n  DWH_var:\n    host: \"host-name\"\n    user: \"username\"\n    password: \"DWH_pass\" \n    port: port-number\n    dbname: \"db-name\"\n\n\n\n\nlibrary(DBI) # dbConnect()\nlibrary(RPostgres) # Postgres()\n\ncon &lt;- dbConnect(\n  Postgres(),\n  sslmode = \"allow\",\n  host = config::get(\"DWH_var\")$host,\n  dbname = config::get(\"DWH_var\")$dbname,\n  user = config::get(\"DWH_var\")$user,\n  password = config::get(\"DWH_var\")$password,\n  port = config::get(\"DWH_var\")$port\n)"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#config.yml-1",
    "href": "slides/slide-06-sql-git.html#config.yml-1",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "config.yml",
    "text": "config.yml\ndefault:\n  DWH_var:\n    host: \"host-name1\"\n    user: \"username\"\n    password: \"DWH_pass\" \n    port: port-number1\n    dbname: \"db-name1\"\n  DWH_hrm:\n    host: \"host-name\"\n    user: \"username\"\n    password: \"DWH_pass\" \n    port: port-number2\n    dbname: \"db-name2\"\n    \nandere_DB:\n  DB_fin:\n    host: \"host-name3\"\n    user: \"username\"\n    password: \"DB_pass\" \n    port: port-number3\n    dbname: \"db-name3\""
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-daten-bearbeiten",
    "href": "slides/slide-06-sql-git.html#sql-daten-bearbeiten",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Daten Bearbeiten",
    "text": "SQL Daten Bearbeiten\n\ncon\n\n\n\n\n\n\n\ndbListObjects(con)"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-daten-bearbeiten-1",
    "href": "slides/slide-06-sql-git.html#sql-daten-bearbeiten-1",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Daten Bearbeiten",
    "text": "SQL Daten Bearbeiten\n\ndbListObjects(con, Id(schema = \"schema_name\"))"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-daten-bearbeiten-2",
    "href": "slides/slide-06-sql-git.html#sql-daten-bearbeiten-2",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Daten Bearbeiten",
    "text": "SQL Daten Bearbeiten\n\nlibrary(tidyverse)\ndf_db &lt;- tbl(con, Id(schema = \"schema_name\", table = \"table_name\"))\nclass(df_db)\n\n\n\n\n\n\nglimpse(df_db, width = 20)"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-daten-bearbeiten-3",
    "href": "slides/slide-06-sql-git.html#sql-daten-bearbeiten-3",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Daten Bearbeiten",
    "text": "SQL Daten Bearbeiten\n\ndf_db_small &lt;- df_db |&gt;\n  select(var1, district_k, var2) |&gt;\n  mutate(\n    var1 = as.character(var1), # dbplyr cannot translate factor() to sql\n    district_k = as.character(district_k),\n    district_k = case_when(\n      district_k == \"1301\" ~ \"Arlesheim\",\n      district_k == \"1302\" ~ \"Laufen\",\n      district_k == \"1303\" ~ \"Liestal\",\n      district_k == \"1304\" ~ \"Sissach\",\n      .default = \"Waldenburg\"\n    )\n  ) |&gt;\n  summarise(var3 = sum(var2), .by = c(var1, district_k))"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-daten-bearbeiten-4",
    "href": "slides/slide-06-sql-git.html#sql-daten-bearbeiten-4",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Daten Bearbeiten",
    "text": "SQL Daten Bearbeiten\n\n\ndf_db_small |&gt;\n  ggplot(\n    aes(\n      x = var1,\n      y = var3,\n      fill = fct_reorder(\n        district_k,\n        var3\n      )\n    )\n  ) +\n  geom_col() +\n  labs(\n    x = \"\",\n    y = \"Total\",\n    fill = \"Bezirk\"\n  ) +\n  scale_y_continuous(\n    label = scales::label_number(\n      prefix = \"CHF \",\n      big.mark = \"'\"\n    )\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = c(0.2, 0.8)\n  )"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-query-show_query",
    "href": "slides/slide-06-sql-git.html#sql-query-show_query",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Query: show_query()",
    "text": "SQL Query: show_query()\n\ndf_db_small |&gt;\n  show_query()"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#sql-queries-in-quarto-dateien",
    "href": "slides/slide-06-sql-git.html#sql-queries-in-quarto-dateien",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "SQL Queries in Quarto Dateien",
    "text": "SQL Queries in Quarto Dateien\n\n```{sql}\n#| connection: con\n#| output.var: \"db_sql_small\"\n#| code-line-numbers: \"1-4|\"\n\nSELECT \"var1\", \"district_k\", SUM(\"var2\") AS \"var3\"\nFROM (\n  SELECT\n    \"var1\",\n    CASE\nWHEN (\"district_k\" = '1301') THEN 'Arlesheim'\nWHEN (\"district_k\" = '1302') THEN 'Laufen'\nWHEN (\"district_k\" = '1303') THEN 'Liestal'\nWHEN (\"district_k\" = '1304') THEN 'Sissach'\nELSE 'Waldenburg'\nEND AS \"district_k\",\n    \"\"\n  FROM (\n    SELECT\n      CAST(\"var1\" AS TEXT) AS \"var1\",\n      CAST(\"district_k\" AS TEXT) AS \"district_k\",\n      \"\"\n    FROM \"schema_name\".\"table_name\"\n  ) \"q01\"\n) \"q02\"\nGROUP BY \"var1\", \"district_k\"\n```"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#mit-resultierenden-daten-weiter-arbeiten",
    "href": "slides/slide-06-sql-git.html#mit-resultierenden-daten-weiter-arbeiten",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Mit Resultierenden Daten Weiter Arbeiten",
    "text": "Mit Resultierenden Daten Weiter Arbeiten\n\n\nCode\ndb_sql_small |&gt;\n  ggplot(\n    aes(\n      x = var1,\n      y = var3,\n      fill = fct_reorder(district_k, var3)\n    )\n  ) +\n  geom_col() +\n  labs(\n    x = \"\",\n    y = \"Total\",\n    fill = \"Bezirk\"\n  ) +\n  scale_y_continuous(\n    label = scales::label_number(prefix = \"CHF \", big.mark = \"'\")\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#resultierende-daten-aus-datenbank-holen",
    "href": "slides/slide-06-sql-git.html#resultierende-daten-aus-datenbank-holen",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Resultierende Daten aus Datenbank Holen",
    "text": "Resultierende Daten aus Datenbank Holen\n\nclass(df_db_small)\n\n\n\n\n\n👉 Daten in DB (lazy loading)\n\n\n\n\ndf &lt;- df_db_small |&gt;\n  collect() \n\nclass(df)\n\n\n\n\n\n\n👉 Daten im Dataframe!\n\n\nhttps://dbplyr.tidyverse.org/articles/sql-translation.html"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#versionierung",
    "href": "slides/slide-06-sql-git.html#versionierung",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Versionierung",
    "text": "Versionierung"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#versionierung-1",
    "href": "slides/slide-06-sql-git.html#versionierung-1",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Versionierung",
    "text": "Versionierung"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#warum-versionierung",
    "href": "slides/slide-06-sql-git.html#warum-versionierung",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Warum Versionierung",
    "text": "Warum Versionierung"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#kollaboration-mit-sich-selbst",
    "href": "slides/slide-06-sql-git.html#kollaboration-mit-sich-selbst",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Kollaboration mit sich Selbst",
    "text": "Kollaboration mit sich Selbst\n\n\n\n\nadd, commit\n\n\n\n\n\ngithub.com\n\n\n\n\nRStudio"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#kollaboration-mit-anderen",
    "href": "slides/slide-06-sql-git.html#kollaboration-mit-anderen",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Kollaboration mit anderen",
    "text": "Kollaboration mit anderen"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#warum-git-und-gitlab",
    "href": "slides/slide-06-sql-git.html#warum-git-und-gitlab",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Warum Git und GitLab?",
    "text": "Warum Git und GitLab?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEin Backup Eurer Repositorys\nVerfolgung aller Änderungen und Möglichkeit des Rollbacks zu einem früheren Zustand\nErhöhung eurer Sichtbarkeit\nEinfache Verteilung von Packages (ohne CRAN-Anmeldungen)\nMit anderen zusammenarbeiten\nErhöhte Interaktion mit Nutzern (Issues, Pull Requests)"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#git-und-gitlab",
    "href": "slides/slide-06-sql-git.html#git-und-gitlab",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Git und GitLab",
    "text": "Git und GitLab\n\n\n(Nicht ganz) Millionen von Befehlen\n99% der Zeit: add, commit, push, pull\nIn RStudio oder command line (terminal)\nHappy Git and GitHub for the useR"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#neues-projekt",
    "href": "slides/slide-06-sql-git.html#neues-projekt",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Neues Projekt",
    "text": "Neues Projekt"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#existierendes-projekt",
    "href": "slides/slide-06-sql-git.html#existierendes-projekt",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Existierendes Projekt",
    "text": "Existierendes Projekt"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#git-in-rstudio",
    "href": "slides/slide-06-sql-git.html#git-in-rstudio",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "git in RStudio",
    "text": "git in RStudio\nStep-by-Step 1, step-by-step 2\n\n\n\nSetup Git in RStudio\nCreate a new project with a git repository\nMake a Git repo for an existing project: Tools &gt; Version control &gt; Project Setup, select “Git”. Confirm New Git Repository? Yes!\n\nHappy Git and GitHub for the useR https://aberdeenstudygroup.github.io/studyGroup/lessons/SG-T1-GitHubVersionControl/VersionControl/"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#section-1",
    "href": "slides/slide-06-sql-git.html#section-1",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "",
    "text": "Source: xkcd"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#praktikum-06b-git",
    "href": "slides/slide-06-sql-git.html#praktikum-06b-git",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Praktikum 06b: git",
    "text": "Praktikum 06b: git\nQuarto-Projekt mit git\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-06-sql-git.html#section-3",
    "href": "slides/slide-06-sql-git.html#section-3",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "",
    "text": "Slides created via revealjs and Quarto.\nAccess slides as PDF.\nAll material is licensed under Creative Commons Attribution Share Alike 4.0 International."
  },
  {
    "objectID": "slides/slide-06-sql-git.html#git-begriffe",
    "href": "slides/slide-06-sql-git.html#git-begriffe",
    "title": "SQL-Datenbanken abfragen und Versionierung mit git",
    "section": "Git-Begriffe",
    "text": "Git-Begriffe\n\nrepository dein Projektordner\ncommit ein Schnappschuss deines Repos\npush Commits an den remote senden\npull Commits vom remote erhalten\nclone das Repository zum ersten Mal aus dem remote abrufen\nremote einen Computer, auf dem sich das Repository befindet"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#rechteckige-daten-importieren",
    "href": "slides/slide-04-import-pivot.html#rechteckige-daten-importieren",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Rechteckige Daten importieren",
    "text": "Rechteckige Daten importieren\n\n\n\n\n\n\n\n\n\n\n\n\n\ninstall.packages(\"readxl\")\nlibrary(readxl)"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#rechteckige-daten-importieren-1",
    "href": "slides/slide-04-import-pivot.html#rechteckige-daten-importieren-1",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Rechteckige Daten importieren",
    "text": "Rechteckige Daten importieren\n\n\nreadr\n\n\n\nFunktion\nTrennung\n\n\n\n\nread_csv()\n,\n\n\nread_csv2()\n;\n\n\nread_tsv()\n⇥ (Tab)\n\n\nread_delim()\nSelbst-definiert\n\n\n\n\n\nreadxl\n\n\n\nFunktion\nDateityp\n\n\n\n\nread_excel()\nxls oder xlsx"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#rechteckige-daten-exportieren",
    "href": "slides/slide-04-import-pivot.html#rechteckige-daten-exportieren",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Rechteckige Daten exportieren",
    "text": "Rechteckige Daten exportieren\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninstall.packages(\"writexl\")\nlibrary(writexl)\n\n\n\n\nTo export rectangular data, we can use readr and writexl."
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#rechteckige-daten-exportieren-1",
    "href": "slides/slide-04-import-pivot.html#rechteckige-daten-exportieren-1",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Rechteckige Daten exportieren",
    "text": "Rechteckige Daten exportieren\n\n\nreadr\n\nwrite_csv()\nwrite_csv2()\nwrite_tsv()\nwrite_delim()\n\n\n\nwritexl\n\nwrite_xlsx()"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#daten-lesen",
    "href": "slides/slide-04-import-pivot.html#daten-lesen",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Daten lesen",
    "text": "Daten lesen\n\ndf &lt;- read_delim(\"data/ogd_10130.csv\", delim = \";\")\nglimpse(df)\n\n\n\nRows: 1,487\nColumns: 13\n$ date               &lt;date&gt; 2024-11-01, 2024-10-01, 2024-09-01, 2024-08-01, 20…\n$ `station/location` &lt;chr&gt; \"BAS\", \"BAS\", \"BAS\", \"BAS\", \"BAS\", \"BAS\", \"BAS\", \"B…\n$ station_name       &lt;chr&gt; \"Basel / Binningen\", \"Basel / Binningen\", \"Basel / …\n$ gre000m0           &lt;dbl&gt; 54, 80, 139, 247, 247, 216, 198, 161, 120, 69, 44, …\n$ hto000m0           &lt;dbl&gt; 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, …\n$ nto000m0           &lt;dbl&gt; 72, 76, 69, 48, 59, 76, 76, 80, 81, 83, 79, 80, 82,…\n$ prestam0           &lt;dbl&gt; 984.7, 980.0, 978.5, 979.3, 979.0, 977.6, 976.4, 97…\n$ rre150m0           &lt;dbl&gt; 53.5, 81.4, 81.2, 25.8, 62.2, 76.4, 166.7, 39.3, 78…\n$ sre000m0           &lt;dbl&gt; 5349, 4917, 7705, 17098, 13519, 9151, 9188, 7279, 6…\n$ tre200m0           &lt;dbl&gt; 6.2, 12.9, 15.6, 22.2, 21.0, 18.7, 14.9, 11.1, 9.3,…\n$ tre200mn           &lt;dbl&gt; -4.4, 4.8, 3.8, 10.3, 12.6, 8.3, 6.3, 0.4, 1.4, 0.3…\n$ tre200mx           &lt;dbl&gt; 16.1, 21.8, 32.1, 35.4, 34.5, 32.2, 27.1, 28.8, 20.…\n$ ure200m0           &lt;dbl&gt; 84.3, 85.8, 78.2, 68.7, 70.5, 73.4, 75.0, 68.6, 74.…"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#daten-schreiben",
    "href": "slides/slide-04-import-pivot.html#daten-schreiben",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Daten schreiben",
    "text": "Daten schreiben\n\nfussball_weltmeister\n\n# A tibble: 10 × 3\n    jahr weltmeisterschaft titeltraeger\n   &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;       \n 1  2023 Frauen            Spanien     \n 2  2022 Männer            Argentinien \n 3  2019 Frauen            USA         \n 4  2018 Männer            Frankreich  \n 5  2015 Frauen            USA         \n 6  2014 Männer            Deutschland \n 7  2011 Frauen            Japan       \n 8  2010 Männer            Spanien     \n 9  2007 Frauen            Deutschland \n10  2006 Männer            Italien     \n\n\n\n\nwrite_csv(x = fussball_weltmeister, file = \"data/fussball_weltmeister.csv\")"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#daten-wieder-einlesen",
    "href": "slides/slide-04-import-pivot.html#daten-wieder-einlesen",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Daten wieder einlesen",
    "text": "Daten wieder einlesen\n\nread_csv(\"data/fussball_weltmeister.csv\")\n\n\n\n# A tibble: 10 × 3\n    jahr weltmeisterschaft titeltraeger\n   &lt;dbl&gt; &lt;chr&gt;             &lt;chr&gt;       \n 1  2023 Frauen            Spanien     \n 2  2022 Männer            Argentinien \n 3  2019 Frauen            USA         \n 4  2018 Männer            Frankreich  \n 5  2015 Frauen            USA         \n 6  2014 Männer            Deutschland \n 7  2011 Frauen            Japan       \n 8  2010 Männer            Spanien     \n 9  2007 Frauen            Deutschland \n10  2006 Männer            Italien"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#rio",
    "href": "slides/slide-04-import-pivot.html#rio",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "rio",
    "text": "rio\nimport(), export(), convert()\n\n\ninstall.packages(\"rio\")\nlibrary(rio)\n\n\n\n\n\nx &lt;- import(\"mtcars.csv\") \ny &lt;- import(\"mtcars.rds\") # R data format \nz &lt;- import(\"mtcars.sav\") # SPSS\nu &lt;- import(\"mtcars.xlsx\")\nw &lt;- import(\"mtcars.json\")\n\n\n\n\n\nexport(\"mtcars.csv\")\nexport(list(mtcars, penguins), \"mtcars-penguins.xlsx\") # multiple sheets\nimport(\"mtcars-penguins.xlsx\", which = \"penguins\") # select one sheet\nimport_list(\"mtcars-penguins.xlsx\") # import multiple objects"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#andere-formate",
    "href": "slides/slide-04-import-pivot.html#andere-formate",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Andere Formate",
    "text": "Andere Formate\nreadRDS() und writeRDS()\n\n\nZwischenergebnisse als CSV zu speichern unzuverlässig, wenn bestimmte Variablentypen beibehalten werden sollen\nread_csv() kann nicht wissen welche Levels eine Faktor-Variable hat\nAlternative: RDS-Dateien, ein R-internes Dateiformat\n\n\n\nStore types of columns (factors etc), for use between R scripts. Also binary so take less space."
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#variablen-namen",
    "href": "slides/slide-04-import-pivot.html#variablen-namen",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Variablen-Namen",
    "text": "Variablen-Namen\n\nwetter &lt;- read_delim(\"data/ogd_12030.csv\")\nnames(wetter)\n\n\n\n [1] \"Datum\"                       \"Jahr\"                       \n [3] \"Globalstrahlung in W/m2\"     \"Gesamtschneemenge\"          \n [5] \"Gesamtbewölkung\"             \"Luftdruck in hPa\"           \n [7] \"Niederschlag\"                \"Sonnenscheindauer\"          \n [9] \"Tagesmittel Lufttemperatur\"  \"Tagesminimum Lufttemperatur\"\n[11] \"Tagesmaximum Lufttemperatur\" \"Relative Luftfeuchtigkeit\"  \n\n\n\n\n\nwetter |&gt; \n  filter(Globalstrahlung in W/m2 &gt; 111)\n\nError in parse(text = input): &lt;text&gt;:2:26: unexpected 'in'\n1: wetter |&gt; \n2:   filter(Globalstrahlung in\n                            ^"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#variablen-namen---backticks",
    "href": "slides/slide-04-import-pivot.html#variablen-namen---backticks",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Variablen-Namen - Backticks `",
    "text": "Variablen-Namen - Backticks `\n\nwetter |&gt; \n  filter(`Globalstrahlung in W/m2` &gt; 111)\n\n\n\n# A tibble: 8,013 × 12\n   Datum       Jahr `Globalstrahlung in W/m2` Gesamtschneemenge Gesamtbewölkung\n   &lt;date&gt;     &lt;dbl&gt;                     &lt;dbl&gt;             &lt;dbl&gt;           &lt;dbl&gt;\n 1 2001-02-15  2001                       113                 0              17\n 2 2001-02-19  2001                       117                 0              42\n 3 2001-02-26  2001                       113                 0              13\n 4 2001-02-27  2001                       118                 0              88\n 5 2001-03-24  2001                       122                 0              88\n 6 2001-03-25  2001                       112                 0              92\n 7 2001-04-02  2001                       218                 0              83\n 8 2001-04-05  2001                       188                 0              50\n 9 2001-04-13  2001                       203                 0              63\n10 2001-04-14  2001                       160                 0              79\n# ℹ 8,003 more rows\n# ℹ 7 more variables: `Luftdruck in hPa` &lt;dbl&gt;, Niederschlag &lt;dbl&gt;,\n#   Sonnenscheindauer &lt;dbl&gt;, `Tagesmittel Lufttemperatur` &lt;dbl&gt;,\n#   `Tagesminimum Lufttemperatur` &lt;dbl&gt;, `Tagesmaximum Lufttemperatur` &lt;dbl&gt;,\n#   `Relative Luftfeuchtigkeit` &lt;dbl&gt;\n\n\n\nMühsam"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#variablen-namen---readr-funktion",
    "href": "slides/slide-04-import-pivot.html#variablen-namen---readr-funktion",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Variablen-Namen - {readr}-Funktion",
    "text": "Variablen-Namen - {readr}-Funktion\n\n\nwetter&lt;- read_delim(\n  \"data/ogd_12030.csv\",\n  col_names = c(\n    \"datum\",\n    \"jahr\",\n    \"globalstrahlung_in_w_m2\",\n    \"gesamtschneemenge\",\n    \"gesamtbewolkung\",\n    \"luftdruck_in_h_pa\",\n    \"niederschlag\",\n    \"sonnenscheindauer\",\n    \"tagesmittel_lufttemperatur\",\n    \"tagesminimum_lufttemperatur\",\n    \"tagesmaximum_lufttemperatur\",\n    \"relative_luftfeuchtigkeit\"\n  )\n)\nnames(wetter)\n\n\n [1] \"datum\"                       \"jahr\"                       \n [3] \"globalstrahlung_in_w_m2\"     \"gesamtschneemenge\"          \n [5] \"gesamtbewolkung\"             \"luftdruck_in_h_pa\"          \n [7] \"niederschlag\"                \"sonnenscheindauer\"          \n [9] \"tagesmittel_lufttemperatur\"  \"tagesminimum_lufttemperatur\"\n[11] \"tagesmaximum_lufttemperatur\" \"relative_luftfeuchtigkeit\"  \n\n\n\nAuch mühsam"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#variablen-namen---janitor",
    "href": "slides/slide-04-import-pivot.html#variablen-namen---janitor",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Variablen-Namen - {janitor}",
    "text": "Variablen-Namen - {janitor}\n\n\n\n\n\n\n# install.packages(\"janitor\")\nlibrary(janitor)\n\nwetter &lt;- read_delim(\"data/ogd_12030.csv\")\n\nwetter |&gt; \n  clean_names() |&gt; \n  names()\n\n\n\n [1] \"datum\"                       \"jahr\"                       \n [3] \"globalstrahlung_in_w_m2\"     \"gesamtschneemenge\"          \n [5] \"gesamtbewolkung\"             \"luftdruck_in_h_pa\"          \n [7] \"niederschlag\"                \"sonnenscheindauer\"          \n [9] \"tagesmittel_lufttemperatur\"  \"tagesminimum_lufttemperatur\"\n[11] \"tagesmaximum_lufttemperatur\" \"relative_luftfeuchtigkeit\""
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#praktikum-04a-daten-importieren-und-exportieren",
    "href": "slides/slide-04-import-pivot.html#praktikum-04a-daten-importieren-und-exportieren",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Praktikum 04a: Daten importieren und exportieren",
    "text": "Praktikum 04a: Daten importieren und exportieren\nprak-04a-import-export.qmd\n −+ 30:00"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section",
    "href": "slides/slide-04-import-pivot.html#section",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "Wir…\n\nhaben mehrere Dataframes\nwollen diese zusammenbringen"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#daten-frauen-in-der-wissenschaft",
    "href": "slides/slide-04-import-pivot.html#daten-frauen-in-der-wissenschaft",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Daten: Frauen in der Wissenschaft",
    "text": "Daten: Frauen in der Wissenschaft\n\n\n    \n\n    \n\n\n\nInformationen zu 10 Frauen in der Wissenschaft welche die Welt verändert haben.\n\n\nQuelle: Discover Magazine"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#inputs-drei-dataframes",
    "href": "slides/slide-04-import-pivot.html#inputs-drei-dataframes",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Inputs: drei Dataframes",
    "text": "Inputs: drei Dataframes\n\nprofessionsdatesworks\n\n\n\n\n\n\n\n\n\n\nname\nprofession\n\n\n\n\nAda Lovelace\nMathematician\n\n\nMarie Curie\nPhysicist and Chemist\n\n\nJanaki Ammal\nBotanist\n\n\nChien-Shiung Wu\nPhysicist\n\n\nKatherine Johnson\nMathematician\n\n\nRosalind Franklin\nChemist\n\n\nVera Rubin\nAstronomer\n\n\nGladys West\nMathematician\n\n\nFlossie Wong-Staal\nVirologist and Molecular Biologist\n\n\nJennifer Doudna\nBiochemist\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname\nbirth_year\ndeath_year\n\n\n\n\nJanaki Ammal\n1897\n1984\n\n\nChien-Shiung Wu\n1912\n1997\n\n\nKatherine Johnson\n1918\n2020\n\n\nRosalind Franklin\n1920\n1958\n\n\nVera Rubin\n1928\n2016\n\n\nGladys West\n1930\nNA\n\n\nFlossie Wong-Staal\n1947\nNA\n\n\nJennifer Doudna\n1964\nNA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname\nknown_for\n\n\n\n\nAda Lovelace\nfirst computer algorithm\n\n\nMarie Curie\ntheory of radioactivity, discovery of elements polonium and radium, first woman to win a Nobel Prize\n\n\nJanaki Ammal\nhybrid species, biodiversity protection\n\n\nChien-Shiung Wu\nconfim and refine theory of radioactive beta decy, Wu experiment overturning theory of parity\n\n\nKatherine Johnson\ncalculations of orbital mechanics critical to sending the first Americans into space\n\n\nVera Rubin\nexistence of dark matter\n\n\nGladys West\nmathematical modeling of the shape of the Earth which served as the foundation of GPS technology\n\n\nFlossie Wong-Staal\nfirst scientist to clone HIV and create a map of its genes which led to a test for the virus\n\n\nJennifer Doudna\none of the primary developers of CRISPR, a ground-breaking technology for editing genomes"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#gewünschter-output",
    "href": "slides/slide-04-import-pivot.html#gewünschter-output",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Gewünschter Output",
    "text": "Gewünschter Output\n\n\n\n\n\n\n\n\nname\nprofession\nbirth_year\ndeath_year\nknown_for\n\n\n\n\nAda Lovelace\nMathematician\nNA\nNA\nfirst computer algorithm\n\n\nMarie Curie\nPhysicist and Chemist\nNA\nNA\ntheory of radioactivity, discovery of elements polonium and radium, first woman to win a Nobel Prize\n\n\nJanaki Ammal\nBotanist\n1897\n1984\nhybrid species, biodiversity protection\n\n\nChien-Shiung Wu\nPhysicist\n1912\n1997\nconfim and refine theory of radioactive beta decy, Wu experiment overturning theory of parity\n\n\nKatherine Johnson\nMathematician\n1918\n2020\ncalculations of orbital mechanics critical to sending the first Americans into space\n\n\nRosalind Franklin\nChemist\n1920\n1958\nNA\n\n\nVera Rubin\nAstronomer\n1928\n2016\nexistence of dark matter\n\n\nGladys West\nMathematician\n1930\nNA\nmathematical modeling of the shape of the Earth which served as the foundation of GPS technology\n\n\nFlossie Wong-Staal\nVirologist and Molecular Biologist\n1947\nNA\nfirst scientist to clone HIV and create a map of its genes which led to a test for the virus\n\n\nJennifer Doudna\nBiochemist\n1964\nNA\none of the primary developers of CRISPR, a ground-breaking technology for editing genomes\n\n\n\n\n\n\n\n\nHier sehen wir unseren gewünschten Output. Das Ziel nachdem die drei Dataframes zusammengefügt wurden:\n\nname und profession aus dem ersten Dataframe\nname, birth_year und death_year aus dem zweiten Dataframe\nname und known_for aus dem dritten Dataframe"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#inputs-drei-dataframes-1",
    "href": "slides/slide-04-import-pivot.html#inputs-drei-dataframes-1",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Inputs: drei Dataframes",
    "text": "Inputs: drei Dataframes\n\n\n\nnames(professions)\n\n[1] \"name\"       \"profession\"\n\n\n\n\nnames(dates)\n\n[1] \"name\"       \"birth_year\" \"death_year\"\n\n\n\n\nnames(works)\n\n[1] \"name\"      \"known_for\"\n\n\n\n\n\nnrow(professions)\n\n[1] 10\n\n\n\n\nnrow(dates)\n\n[1] 8\n\n\n\n\nnrow(works)\n\n[1] 9\n\n\n\n\n\n\nName ist hier sozusagen der Schlüssel\nProfessions hat die komplette Info während bei den anderen etwas fehlt"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#dataframes-zusammenfügen",
    "href": "slides/slide-04-import-pivot.html#dataframes-zusammenfügen",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Dataframes zusammenfügen",
    "text": "Dataframes zusammenfügen\n***_join(x, y)\n\n\nleft_join(x, y): alle Reihen aus x\nright_join(x, y): alle Reihen aus y\nfull_join(x, y): alle Reihen aus x und y\ninner_join(x, y): gemeinsame Reihen aus x und y\nsemi_join(x, y): wie inner_join(x, y), nur Spalten aus x\nanti_join(x, y): Reihen aus x ohne Übereinstimmung in y"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#beispiel",
    "href": "slides/slide-04-import-pivot.html#beispiel",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Beispiel",
    "text": "Beispiel\nFür die nächsten Folien\n\n\n\nx\n\n# A tibble: 3 × 2\n     id var_x\n  &lt;dbl&gt; &lt;chr&gt;\n1     1 x1   \n2     2 x2   \n3     3 x3   \n\n\n\n\ny\n\n# A tibble: 3 × 2\n     id var_y\n  &lt;dbl&gt; &lt;chr&gt;\n1     1 y1   \n2     2 y2   \n3     4 y4"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#left_join",
    "href": "slides/slide-04-import-pivot.html#left_join",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\nleft_join(x, y)\n\n# A tibble: 3 × 3\n     id var_x var_y\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 x1    y1   \n2     2 x2    y2   \n3     3 x3    &lt;NA&gt;"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#left_join-1",
    "href": "slides/slide-04-import-pivot.html#left_join-1",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "left_join()",
    "text": "left_join()\n\nprofessions |&gt;\n  left_join(dates)\n\n\n\n# A tibble: 10 × 4\n   name               profession                         birth_year death_year\n   &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n 1 Ada Lovelace       Mathematician                              NA         NA\n 2 Marie Curie        Physicist and Chemist                      NA         NA\n 3 Janaki Ammal       Botanist                                 1897       1984\n 4 Chien-Shiung Wu    Physicist                                1912       1997\n 5 Katherine Johnson  Mathematician                            1918       2020\n 6 Rosalind Franklin  Chemist                                  1920       1958\n 7 Vera Rubin         Astronomer                               1928       2016\n 8 Gladys West        Mathematician                            1930         NA\n 9 Flossie Wong-Staal Virologist and Molecular Biologist       1947         NA\n10 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#right_join",
    "href": "slides/slide-04-import-pivot.html#right_join",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\nright_join(x, y)\n\n# A tibble: 3 × 3\n     id var_x var_y\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 x1    y1   \n2     2 x2    y2   \n3     4 &lt;NA&gt;  y4"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#right_join-1",
    "href": "slides/slide-04-import-pivot.html#right_join-1",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "right_join",
    "text": "right_join\n\nprofessions |&gt;\n  right_join(dates)\n\n\n\n# A tibble: 8 × 4\n  name               profession                         birth_year death_year\n  &lt;chr&gt;              &lt;chr&gt;                                   &lt;dbl&gt;      &lt;dbl&gt;\n1 Janaki Ammal       Botanist                                 1897       1984\n2 Chien-Shiung Wu    Physicist                                1912       1997\n3 Katherine Johnson  Mathematician                            1918       2020\n4 Rosalind Franklin  Chemist                                  1920       1958\n5 Vera Rubin         Astronomer                               1928       2016\n6 Gladys West        Mathematician                            1930         NA\n7 Flossie Wong-Staal Virologist and Molecular Biologist       1947         NA\n8 Jennifer Doudna    Biochemist                               1964         NA"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#full_join",
    "href": "slides/slide-04-import-pivot.html#full_join",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\nfull_join(x, y)\n\n# A tibble: 4 × 3\n     id var_x var_y\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 x1    y1   \n2     2 x2    y2   \n3     3 x3    &lt;NA&gt; \n4     4 &lt;NA&gt;  y4"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#full_join-1",
    "href": "slides/slide-04-import-pivot.html#full_join-1",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "full_join()",
    "text": "full_join()\n\ndates |&gt;\n  full_join(works)\n\n# A tibble: 10 × 4\n   name               birth_year death_year known_for                           \n   &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;                               \n 1 Janaki Ammal             1897       1984 hybrid species, biodiversity protec…\n 2 Chien-Shiung Wu          1912       1997 confim and refine theory of radioac…\n 3 Katherine Johnson        1918       2020 calculations of orbital mechanics c…\n 4 Rosalind Franklin        1920       1958 &lt;NA&gt;                                \n 5 Vera Rubin               1928       2016 existence of dark matter            \n 6 Gladys West              1930         NA mathematical modeling of the shape …\n 7 Flossie Wong-Staal       1947         NA first scientist to clone HIV and cr…\n 8 Jennifer Doudna          1964         NA one of the primary developers of CR…\n 9 Ada Lovelace               NA         NA first computer algorithm            \n10 Marie Curie                NA         NA theory of radioactivity,  discovery…"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#alles-in-einer-code-sequenz",
    "href": "slides/slide-04-import-pivot.html#alles-in-einer-code-sequenz",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Alles in einer Code-Sequenz",
    "text": "Alles in einer Code-Sequenz\n\nprofessions |&gt;\n  left_join(dates) |&gt;\n  left_join(works)\n\n\n\n# A tibble: 10 × 5\n   name               profession                 birth_year death_year known_for\n   &lt;chr&gt;              &lt;chr&gt;                           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;    \n 1 Ada Lovelace       Mathematician                      NA         NA first co…\n 2 Marie Curie        Physicist and Chemist              NA         NA theory o…\n 3 Janaki Ammal       Botanist                         1897       1984 hybrid s…\n 4 Chien-Shiung Wu    Physicist                        1912       1997 confim a…\n 5 Katherine Johnson  Mathematician                    1918       2020 calculat…\n 6 Rosalind Franklin  Chemist                          1920       1958 &lt;NA&gt;     \n 7 Vera Rubin         Astronomer                       1928       2016 existenc…\n 8 Gladys West        Mathematician                    1930         NA mathemat…\n 9 Flossie Wong-Staal Virologist and Molecular …       1947         NA first sc…\n10 Jennifer Doudna    Biochemist                       1964         NA one of t…"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#join_by",
    "href": "slides/slide-04-import-pivot.html#join_by",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "join_by()",
    "text": "join_by()\n\n\n\nmitarbeiter &lt;- tibble(\n  id = c(1, 2, 3),\n  name = c(\"Alice\", \"Bob\", \"Charlie\")\n)\nmitarbeiter\n\n# A tibble: 3 × 2\n     id name   \n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 Alice  \n2     2 Bob    \n3     3 Charlie\n\n\n\n\ngehälter &lt;- tibble(\n  persid = c(1, 2, 4),\n  gehalt = c(50000, 60000, 70000)\n)\ngehälter\n\n# A tibble: 3 × 2\n  persid gehalt\n   &lt;dbl&gt;  &lt;dbl&gt;\n1      1  50000\n2      2  60000\n3      4  70000"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#join_by-1",
    "href": "slides/slide-04-import-pivot.html#join_by-1",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "join_by()",
    "text": "join_by()\n\nergebnis &lt;- mitarbeiter |&gt;\n  left_join(gehälter, join_by(id == persid))\nergebnis\n\n\n\n# A tibble: 3 × 3\n     id name    gehalt\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;\n1     1 Alice    50000\n2     2 Bob      60000\n3     3 Charlie     NA"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#praktikum-04b-daten-zusammenfügen",
    "href": "slides/slide-04-import-pivot.html#praktikum-04b-daten-zusammenfügen",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Praktikum 04b: Daten zusammenfügen",
    "text": "Praktikum 04b: Daten zusammenfügen\nprak-04b-join-firmen.qmd\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#tidy-data-1",
    "href": "slides/slide-04-import-pivot.html#tidy-data-1",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Tidy Data",
    "text": "Tidy Data\n\n“Alle glücklichen Familien gleichen einander, jede unglückliche Familie ist auf ihre eigene Weise unglücklich.” – Leo Tolstoy\n\n\n\n“Tidy datasets are all alike, but every messy dataset is messy in its own way.” –– Hadley Wickham\n\n\n\ntidy = ordentlich, sauber, aufgeräumt.\n\n\n\n“Happy families are all alike; every unhappy family is unhappy in its own way.” – Leo Tolstoy"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#tidy-data-2",
    "href": "slides/slide-04-import-pivot.html#tidy-data-2",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Tidy Data",
    "text": "Tidy Data\n\n\n\nJede Variable muss eine eigene Spalte haben\nJede Beobachtung muss eine eigene Zeile haben\nJeder Wert muss eine eigene Zelle haben\n\n\n\n\nEach variable must have its own column.\nEach observation must have its own row.\nEach value must have its own cell."
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-2",
    "href": "slides/slide-04-import-pivot.html#section-2",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "❓\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n2007\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n2007\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n2007\n\n\nAdelie\nTorgersen\n38.9\n17.8\n181\n3625\nfemale\n2007\n\n\nAdelie\nTorgersen\n39.2\n19.6\n195\n4675\nmale\n2007\n\n\nAdelie\nTorgersen\n34.1\n18.1\n193\n3475\nNA\n2007\n\n\nAdelie\nTorgersen\n42.0\n20.2\n190\n4250\nNA\n2007\n\n\nAdelie\nTorgersen\n37.8\n17.1\n186\n3300\nNA\n2007\n\n\nAdelie\nTorgersen\n37.8\n17.3\n180\n3700\nNA\n2007\n\n\nAdelie\nTorgersen\n41.1\n17.6\n182\n3200\nfemale\n2007\n\n\nAdelie\nTorgersen\n38.6\n21.2\n191\n3800\nmale\n2007"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-3",
    "href": "slides/slide-04-import-pivot.html#section-3",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "❓\n\n\n\nQuelle: Bundesamt für Statistik - Ständige Wohnbevölkerung nach Altersklasse und Altersmasszahlen nach Kanton, Provisorische Jahresergebnisse, 2020"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-4",
    "href": "slides/slide-04-import-pivot.html#section-4",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "❓\n\n\n\nQuelle: Bundesamt für Statistik - Ständige Wohnbevölkerung nach Altersklasse und Altersmasszahlen nach Kanton, Provisorische Jahresergebnisse, 2020"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-5",
    "href": "slides/slide-04-import-pivot.html#section-5",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "❓\n\n\n\nQuelle: Bundesamt für Statistik - Ständige Wohnbevölkerung nach Altersklasse und Altersmasszahlen nach Kanton, Provisorische Jahresergebnisse, 2020"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-6",
    "href": "slides/slide-04-import-pivot.html#section-6",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "❓\n\n\n\nQuelle: Eurostat Fertility Indicators"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-7",
    "href": "slides/slide-04-import-pivot.html#section-7",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "❓\n\n\nVariable Jahr als Zeile\n\n\n\nQuelle: Eurostat Fertility Indicators"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-8",
    "href": "slides/slide-04-import-pivot.html#section-8",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "❓\n\n\nVariable Jahr als Zeile\nZeile als Zusammenfassung (Durchschnitt)\n\n\n\nQuelle: Eurostat Fertility Indicators"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-9",
    "href": "slides/slide-04-import-pivot.html#section-9",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "❓\n\n\nVariable Jahr als Zeile\nZeile als Zusammenfassung (Durchschnitt)\n3 Spalten für eine Variable\n\n\n\nFür Darstellungszwecke ist das ok, tatsächlich nützlich. Aber wenn wir mit Rohdaten arbeiten wollen, dann sollten diese Tidy sein.\n\nTitle block\nTIME should be “GEO Label” for the column underneath it\nYears should be converted into a single column “Year” and the value should say “fertility rate”. What if we wanted to add data for population, number of women, or any other value for that year?\nbep, b etc are codes for how the data was collected. It should all be in one column\n: stands for NA, so convert\n\n\n\nQuelle: Eurostat Fertility Indicators"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#daten-mit-tidyr-aufräumen",
    "href": "slides/slide-04-import-pivot.html#daten-mit-tidyr-aufräumen",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Daten mit tidyr aufräumen",
    "text": "Daten mit tidyr aufräumen\n\n\n\n\n\nDaten umformen/pivotieren (erweitern, verlängern)\n\n\n\nZellen teilen\nFehlende Werte (NA) behandeln\n\n\n\n\nErinnernt euch an das Konzept der tidy data? Jede Spalte ist eine Variable, jede Zeile ist eine Beobachtung, jede Zelle ist ein Wert. Die Tidyverse-Funktionen erwarten Tidy-Daten. So oft müssen wir die Daten umformen, indem wir Zeilen und Spalten drehen und Zellen teilen, um neue Variablen oder Beobachtungen zu erstellen. Diese Aufräumfunktionen werden durch das Paket Tidyr gewährleistet. Darüber hinaus bietet Tidyr Tools zum Umgang mit fehlenden Daten."
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#nicht-das",
    "href": "slides/slide-04-import-pivot.html#nicht-das",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Nicht das…",
    "text": "Nicht das…"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#sondern-das",
    "href": "slides/slide-04-import-pivot.html#sondern-das",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "sondern das!",
    "text": "sondern das!"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#daten-pivotieren-1",
    "href": "slides/slide-04-import-pivot.html#daten-pivotieren-1",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Daten pivotieren",
    "text": "Daten pivotieren\n\n\n\n\n\n\nwide |&gt;\n  pivot_longer(\n    cols = x:z,\n    names_to = \"key\",\n    values_to = \"val\"\n  )\n\nlong |&gt;\n  pivot_wider(\n    names_from = key,\n    values_from = val\n  )"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-10",
    "href": "slides/slide-04-import-pivot.html#section-10",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "country\nyear\ncases\npopulation\n\n\n\n\nAfghanistan\n1999\n745\n19987071\n\n\nAfghanistan\n2000\n2666\n20595360\n\n\nBrazil\n1999\n37737\n172006362\n\n\nBrazil\n2000\n80488\n174504898\n\n\nChina\n1999\n212258\n1272915272\n\n\nChina\n2000\n213766\n1280428583\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncountry\ntype\n1999\n2000\n\n\n\n\nAfghanistan\ncases\n745\n2666\n\n\nAfghanistan\npopulation\n19987071\n20595360\n\n\nBrazil\ncases\n37737\n80488\n\n\nBrazil\npopulation\n172006362\n174504898\n\n\nChina\ncases\n212258\n213766\n\n\nChina\npopulation\n1272915272\n1280428583\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncountry\nyear\ntype\ncount\n\n\n\n\nAfghanistan\n1999\ncases\n745\n\n\nAfghanistan\n1999\npopulation\n19987071\n\n\nAfghanistan\n2000\ncases\n2666\n\n\nAfghanistan\n2000\npopulation\n20595360\n\n\nBrazil\n1999\ncases\n37737\n\n\nBrazil\n1999\npopulation\n172006362\n\n\nBrazil\n2000\ncases\n80488\n\n\nBrazil\n2000\npopulation\n174504898\n\n\nChina\n1999\ncases\n212258\n\n\nChina\n1999\npopulation\n1272915272\n\n\nChina\n2000\ncases\n213766\n\n\nChina\n2000\npopulation\n1280428583\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncountry\nyear\nrate\n\n\n\n\nAfghanistan\n1999\n745/19987071\n\n\nAfghanistan\n2000\n2666/20595360\n\n\nBrazil\n1999\n37737/172006362\n\n\nBrazil\n2000\n80488/174504898\n\n\nChina\n1999\n212258/1272915272\n\n\nChina\n2000\n213766/1280428583\n\n\n\n\n\n\n\n\n\n\nIn diesem Beispiel werden dieselben Daten auf vier verschiedene Arten organisiert. Jeder Datensatz zeigt die gleichen Werte von vier Variablen: Land, Jahr, Bevölkerung und Anzahl der dokumentierten Fälle von TB (Tuberkulose), aber jeder Datensatz organisiert die Werte auf unterschiedliche Weise.\nDies sind alles Darstellungen derselben Daten, die jedoch nicht gleichermaßen einfach zu verwenden sind.\nMit welcher Tabelle ist es im Tidyverse viel einfacher zu arbeiten?\nTabelle 1, da sie tidy ist."
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-11",
    "href": "slides/slide-04-import-pivot.html#section-11",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "country\nyear\ncases\npopulation\n\n\n\n\nAfghanistan\n1999\n745\n19987071\n\n\nAfghanistan\n2000\n2666\n20595360\n\n\nBrazil\n1999\n37737\n172006362\n\n\nBrazil\n2000\n80488\n174504898\n\n\nChina\n1999\n212258\n1272915272\n\n\nChina\n2000\n213766\n1280428583\n\n\n\n\n\n\n\n\n\ntable1 |&gt;\n  mutate(rate = cases / population * 10000)\n\n\n\n# A tibble: 6 × 5\n  country      year  cases population  rate\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071 0.373\n2 Afghanistan  2000   2666   20595360 1.29 \n3 Brazil       1999  37737  172006362 2.19 \n4 Brazil       2000  80488  174504898 4.61 \n5 China        1999 212258 1272915272 1.67 \n6 China        2000 213766 1280428583 1.67 \n\n\n\n\nWenn wir die Tuberkuloserate für jedes Land pro 10,000 Einwohner berechnen möchten, dividieren wir einfach die Spalte cases durch die Spalte population und multiplizieren mit 10,000."
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-12",
    "href": "slides/slide-04-import-pivot.html#section-12",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "country\nyear\ntype\ncount\n\n\n\n\nAfghanistan\n1999\ncases\n745\n\n\nAfghanistan\n1999\npopulation\n19987071\n\n\nAfghanistan\n2000\ncases\n2666\n\n\nAfghanistan\n2000\npopulation\n20595360\n\n\nBrazil\n1999\ncases\n37737\n\n\nBrazil\n1999\npopulation\n172006362\n\n\nBrazil\n2000\ncases\n80488\n\n\nBrazil\n2000\npopulation\n174504898\n\n\nChina\n1999\ncases\n212258\n\n\nChina\n1999\npopulation\n1272915272\n\n\nChina\n2000\ncases\n213766\n\n\nChina\n2000\npopulation\n1280428583\n\n\n\n\n\n\n\n\n\ntable2 |&gt;\n  pivot_wider(\n    names_from = type,\n    values_from = count\n  ) |&gt;\n  mutate(rate = cases / population * 10000)\n\n\n\n# A tibble: 6 × 5\n  country      year  cases population  rate\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071 0.373\n2 Afghanistan  2000   2666   20595360 1.29 \n3 Brazil       1999  37737  172006362 2.19 \n4 Brazil       2000  80488  174504898 4.61 \n5 China        1999 212258 1272915272 1.67 \n6 China        2000 213766 1280428583 1.67 \n\n\n\n\nAllerdings ist es mit der zweiten Tabelle nicht so einfach. Um die Rate zu berechnen, müssen wir zunächst die Daten erweitern, um zwei neue Variablen zu erstellen, deren Namen vom type Variable abgeleitet sind."
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-13",
    "href": "slides/slide-04-import-pivot.html#section-13",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "country\nyear\nrate\n\n\n\n\nAfghanistan\n1999\n745/19987071\n\n\nAfghanistan\n2000\n2666/20595360\n\n\nBrazil\n1999\n37737/172006362\n\n\nBrazil\n2000\n80488/174504898\n\n\nChina\n1999\n212258/1272915272\n\n\nChina\n2000\n213766/1280428583\n\n\n\n\n\n\n\n\n\ntable3 |&gt;\n  separate_wider_delim(\n    cols = rate,\n    delim = \"/\",\n    names = c(\"cases\", \"population\")\n  ) |&gt;\n  mutate(\n    # separate_wider_delim() outputs character\n    cases = as.numeric(cases),\n    population = as.numeric(population),\n    rate = cases / population * 10000\n  )\n\n\n\n# A tibble: 6 × 5\n  country      year  cases population  rate\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071 0.373\n2 Afghanistan  2000   2666   20595360 1.29 \n3 Brazil       1999  37737  172006362 2.19 \n4 Brazil       2000  80488  174504898 4.61 \n5 China        1999 212258 1272915272 1.67 \n6 China        2000 213766 1280428583 1.67 \n\n\n\n\nDie dritte Tabelle erfordert einen anderen Ansatz. Wir müssen die rate Spalte in zwei Spalten aufteilen. Auch hier kommt mit Tidyr Abhilfe mit der Funktion separate_wider_delim().\nBeachtet, dass die Ausgabespalten den Datentyp character haben. Wir setzen ihren Typ auf numeric um, damit wir numerische Operationen ausführen können. Mehr dazu im nächsten Abschnitt."
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-14",
    "href": "slides/slide-04-import-pivot.html#section-14",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "country\ntype\n1999\n2000\n\n\n\n\nAfghanistan\ncases\n745\n2666\n\n\nAfghanistan\npopulation\n19987071\n20595360\n\n\nBrazil\ncases\n37737\n80488\n\n\nBrazil\npopulation\n172006362\n174504898\n\n\nChina\ncases\n212258\n213766\n\n\nChina\npopulation\n1272915272\n1280428583\n\n\n\n\n\n\n\n\n❓\n\n\n\n\ntable4 |&gt; \n  pivot_longer(cols = `1999`:`2000`, names_to = \"year\")\n\n\n# A tibble: 12 × 4\n   country     type       year       value\n   &lt;chr&gt;       &lt;chr&gt;      &lt;chr&gt;      &lt;dbl&gt;\n 1 Afghanistan cases      1999         745\n 2 Afghanistan cases      2000        2666\n 3 Afghanistan population 1999    19987071\n 4 Afghanistan population 2000    20595360\n 5 Brazil      cases      1999       37737\n 6 Brazil      cases      2000       80488\n 7 Brazil      population 1999   172006362\n 8 Brazil      population 2000   174504898\n 9 China       cases      1999      212258\n10 China       cases      2000      213766\n11 China       population 1999  1272915272\n12 China       population 2000  1280428583"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-15",
    "href": "slides/slide-04-import-pivot.html#section-15",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "country\ntype\n1999\n2000\n\n\n\n\nAfghanistan\ncases\n745\n2666\n\n\nAfghanistan\npopulation\n19987071\n20595360\n\n\nBrazil\ncases\n37737\n80488\n\n\nBrazil\npopulation\n172006362\n174504898\n\n\nChina\ncases\n212258\n213766\n\n\nChina\npopulation\n1272915272\n1280428583\n\n\n\n\n\n\n\n\n\ntable4 |&gt; \n  pivot_longer(cols = `1999`:`2000`, names_to = \"year\") |&gt; \n  pivot_wider(names_from = type, values_from = value) |&gt; \n  mutate(rate = cases / population * 10000)\n\n\n# A tibble: 6 × 5\n  country     year   cases population  rate\n  &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanistan 1999     745   19987071 0.373\n2 Afghanistan 2000    2666   20595360 1.29 \n3 Brazil      1999   37737  172006362 2.19 \n4 Brazil      2000   80488  174504898 4.61 \n5 China       1999  212258 1272915272 1.67 \n6 China       2000  213766 1280428583 1.67"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#praktikum-04c-daten-pivotieren",
    "href": "slides/slide-04-import-pivot.html#praktikum-04c-daten-pivotieren",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Praktikum 04c: Daten pivotieren",
    "text": "Praktikum 04c: Daten pivotieren\nprak-04c-pivot.qmd\n −+ 30:00"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-16",
    "href": "slides/slide-04-import-pivot.html#section-16",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "R (1993) \\(\\leftarrow\\) S (1976) \\(\\leftarrow\\) APL (1962)\n\n\nHisorische Gründe R, which was born in 1993, is based on an older language S (1970s), which in turn is based on a yet older language APL (1960s). APL was developed on a special keyboard which had a &lt;- key. At the time, equality was not tested with == but with =. So it was decided that assignment would be done with &lt;- and equality would be tested with the equal sign."
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#the-tidyverse-style-guide",
    "href": "slides/slide-04-import-pivot.html#the-tidyverse-style-guide",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "The tidyverse Style Guide",
    "text": "The tidyverse Style Guide\n\n“Ein guter Kodierungsstil ist wie eine korrekte Zeichensetzung: Man kann auch ohne sie auskommen, abersiemachtalleseinfacherzulesen.” – Hadley Wickham\n\n\n\n# Good\ndf |&gt;\n  mutate(\n    sum_xy = x + y,\n    prod_xy = x * y\n  ) |&gt;\n  arrange(sum_xy)\n\n# Bad\ndf|&gt;mutate(  sum_xy=x+y,prod_xy=x*y)|&gt;arrange( sum_xy )"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#styler",
    "href": "slides/slide-04-import-pivot.html#styler",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "styler",
    "text": "styler\n\n\n\ninstall.packages(\"styler\")"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#praktikum-code-style",
    "href": "slides/slide-04-import-pivot.html#praktikum-code-style",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "Praktikum: Code-Style",
    "text": "Praktikum: Code-Style\nDen Code in eine neue Quarto-Datei formatieren:\n\nlibrary( palmerpenguins )\nlibrary(tidyverse   )\n\npenguins|&gt;filter( species==\"Adelie\" )|&gt;group_by(island)|&gt;summarize(n=n(),mean_bill=\nmean(bill_length_mm,na.rm=TRUE))|&gt;filter(n&gt;10)\n\npenguins|&gt;filter(   species==\"Chinstrap\",island%in%c(\"Dream\",\"Biscoe\"),flipper_length_mm&gt;190,\nbody_mass_g&lt;4000)|&gt;group_by(sex)|&gt;summarize(\nmean_mass=mean(body_mass_g,na.rm=TRUE),count=n())|&gt;filter(count&gt;5)\n\n −+ 10:00"
  },
  {
    "objectID": "slides/slide-04-import-pivot.html#section-17",
    "href": "slides/slide-04-import-pivot.html#section-17",
    "title": "Daten importieren, exportieren, zusammenfügen und pivotieren",
    "section": "",
    "text": "Slides created via revealjs and Quarto.\nAccess slides as PDF.\nAll material is licensed under Creative Commons Attribution Share Alike 4.0 International."
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#working-directory",
    "href": "slides/slide-02b-dplyr.html#working-directory",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Working Directory",
    "text": "Working Directory\n\n\n\nsetwd() ↔︎️ getwd()\n\n\nRStudio Projekte 🎆\n\n\n\n\n\nR hat eine leistungsfähige Vorstellung vom Arbeitsverzeichnis oder working directory. In diesem working directory sucht R nach Dateien, die ihr laden möchtet, und legt alle Dateien ab, die ihr speichern möchtet. RStudio zeigt eur aktuelles working directory oben in der Console an.\nAls R-Anfänger ist es in Ordnung, wenn eur working directory eur Home directory, Dokumente, Austausch oder ein anderes seltsames Ordner auf eurem Computer ist. Ihr werdet jedoch in naher Zukunft langsam aber sicher keine Anfänger mehr sein, hoffentlich.\nSchon bald solltet ihr dazu übergehen, eure Projekte in Ordner zu organisieren und bei der Arbeit an einem Projekt das working directory von R auf das Ordner zu setzen. Ihr könntet das mit setwd() machen aber es gibt einen viel besseren weg: RStudio Projekte."
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#rstudio-projekte",
    "href": "slides/slide-02b-dplyr.html#rstudio-projekte",
    "title": "Daten transformieren mit {dplyr}",
    "section": "RStudio-Projekte",
    "text": "RStudio-Projekte\n\n\nEiner der stärksten Aspekte von RStudio:\n\n\nRelative Pfade (setwd() nicht erforderlich)\nDateien und Ordner zusammen, die zusammengehören"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#praktikum-rstudio-projekte",
    "href": "slides/slide-02b-dplyr.html#praktikum-rstudio-projekte",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Praktikum: RStudio-Projekte",
    "text": "Praktikum: RStudio-Projekte\n\n\n\nErstellt ein neues Quarto-Projekt namens test\n\n\n\n\n\n\nErstellt ein RStudio-Project mit einem existierenden Ordner\n\n\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#section-1",
    "href": "slides/slide-02b-dplyr.html#section-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "",
    "text": "Aufräumen und Transformieren werden zusammen als “wrangling” bezeichnet, weil es sich oft wie ein Kampf anfühlt, die Daten in eine Form zu bringen, mit der man gut arbeiten kann!\nThis task uses the most time!\n\n\n\nIllustration von @allison_horst"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#daten-transformation-mit-dplyr",
    "href": "slides/slide-02b-dplyr.html#daten-transformation-mit-dplyr",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten-Transformation mit {dplyr}",
    "text": "Daten-Transformation mit {dplyr}\n\n\n\n\n\n\nZeilen: filtern, anordnen\nSpalten: auswählen, anordnen, umbenennen, erstellen\nGruppen: zusammenfassen, zählen\nTabellen: zusammenfügen"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#regeln-der-dplyr-functions",
    "href": "slides/slide-02b-dplyr.html#regeln-der-dplyr-functions",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Regeln der {dplyr}-Functions",
    "text": "Regeln der {dplyr}-Functions\nBEFEHL(DATEN_ZUM_UMWANDELN, WAS_MACHT_ES)\n\n\ndas erste Argument ist immer ein data frame\ndie nachfolgenden Argumente geben an was mit dem data frame gemacht werden soll\nGeben immer ein data frame zurück\nändern nichts an Ort und Stelle"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#daten",
    "href": "slides/slide-02b-dplyr.html#daten",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten",
    "text": "Daten"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#daten-1",
    "href": "slides/slide-02b-dplyr.html#daten-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten",
    "text": "Daten\n\nlibrary(tidyverse)\nabstimmung &lt;- read_delim(\"data/ogd_abstimmungsarchiv_11990.csv\", delim = \";\")\nglimpse(abstimmung)\n\n\n\nRows: 31,734\nColumns: 21\n$ date                   &lt;date&gt; 2017-05-21, 2017-05-21, 2017-05-21, 2017-05-21…\n$ entity_id              &lt;dbl&gt; 2765, 2766, 2766, 2766, 2766, 2766, 2767, 2767,…\n$ name                   &lt;chr&gt; \"Binningen\", \"Birsfelden\", \"Birsfelden\", \"Birsf…\n$ district               &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"Arlesheim\", \"Arleshe…\n$ vote_id                &lt;chr&gt; \"20170521_K5\", \"20170521_E1\", \"20170521_K2\", \"2…\n$ domain                 &lt;chr&gt; \"canton\", \"federation\", \"canton\", \"canton\", \"ca…\n$ type                   &lt;chr&gt; \"proposal\", \"proposal\", \"proposal\", \"proposal\",…\n$ title_de_CH            &lt;chr&gt; \"Änderung der Verfassung des Kantons Basel-Land…\n$ counted                &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE,…\n$ answer                 &lt;chr&gt; \"accepted\", \"accepted\", \"rejected\", \"rejected\",…\n$ percent_yeas           &lt;dbl&gt; 87.93388, 60.14460, 29.46679, 26.06433, 35.0667…\n$ percent_nays           &lt;dbl&gt; 12.06612, 39.85540, 70.53321, 73.93567, 64.9332…\n$ percent_turnout        &lt;dbl&gt; 46.24283, 34.89440, 34.20569, 33.97612, 33.8689…\n$ eligible_voters        &lt;dbl&gt; 9941, 6534, 6534, 6534, 6534, 6534, 4192, 4192,…\n$ expats                 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ empty                  &lt;dbl&gt; 321, 22, 54, 62, 71, 127, 16, 24, 46, 57, 123, …\n$ invalid                &lt;dbl&gt; 41, 45, 43, 44, 46, 48, 0, 0, 0, 0, 1, 26, 24, …\n$ yeas                   &lt;dbl&gt; 3724, 1331, 630, 551, 735, 1710, 1056, 939, 484…\n$ nays                   &lt;dbl&gt; 511, 882, 1508, 1563, 1361, 292, 1131, 1264, 16…\n$ link_to_canton_results &lt;chr&gt; \"https://data.bl.ch/explore/dataset/10500/table…\n$ url_web                &lt;chr&gt; \"https://abstimmungen.bl.ch/vote/anderung-der-v…"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#zeilen-filtern",
    "href": "slides/slide-02b-dplyr.html#zeilen-filtern",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Zeilen filtern",
    "text": "Zeilen filtern\n\nfilter(Datensatz, Zeilenbedingung)"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#zeilen-filtern-1",
    "href": "slides/slide-02b-dplyr.html#zeilen-filtern-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Zeilen filtern",
    "text": "Zeilen filtern\n\n\n\nfilter(\n  abstimmung, \n  name == \"Oberwil (BL)\"\n)\n\n\n\n\n{dplyr}-Befehl: filter()"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#zeilen-filtern-2",
    "href": "slides/slide-02b-dplyr.html#zeilen-filtern-2",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Zeilen filtern",
    "text": "Zeilen filtern\n\n\n\nfilter(\n  abstimmung, \n  name == \"Oberwil (BL)\"\n)\n\n\n\n{dplyr}-Befehl: filter()\nErstes Argument: data frame"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#zeilen-filtern-3",
    "href": "slides/slide-02b-dplyr.html#zeilen-filtern-3",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Zeilen filtern",
    "text": "Zeilen filtern\n\n\n\nfilter(\n  abstimmung, \n  name == \"Oberwil (BL)\"\n)\n\n\n\n{dplyr}-Befehl: filter()\nErstes Argument: data frame\nZweites Argument: Zeilenbedingung"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#zeilen-filtern-4",
    "href": "slides/slide-02b-dplyr.html#zeilen-filtern-4",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Zeilen filtern",
    "text": "Zeilen filtern\n\n\n\nfilter(\n  abstimmung, \n  name == \"Oberwil (BL)\"\n)\n\n# A tibble: 369 × 21\n   date       entity_id name   district vote_id domain type  title_de_CH counted\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n 1 2017-05-21      2771 Oberw… Arleshe… 201705… feder… prop… Energieges… TRUE   \n 2 2017-05-21      2771 Oberw… Arleshe… 201705… canton prop… Formuliert… TRUE   \n 3 2017-05-21      2771 Oberw… Arleshe… 201705… canton prop… Nicht form… TRUE   \n 4 2017-05-21      2771 Oberw… Arleshe… 201705… canton prop… Änderung d… TRUE   \n 5 2017-05-21      2771 Oberw… Arleshe… 201705… canton prop… Änderung d… TRUE   \n 6 2017-02-12      2771 Oberw… Arleshe… 201702… feder… prop… Bundesbesc… TRUE   \n 7 2017-02-12      2771 Oberw… Arleshe… 201702… feder… prop… Bundesbesc… TRUE   \n 8 2017-02-12      2771 Oberw… Arleshe… 201702… feder… prop… Bundesgese… TRUE   \n 9 2016-11-27      2771 Oberw… Arleshe… 201611… feder… prop… Volksiniti… TRUE   \n10 2016-11-27      2771 Oberw… Arleshe… 201611… canton coun… Gegenvorsc… TRUE   \n# ℹ 359 more rows\n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;\n\n\n\n\n{dplyr}-Befehl: filter()\nErstes Argument: data frame\nZweites Argument: Zeilenbedingung\nResultat: data frame"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#zeilen-filtern-5",
    "href": "slides/slide-02b-dplyr.html#zeilen-filtern-5",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Zeilen filtern",
    "text": "Zeilen filtern\n\nfilter(\n  abstimmung, \n  name == \"Oberwil (BL)\" & percent_turnout &gt; 60\n)"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#zeilen-filtern-6",
    "href": "slides/slide-02b-dplyr.html#zeilen-filtern-6",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Zeilen filtern",
    "text": "Zeilen filtern\n\nfilter(\n  abstimmung, \n  name == \"Oberwil (BL)\" & percent_turnout &gt; 60\n)\n\n# A tibble: 12 × 21\n   date       entity_id name   district vote_id domain type  title_de_CH counted\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n 1 2016-02-28      2771 Oberw… Arleshe… 201602… feder… prop… die Volksi… TRUE   \n 2 2016-02-28      2771 Oberw… Arleshe… 201602… feder… prop… die Volksi… TRUE   \n 3 2016-02-28      2771 Oberw… Arleshe… 201602… feder… prop… die Volksi… TRUE   \n 4 2016-02-28      2771 Oberw… Arleshe… 201602… feder… prop… die Änderu… TRUE   \n 5 2021-11-28      2771 Oberw… Arleshe… 202111… feder… prop… Volksiniti… TRUE   \n 6 2021-11-28      2771 Oberw… Arleshe… 202111… feder… prop… Volksiniti… TRUE   \n 7 2021-11-28      2771 Oberw… Arleshe… 202111… feder… prop… Änderung v… TRUE   \n 8 2020-09-27      2771 Oberw… Arleshe… 202009… feder… prop… Volksiniti… TRUE   \n 9 2020-09-27      2771 Oberw… Arleshe… 202009… feder… prop… Änderung v… TRUE   \n10 2020-09-27      2771 Oberw… Arleshe… 202009… feder… prop… Bundesbesc… TRUE   \n11 2005-06-05      2771 Oberw… Arleshe… 200506… feder… prop… Bundesbesc… TRUE   \n12 2005-06-05      2771 Oberw… Arleshe… 200506… feder… prop… Bundesgese… TRUE   \n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#logische-operatoren",
    "href": "slides/slide-02b-dplyr.html#logische-operatoren",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Logische Operatoren",
    "text": "Logische Operatoren\n\n\n&lt;\n&lt;=\n&gt;\n&gt;=\n==\n!=\nx & y\n\nkleiner\nkleiner gleich\ngrösser\ngrösser gleich\ngenau gleich\nungleich\nx UND y\n\nx | y\nis.na(x)\n!is.na(x)\nx %in% y\n!(x %in% y)\n!x\n\nx Oder y\nx ist NA\nx ist nicht NA\nx ist in y\nx ist nicht in y\nnicht x"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#reihenfolge-der-zeilen-ändern",
    "href": "slides/slide-02b-dplyr.html#reihenfolge-der-zeilen-ändern",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Reihenfolge der Zeilen ändern",
    "text": "Reihenfolge der Zeilen ändern\n\narrange(Datensatz, Spalte)"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#reihenfolge-der-zeilen-ändern-1",
    "href": "slides/slide-02b-dplyr.html#reihenfolge-der-zeilen-ändern-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Reihenfolge der Zeilen ändern",
    "text": "Reihenfolge der Zeilen ändern\n\narrange(abstimmung, date)\n\n\n\n# A tibble: 31,734 × 21\n   date       entity_id name   district vote_id domain type  title_de_CH counted\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n 1 2003-02-09      2761 Aesch… Arleshe… 200302… feder… prop… Volksrechte TRUE   \n 2 2003-02-09      2761 Aesch… Arleshe… 200302… feder… prop… Kantonale … TRUE   \n 3 2003-02-09      2762 Allsc… Arleshe… 200302… feder… prop… Volksrechte TRUE   \n 4 2003-02-09      2762 Allsc… Arleshe… 200302… feder… prop… Kantonale … TRUE   \n 5 2003-02-09      2763 Arles… Arleshe… 200302… feder… prop… Volksrechte TRUE   \n 6 2003-02-09      2763 Arles… Arleshe… 200302… feder… prop… Kantonale … TRUE   \n 7 2003-02-09      2764 Biel-… Arleshe… 200302… feder… prop… Volksrechte TRUE   \n 8 2003-02-09      2764 Biel-… Arleshe… 200302… feder… prop… Kantonale … TRUE   \n 9 2003-02-09      2765 Binni… Arleshe… 200302… feder… prop… Volksrechte TRUE   \n10 2003-02-09      2765 Binni… Arleshe… 200302… feder… prop… Kantonale … TRUE   \n# ℹ 31,724 more rows\n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#reihenfolge-der-zeilen-ändern-2",
    "href": "slides/slide-02b-dplyr.html#reihenfolge-der-zeilen-ändern-2",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Reihenfolge der Zeilen ändern",
    "text": "Reihenfolge der Zeilen ändern\n\narrange(abstimmung, desc(date))\n\n# A tibble: 31,734 × 21\n   date       entity_id name   district vote_id domain type  title_de_CH counted\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n 1 2024-11-24      2761 Aesch… Arleshe… 202411… feder… prop… Bundesbesc… TRUE   \n 2 2024-11-24      2761 Aesch… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 3 2024-11-24      2761 Aesch… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 4 2024-11-24      2761 Aesch… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 5 2024-11-24      2762 Allsc… Arleshe… 202411… feder… prop… Bundesbesc… TRUE   \n 6 2024-11-24      2762 Allsc… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 7 2024-11-24      2762 Allsc… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 8 2024-11-24      2762 Allsc… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 9 2024-11-24      2763 Arles… Arleshe… 202411… feder… prop… Bundesbesc… TRUE   \n10 2024-11-24      2763 Arles… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n# ℹ 31,724 more rows\n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#eindeutige-zeilen-finden",
    "href": "slides/slide-02b-dplyr.html#eindeutige-zeilen-finden",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eindeutige Zeilen finden",
    "text": "Eindeutige Zeilen finden\n\n\n\ndistinct(abstimmung, district)\n\n\n\n# A tibble: 5 × 1\n  district  \n  &lt;chr&gt;     \n1 Arlesheim \n2 Laufen    \n3 Liestal   \n4 Sissach   \n5 Waldenburg\n\n\n\n\n\ncount(abstimmung, district)\n\n\n\n# A tibble: 5 × 2\n  district       n\n  &lt;chr&gt;      &lt;int&gt;\n1 Arlesheim   5535\n2 Laufen      4797\n3 Liestal     5166\n4 Sissach    10701\n5 Waldenburg  5535\n\n\n\n\n\ndistinct() findet alle eindeutigen Zeilen in einem Datensatz, bearbeitet also technisch gesehen in erster Linie die Zeilen."
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#zeilen-nach-indices-auswählen",
    "href": "slides/slide-02b-dplyr.html#zeilen-nach-indices-auswählen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Zeilen nach Indices auswählen",
    "text": "Zeilen nach Indices auswählen\nslice()-Familie\n\n\n\n\nslice(abstimmung, 21:23)\n\n# A tibble: 3 × 21\n  date       entity_id name    district vote_id domain type  title_de_CH counted\n  &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n1 2017-05-21      2769 Münche… Arleshe… 201705… canton prop… Änderung d… TRUE   \n2 2017-05-21      2770 Muttenz Arleshe… 201705… feder… prop… Energieges… TRUE   \n3 2017-05-21      2770 Muttenz Arleshe… 201705… canton prop… Formuliert… TRUE   \n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;\n\n\n\n\n\n\nslice_sample(abstimmung, n = 3)\n\n# A tibble: 3 × 21\n  date       entity_id name    district vote_id domain type  title_de_CH counted\n  &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n1 2008-09-28      2824 Frenke… Liestal  200809… canton prop… \"Landratsb… TRUE   \n2 2019-02-10      2772 Pfeffi… Arleshe… 201902… canton coun… \"Gegenvors… TRUE   \n3 2014-05-18      2775 Therwil Arleshe… 201405… feder… prop… \"Bundesbes… TRUE   \n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#praktikum---zeilen-transformieren-mit-dplyr-1",
    "href": "slides/slide-02b-dplyr.html#praktikum---zeilen-transformieren-mit-dplyr-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Praktikum - Zeilen transformieren mit {dplyr}",
    "text": "Praktikum - Zeilen transformieren mit {dplyr}\nprak-02c-dplyr-abstimmung.qmd\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-02b-dplyr.html#section-2",
    "href": "slides/slide-02b-dplyr.html#section-2",
    "title": "Daten transformieren mit {dplyr}",
    "section": "",
    "text": "Slides created via revealjs and Quarto.\nAccess slides as PDF.\nAll material is licensed under Creative Commons Attribution Share Alike 4.0 International."
  },
  {
    "objectID": "slides/slide-01-intro.html#kennenlernen",
    "href": "slides/slide-01-intro.html#kennenlernen",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Kennenlernen",
    "text": "Kennenlernen\n\nDienststelle / Aufgabe\nwas willst du lernen?\nwas machst du gerne ausserhalb der Arbeit?"
  },
  {
    "objectID": "slides/slide-01-intro.html#reproduzierbare-datenanalyse",
    "href": "slides/slide-01-intro.html#reproduzierbare-datenanalyse",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Reproduzierbare Datenanalyse",
    "text": "Reproduzierbare Datenanalyse\n❓\n\n\nTabellen und Grafiken aus Daten und Code reproduzieren?\nCode in anderen Skripten verwenden?\nStimmt meine Umgebung mit der meiner Kollegen/innen überein?\n\n\n\nWas macht eine Datenanalyse reproduzierbar?\n\nKönnen Tabellen und Grafiken aus den Daten und dem Code reproduziert werden?\nKann Code in anderen Skripten verwendet werden?\nStimmt meine Umgebung mit der meiner Kollegen/innen überein?"
  },
  {
    "objectID": "slides/slide-01-intro.html#section",
    "href": "slides/slide-01-intro.html#section",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Hier ist ein Diagramm aus dem Buch R for Data Science, das wir für den Kurs verwenden werden."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-1",
    "href": "slides/slide-01-intro.html#section-1",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Zuerst müsst ihr eure Daten in R importieren. Dies bedeutet normalerweise, dass ihr gespeicherte Daten übernimmt:\n\n\nin einer Datei\nin einer Datenbank,\noder Webanwendung, und ihr sie in R lädt."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-2",
    "href": "slides/slide-01-intro.html#section-2",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Sobald ihr eure Daten importiert habt, solltest ihr sie aufräumen. Das heisst, sie in eine Struktur zu bringen, die es euch ermöglicht, euch auf die Fragen zu euren Daten zu konzentrieren und nicht auf das Format, in dem sie vorliegen müssen.\n\nDies ist der Schritt, auf den wir bei weitem die meiste Zeit verwenden. Man schätzt, dass wir etwa 80 % unserer Zeit mit dem Bereinigen und Aufräumen von Daten verbringen, damit wir sie für unsere Analysen verwenden können.\n\nSobald eure Daten aufgeräumt sind, besteht ein erster gemeinsamer Schritt darin, sie zu transformieren. Dies beinhaltet:\n\n\nEingrenzung auf das, was euch interessiert (z. B. alle Menschen ohne Toilette in einem Bezirk oder alle Daten des letzten Jahres)\nErstellung neuer Variablen aus vorhandenen Variablen (wie z. B. die Toilettenverteilung, d. h. die Anzahl der Personen pro Toilette)\nBerechnung zusammenfassender Statistiken (z. B. Zählungen oder der Mittelwert).\n\nDie Kombination aus Aufräumen und Transformieren wird auch als “Wrangling” bezeichnet, da es sich oft wie ein Kampf anfühlt, die Daten in eine Form zu bringen, mit der man gut arbeiten kann.\nSobald ihr aufgeräumte Daten mit den benötigten Variablen habt, gibt es zwei Hauptmotoren der Wissensgenerierung: - Visualisierung - und Modellierung. Beide haben komplementäre Stärken und Schwächen, so dass bei einer echten Analyse immer wieder zwischen ihnen gewechselt wird."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-3",
    "href": "slides/slide-01-intro.html#section-3",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Visualisierung ist eine grundlegend menschliche Tätigkeit. Eine gute Visualisierung wird euch Dinge zeigen, die ihr nicht erwartet habt, oder neue Fragen zu den Daten aufwerfen."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-4",
    "href": "slides/slide-01-intro.html#section-4",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Modelle sind ergänzende Instrumente zur Visualisierung. Wenn ihr eure Fragen hinreichend präzise formuliert habt, könntet ihr ein Modell verwenden, um sie zu beantworten.\n\nIn diesem Kurs spielen sie eine sehr kleine Rolle. Ich bin aber überzeugt, dass ihr eure Kenntnisse über die Modellierung erweitern könntet, sobald ihr die Grundprinzipien der Sprache R verstanden habt."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-6",
    "href": "slides/slide-01-intro.html#section-6",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Der letzte Schritt von Data Science ist die Kommunikation, ein absolut kritischer Teil eines jeden Datenanalyseprojekts. Es spielt keine Rolle, wie gut eure Modelle und Visualisierungen zum Verständnis der Daten geführt habt, wenn ihr eure Ergebnisse nicht auch anderen vermitteln könnt. Und das ist ein Teil, in dem R wirklich stark geworden ist."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-7",
    "href": "slides/slide-01-intro.html#section-7",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Dies ist eine etwas irreführende Darstellung. Kommunikation ist ein fester Bestandteil des datenwissenschaftlichen Prozesses. Man analysiert nicht und kommuniziert dann am Ende. Vielmehr dokumentiert und kommuniziert man während des Prozesses."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-8",
    "href": "slides/slide-01-intro.html#section-8",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Zuerst müsst ihr eure Daten in R importieren. Dies bedeutet normalerweise, dass ihr gespeicherte Daten übernimmt:\n\n\nin einer Datei\nin einer Datenbank,\noder Webanwendung, und ihr sie in R lädt.\n\n\nSobald ihr eure Daten importiert habt, solltest ihr sie aufräumen. Das heisst, sie in eine Struktur zu bringen, die es euch ermöglicht, euch auf die Fragen zu euren Daten zu konzentrieren und nicht auf das Format, in dem sie vorliegen müssen.\n\nDies ist der Schritt, auf den wir bei weitem die meiste Zeit verwenden. Man schätzt, dass wir etwa 80 % unserer Zeit mit dem Bereinigen und Aufräumen von Daten verbringen, damit wir sie für unsere Analysen verwenden können.\n\nSobald eure Daten aufgeräumt sind, besteht ein erster gemeinsamer Schritt darin, sie zu transformieren. Dies beinhaltet:\n\n\nEingrenzung auf das, was euch interessiert (z. B. alle Menschen ohne Toilette in einem Bezirk oder alle Daten des letzten Jahres)\nErstellung neuer Variablen aus vorhandenen Variablen (wie z. B. die Toilettenverteilung, d. h. die Anzahl der Personen pro Toilette)\nBerechnung zusammenfassender Statistiken (z. B. Zählungen oder der Mittelwert).\n\nDie Kombination aus Aufräumen und Transformieren wird auch als “Wrangling” bezeichnet, da es sich oft wie ein Kampf anfühlt, die Daten in eine Form zu bringen, mit der man gut arbeiten kann.\nSobald ihr aufgeräumte Daten mit den benötigten Variablen habt, gibt es zwei Hauptmotoren der Wissensgenerierung: - Visualisierung - und Modellierung. Beide haben komplementäre Stärken und Schwächen, so dass bei einer echten Analyse immer wieder zwischen ihnen gewechselt wird.\n\nVisualisierung ist eine grundlegend menschliche Tätigkeit. Eine gute Visualisierung wird euch Dinge zeigen, die ihr nicht erwartet habt, oder neue Fragen zu den Daten aufwerfen.\nModelle sind ergänzende Instrumente zur Visualisierung. Wenn ihr eure Fragen hinreichend präzise formuliert habt, könntet ihr ein Modell verwenden, um sie zu beantworten.\n\nIn diesem Kurs spielen sie eine sehr kleine Rolle. Ich bin aber überzeugt, dass ihr eure Kenntnisse über die Modellierung erweitern könntet, sobald ihr die Grundprinzipien der Sprache R verstanden habt.\n\nDer letzte Schritt von Data Science ist die Kommunikation, ein absolut kritischer Teil eines jeden Datenanalyseprojekts. Es spielt keine Rolle, wie gut eure Modelle und Visualisierungen zum Verständnis der Daten geführt habt, wenn ihr eure Ergebnisse nicht auch anderen vermitteln könnt. Und das ist ein Teil, in dem R wirklich stark geworden ist."
  },
  {
    "objectID": "slides/slide-01-intro.html#kurs-werkzeuge",
    "href": "slides/slide-01-intro.html#kurs-werkzeuge",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Kurs-Werkzeuge",
    "text": "Kurs-Werkzeuge\n\n\nProgrammierung:\n\nR\nRStudio\ntidyverse\nQuarto\n\n\n\nVersionskontrolle & Kollaboration:\n\n\n\n\n\n\n\n\n\nReproduzierbare Datenanalyse\n\n\n\n\\(\\rightarrow\\) Gewinne Erkenntnisse aus Daten, reproduzierbar (mit kompetenter Programmierung und Versionskontrolle) und gemeinsam unter Verwendung moderner Programmierwerkzeuge und -techniken\n(R Markdown)"
  },
  {
    "objectID": "slides/slide-01-intro.html#hallo-r",
    "href": "slides/slide-01-intro.html#hallo-r",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Hallo R! 👋",
    "text": "Hallo R! 👋\n\n\n\n\nDu brauchst die Sprache\n\n\n\n\nund das IDE\n\n\n\n\n\nR ist eine Open-Source-Programmiersprache für Statistik\nR ist auch eine Umgebung für statistische Berechnungen und Grafiken\nEs ist leicht mit Packages erweiterbar\n\nRStudio ist eine grafische Benutzeroberfläche, IDE = Integrated Development Environment. Du könntest R-code in einer anderen Umgebung, aber RStudio wird sehr häufig von R-Programmierern und Data Scientists verwendet.\nWenn R der Motor ist, dann ist RStudio das Dashboard."
  },
  {
    "objectID": "slides/slide-01-intro.html#r-packages",
    "href": "slides/slide-01-intro.html#r-packages",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "R-Packages",
    "text": "R-Packages\n Du benutzt R durch packages\n\ninstall.packages(\"package\")\nlibrary(package)\n\n\n …die functions enthalten\n\n\n …die häufig nur Befehle sind\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nComprehensive R Archive Network (CRAN)\n\n\n\nPackages sind die grundlegenden Einheiten von reproduzierbarem R-Code\nPackages enthalten:\n\nwiederverwendbare R Funktionen,\ndie Dokumentation welche beschreibt wie sie verwendet werden,\nund Beispieldaten\n\nOctober 2023 &gt; 20,000 R-Packages auf CRAN (Comprehensive R Archive Network)\nWir werden mit einem kleinen (aber wichtigen) Teil arbeiten!"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-10",
    "href": "slides/slide-01-intro.html#section-10",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Dies ist die Umgebung, in der wir unsere Programmierung durchführen werden. Eine Seite ist für Menschen lesbar, die andere enthält eine Mischung aus Code, Text und Symbolen, die wir vielleicht nicht wirklich verstehen. Mein Ziel heute ist, dass ihr den Code und den seltsamen Text auf der einen Seite versteht und mit dem menschenlesbaren Teil auf der rechten Seite verknüpfen könntet."
  },
  {
    "objectID": "slides/slide-01-intro.html#rstudio",
    "href": "slides/slide-01-intro.html#rstudio",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/slide-01-intro.html#rstudio-1",
    "href": "slides/slide-01-intro.html#rstudio-1",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/slide-01-intro.html#rstudio-2",
    "href": "slides/slide-01-intro.html#rstudio-2",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/slide-01-intro.html#rstudio-3",
    "href": "slides/slide-01-intro.html#rstudio-3",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/slide-01-intro.html#rstudio-4",
    "href": "slides/slide-01-intro.html#rstudio-4",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "RStudio",
    "text": "RStudio"
  },
  {
    "objectID": "slides/slide-01-intro.html#rstudio-und-r-wesentliches",
    "href": "slides/slide-01-intro.html#rstudio-und-r-wesentliches",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "RStudio und R-wesentliches",
    "text": "RStudio und R-wesentliches\n\n\nShow R shortcuts:\n\nPane layout: Tools &gt; Global Options &gt; Pane Layout\nAssignment operator: Alt + -\nZoom in panes:\n\nAll panes: Ctrl + Shift + 0\nCode Viewer: Ctrl + Shift + 1\nViewer: Ctrl + Shift + 9\n\n\nThe $ operator."
  },
  {
    "objectID": "slides/slide-01-intro.html#tidyverse",
    "href": "slides/slide-01-intro.html#tidyverse",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Tidyverse",
    "text": "Tidyverse\n\n\nTidyverse ist ine Metalibrary mit 9 Packages = Ein logisch zusammenhängendes System von R Packages zur - Daten Aufbereitung - Daten Exploration - Daten Visualisierung - Daten Modellierung - Eine Designphilosophie, Grammatik und Daten Struktur - Entwickelt um Produktivität zu unterstützen."
  },
  {
    "objectID": "slides/slide-01-intro.html#data-science-lifecycle-1",
    "href": "slides/slide-01-intro.html#data-science-lifecycle-1",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Data Science Lifecycle",
    "text": "Data Science Lifecycle"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-12",
    "href": "slides/slide-01-intro.html#section-12",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Text wird als reiner Text interpretiert (Markdown). Code muss sich in einem code chunk befinden oder auch inline."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-17",
    "href": "slides/slide-01-intro.html#section-17",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Text → Markdown\n\n\n\nCode → code chunk\n\n\n```{r}\nsqrt(1/5)\n```\n\n[1] 0.4472136\n\n\n\n\n\nCode und Text → inline code\n`​r sqrt(1/5)` → 0.4472136"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-18",
    "href": "slides/slide-01-intro.html#section-18",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Last uns beginnen mit einem Beispiel für eine Datenanalyse aus der Generalversammlung der Vereinten Nationen (United Nations General Assembly).\nWir werden uns ansehen, wie die Länder über bestimmte Themen abgestimmt haben."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-21",
    "href": "slides/slide-01-intro.html#section-21",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "CodePlot\n\n\n\n```{r}\n#| code-line-numbers: \"|5-7|8|16|22\"\n#| eval: false\n\nun_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\") |&gt;\n  filter(country %in% c(\"Algeria\", \"Switzerland\", \"United Kingdom\")) |&gt;\n  mutate(\n    year = year(date),\n    issue = fct_relevel(issue, \"Arms control and disarmament\"),\n    issue = fct_relevel(issue, \"Palestinian conflict\", after = Inf)\n  ) |&gt;\n  group_by(country, year, issue) |&gt;\n  summarise(percent_yes = mean(vote == \"yes\")) |&gt;\n  ggplot(mapping = aes(x = year, y = percent_yes, colour = country)) +\n  geom_point(alpha = 0.4, size = 1) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  facet_wrap(~issue) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(\n    title = \"Percentage of 'Yes' votes in the UN General Assembly\",\n    subtitle = paste(un_roll_calls |&gt; summarise(min(year(date))) |&gt; pull(), \"to\", un_roll_calls |&gt; summarise(max(year(date))) |&gt; pull()),\n    colour = \"Country\",\n    x = \"Year\",\n    y = \"% Yes\"\n  ) +\n  theme_minimal() +\n  theme(\n    text = element_text(size = 8)\n  )\n```"
  },
  {
    "objectID": "slides/slide-01-intro.html#praktikum-01a-un-votes",
    "href": "slides/slide-01-intro.html#praktikum-01a-un-votes",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Praktikum 01a: UN Votes",
    "text": "Praktikum 01a: UN Votes\nprak-01a-unvotes.qmd\n\nRender oder Ctrl + Shift + K,\nandere Länder auswählen.\n\n −+ 20:00 \n\n👀 setwd(): More &gt; Set as Working Directory"
  },
  {
    "objectID": "slides/slide-01-intro.html#praktikum-01b-quarto-bechdel-test",
    "href": "slides/slide-01-intro.html#praktikum-01b-quarto-bechdel-test",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Praktikum 01b: Quarto – Bechdel Test",
    "text": "Praktikum 01b: Quarto – Bechdel Test\nprak-01b-bechdel.qmd\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-01-intro.html#r-package-ggplot2",
    "href": "slides/slide-01-intro.html#r-package-ggplot2",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "R Package ggplot2",
    "text": "R Package ggplot2\n\n\n\n\n\nGrammar of Graphics\n\n\n\n\nStreudiagramm (Scatterplot)\nVerteilungen visualisieren\nBeziehungen visualisieren \n\n\n\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], \n                     y = [y-variable])) +\n   geom_xxx() +\n   other options\n\n\n\n\n\nggplot2 is tidyverse’s data visualization package\ngg in ggplot2 stands for Grammar of Graphics\nInspired by the book Grammar of Graphics by Leland Wilkinson\nDocumentation: https://ggplot2.tidyverse.org/\nBook: https://ggplot2-book.org"
  },
  {
    "objectID": "slides/slide-01-intro.html#r-package-ggplot2-1",
    "href": "slides/slide-01-intro.html#r-package-ggplot2-1",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "R Package ggplot2",
    "text": "R Package ggplot2\n\n\n\n\nGrammar of Graphics\n\n\nStreudiagramm (Scatterplot)\n\nVerteilungen visualisieren\nBeziehungen visualisieren \n\n\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], \n                     y = [y-variable])) +\n   geom_xxx() +\n   other options"
  },
  {
    "objectID": "slides/slide-01-intro.html#voraussetzung",
    "href": "slides/slide-01-intro.html#voraussetzung",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Voraussetzung",
    "text": "Voraussetzung\n\n\n```{r}\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)\n```\n\n\n\n\n\n```{r}\nlibrary(palmerpenguins) # data\nlibrary(ggthemes) # colourblind safe colour palette\n```"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-23",
    "href": "slides/slide-01-intro.html#section-23",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "```{r}\nglimpse(penguins)\n```\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\n\n\n\n\n\n\n\nFrom now on, not using echo: fenced but implicitly all code chunks are enclosed in ```{r}```"
  },
  {
    "objectID": "slides/slide-01-intro.html#unser-ziel",
    "href": "slides/slide-01-intro.html#unser-ziel",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Unser Ziel",
    "text": "Unser Ziel\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length(mm)\",\n    y = \"Body mass (g)\",\n    colour = \"Species\",\n    shape = \"Species\"\n  ) +\n  scale_colour_colorblind()\n\n\n\n\n\nBy differentiating species, we can see that there is a pretty consistent relationship between bill length and depth across species (similar slopes), but that the ranges of these variables is different (the groupings are clearly shown by the colours). Adelie penguins tend to have smaller bill length but fairly large bill depth, while the inverse is true for Gentoo penguins."
  },
  {
    "objectID": "slides/slide-01-intro.html#plot-erstellen",
    "href": "slides/slide-01-intro.html#plot-erstellen",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Plot Erstellen",
    "text": "Plot Erstellen\n\nggplot(\n  data = penguins\n)"
  },
  {
    "objectID": "slides/slide-01-intro.html#plot-erstellen-1",
    "href": "slides/slide-01-intro.html#plot-erstellen-1",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Plot Erstellen",
    "text": "Plot Erstellen\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm)\n)"
  },
  {
    "objectID": "slides/slide-01-intro.html#plot-erstellen-2",
    "href": "slides/slide-01-intro.html#plot-erstellen-2",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Plot Erstellen",
    "text": "Plot Erstellen\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n)"
  },
  {
    "objectID": "slides/slide-01-intro.html#plot-erstellen-3",
    "href": "slides/slide-01-intro.html#plot-erstellen-3",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Plot Erstellen",
    "text": "Plot Erstellen\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point()"
  },
  {
    "objectID": "slides/slide-01-intro.html#aesthetics-und-schichten",
    "href": "slides/slide-01-intro.html#aesthetics-und-schichten",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Aesthetics und Schichten",
    "text": "Aesthetics und Schichten\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, colour = species)\n) +\n  geom_point()\n\n\n\nWhen a kategorische variable is mapped to an aesthetic, ggplot2 will automatically assign a unique value of the aesthetic (here a unique colour) to each unique level of the variable (each of the three species), a process known as scaling. ggplot2 will also add a legend that explains which values correspond to which levels."
  },
  {
    "objectID": "slides/slide-01-intro.html#aesthetics-und-schichten-1",
    "href": "slides/slide-01-intro.html#aesthetics-und-schichten-1",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Aesthetics und Schichten",
    "text": "Aesthetics und Schichten\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, colour = species)\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\nNow let’s add one more layer: a smooth curve displaying the relationship between body mass and flipper length. Before you proceed, refer back to the code above, and think about how we can add this to our existing plot.\nSince this is a new geometric object representing our data, we will add a new geom as a layer on top of our point geom: geom_smooth(). And we will specify that we want to draw the line of best fit based on a linear model with method = “lm”.\nWe have successfully added lines, but this plot doesn’t look like the plot we want to achive, which only has one line for the entire dataset as opposed to separate lines for each of the penguin species."
  },
  {
    "objectID": "slides/slide-01-intro.html#aesthetics-und-schichten-2",
    "href": "slides/slide-01-intro.html#aesthetics-und-schichten-2",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Aesthetics und Schichten",
    "text": "Aesthetics und Schichten\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm\")\n\n\n\nWhen aesthetic mappings are defined in ggplot(), at the global level, they’re passed down to each of the subsequent geom layers of the plot. However, each geom function in ggplot2 can also take a mapping argument, which allows for aesthetic mappings at the local level that are added to those inherited from the global level. Since we want points to be colored based on species but don’t want the lines to be separated out for them, we should specify color = species for geom_point() only."
  },
  {
    "objectID": "slides/slide-01-intro.html#aesthetics-und-schichten-3",
    "href": "slides/slide-01-intro.html#aesthetics-und-schichten-3",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Aesthetics und Schichten",
    "text": "Aesthetics und Schichten\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(mapping = aes(colour = species, shape = species)) +\n  geom_smooth(method = \"lm\")\n\n\n\nNote that the legend is automatically updated to reflect the different shapes of the points as well."
  },
  {
    "objectID": "slides/slide-01-intro.html#aesthetics-und-schichten-4",
    "href": "slides/slide-01-intro.html#aesthetics-und-schichten-4",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Aesthetics und Schichten",
    "text": "Aesthetics und Schichten\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(aes(colour = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", \n    y = \"Body mass (g)\",\n    color = \"Species\", \n    shape = \"Species\"\n  ) +\n  scale_colour_colorblind()"
  },
  {
    "objectID": "slides/slide-01-intro.html#aesthetics-und-schichten-5",
    "href": "slides/slide-01-intro.html#aesthetics-und-schichten-5",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Aesthetics und Schichten",
    "text": "Aesthetics und Schichten\n\n\nCode\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(aes(colour = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", \n    y = \"Body mass (g)\",\n    color = \"Species\", \n    shape = \"Species\"\n  ) +\n  scale_colour_colorblind()"
  },
  {
    "objectID": "slides/slide-01-intro.html#praktikum-01c",
    "href": "slides/slide-01-intro.html#praktikum-01c",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Praktikum 01c",
    "text": "Praktikum 01c\nprak-01c-ggplot-scatter.qmd\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-01-intro.html#aesthetics-optionen",
    "href": "slides/slide-01-intro.html#aesthetics-optionen",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Aesthetics-Optionen",
    "text": "Aesthetics-Optionen\n\ncolour ✅\nshape ✅\nsize\nalpha (transparency)\n\n\nHäufig verwendete Merkmale, die einer bestimmten Variablen in den Daten zugeordnet werden können."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-24",
    "href": "slides/slide-01-intro.html#section-24",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "ggplot(\n  penguins,\n  aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    colour = species,\n    shape = species\n  )\n) +\n  geom_point() +\n  scale_colour_colorblind()"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-25",
    "href": "slides/slide-01-intro.html#section-25",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "ggplot(\n  penguins,\n  aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    colour = species,\n    shape = island\n  )\n) +\n  geom_point() +\n  scale_colour_colorblind()"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-26",
    "href": "slides/slide-01-intro.html#section-26",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "ggplot(\n  penguins,\n  aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    colour = species,\n    shape = island,\n    size = bill_length_mm\n  )\n) +\n  geom_point() +\n  scale_colour_colorblind()"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-27",
    "href": "slides/slide-01-intro.html#section-27",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "ggplot(\n  penguins,\n  aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    colour = species,\n    shape = island,\n    size = bill_length_mm,\n    alpha = bill_depth_mm\n  )\n) +\n  geom_point() +\n  scale_colour_colorblind()"
  },
  {
    "objectID": "slides/slide-01-intro.html#faceting",
    "href": "slides/slide-01-intro.html#faceting",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Faceting",
    "text": "Faceting\n\n\nggplot(\n  penguins,\n  aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    colour = species\n  )\n) +\n  geom_point() +\n  facet_wrap(~island) +\n  scale_colour_colorblind()\n\n\n\n\n\n\n\n\n\n\nKleinere Diagramme, die verschiedene Teilmengen der Daten anzeigen. Nützlich für die Untersuchung von bedingten Beziehungen und grossen Daten."
  },
  {
    "objectID": "slides/slide-01-intro.html#faceting-1",
    "href": "slides/slide-01-intro.html#faceting-1",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Faceting",
    "text": "Faceting\n\n\nggplot(\n  penguins,\n  aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    colour = species\n  )\n) +\n  geom_point() +\n  facet_grid(island ~ sex) +\n  scale_colour_colorblind()"
  },
  {
    "objectID": "slides/slide-01-intro.html#mapping-vs.-setting",
    "href": "slides/slide-01-intro.html#mapping-vs.-setting",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Mapping vs. Setting ❓",
    "text": "Mapping vs. Setting ❓\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    size = bill_depth_mm,\n    alpha = bill_length_mm\n  )\n) +\n  geom_point()\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(size = 4, alpha = 0.2)"
  },
  {
    "objectID": "slides/slide-01-intro.html#mapping-vs.-setting-1",
    "href": "slides/slide-01-intro.html#mapping-vs.-setting-1",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Mapping vs. Setting",
    "text": "Mapping vs. Setting\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    size = body_mass_g,\n    alpha = flipper_length_mm\n  )\n) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n\nMapping\n\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = bill_depth_mm,\n    y = bill_length_mm\n  )\n) +\n  geom_point(size = 4, alpha = 0.2)\n\n\n\n\n\n\n\n\n\n\nSetting\n\n\n\n\n\nMapping: Bestimme size, alpha, shape, colour von Punkten basierend auf den Werten einer Variablen in den Daten\n\ngeht in aes()\n\nSetting: Bestimme size, alpha, shape, colour von Punkten, die nicht auf den Werten einer Variablen in den Daten basieren\n\ngeht ingeom_*() (wir werden bald etwas über andere Geoms erfahren!)\n\n\n\nprak-01c-ggplot-scatter.qmd"
  },
  {
    "objectID": "slides/slide-01-intro.html#namen",
    "href": "slides/slide-01-intro.html#namen",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Namen",
    "text": "Namen\n\n# Good\ni_use_snake_case\n\n# acceptable\notherPeopleUseCamelCase\nsome.people.use.periods\n\n# Bad\nAnd_aFew.People_Are.FREEspirits"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-28",
    "href": "slides/slide-01-intro.html#section-28",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Artwork by @allison_horst"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-29",
    "href": "slides/slide-01-intro.html#section-29",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Artwork by @allison_horst"
  },
  {
    "objectID": "slides/slide-01-intro.html#section-30",
    "href": "slides/slide-01-intro.html#section-30",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "⚠️ Case matters…\n\nwelcome_to_r &lt;- \"Welcome to R\"\n\n\n\nwelcome_to_R\n#&gt; Error: object 'welcome_to_R' not found\n\n\n\n… and so does punctuation!\n\n\nGross- und Kleinschreibung ist wichtig, ebenso wie die Zeichensetzung."
  },
  {
    "objectID": "slides/slide-01-intro.html#hausaufgabe",
    "href": "slides/slide-01-intro.html#hausaufgabe",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "Hausaufgabe",
    "text": "Hausaufgabe\nprak-01d-style.qmd"
  },
  {
    "objectID": "slides/slide-01-intro.html#r-for-data-science",
    "href": "slides/slide-01-intro.html#r-for-data-science",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "R for Data Science",
    "text": "R for Data Science\n\n\n\nDas Buch für den Kurs\nKostenfrei Online\nTiydverse-Philosophie\n\n\n\n\n\nDementsprechend orientiert sich der Kurs auch an dem von ihm geschriebenen Buch “R for Data Science” von Hadley Wickam. Das Buch ist online kostenfrei verfügbar. Während des Kurses wird es uns als Textbuch zur Seite stehen.\nThe kākāpō, which appears on the cover, is a critically endangered parrot native to New Zealand; there are only 248 left."
  },
  {
    "objectID": "slides/slide-01-intro.html#section-31",
    "href": "slides/slide-01-intro.html#section-31",
    "title": "Data Science Lifecycle und Visualisierung",
    "section": "",
    "text": "Slides created via revealjs and Quarto.\nAccess slides as PDF.\nAll material is licensed under Creative Commons Attribution Share Alike 4.0 International."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Überblick",
    "section": "",
    "text": "Wer kann teilnehmen?\nDer Kurs richtet sich in erster Linie an Mitarbeiter/innen der Verwaltung des Kantons Basel-Landschaft.\n\n\nWas sind die Ziele?\nAm Ende dieses Kurses kannst du:\n\nden data science lifecycle verstehen\nKonzepte von tidy data und data wrangling verstehen und anwenden\nexplorative Datenanalysen mittels Visualisierung durchführen\nDatenprojekte reproduzierbar publizieren\ndir selbst und anderen helfen, mehr über die grosse Welt der Möglichkeiten für Data Science mit R zu lernen.\n\n\n\nWer leitet den Kurs?\nSouad Guemghar und Luca Hüsler vom Amt für Daten und Statistik\n\n\nKursrahmen\n\nLevel: Einsteiger/in\nAufwand: 3.5 Stunden Unterricht pro Einheit, sechs Einheiten\nVoraussetzungen: Laptop, Zugriff zu Github und RStudio.\n\n\n\nKursinhalt\n\nUnit 1\n\nData science lifecycle\nWerkzeuge und Arbeitsumgebung kennenlernen: RStudio, Quarto\nDaten visualisieren mit ggplot2\n\nUnit 2\n\nDaten visualisieren mit ggplot2\nZeilen transformieren mit dplyr\n\nUnit 3\n\nSpalten transformieren mit dplyr\nDas Pipe\nGruppen zusammenfassen und zählen mit dplyr\n\nUnit 4\n\nDaten importieren und exportieren\nDaten zusammenfügen mit dplyr\nKonzept tidy data\nDataframes pivotieren mit tidyr\n\nUnit 5\n\nDatentypen und -klassen\nDatenrekodierung\nMit Factors arbeiten\n\nUnit 6\n\nMit SQL-Datenbanken arbeiten\nGit in RStudio verwenden\n\n\n\n\nVorbereitung\n\n\n\n\n\n\n🔴 Erforderlich\n\n\n\n\n\n\nDataCamp: Introduction to R (4 Std) – Basics, Vectors, Factors, Data Frames\n\n\n\n\n\n\n\n\n\n\n🟢 Empfohlen\n\n\n\n\n\n\nDataCamp: Introduction to the Tidyverse (1 Std) – Data Wrangling\n\n\n\n\n\n\n\n\n\n\n🔵 Optional\n\n\n\n\n\n\n🎥 Videos\n\nRStudio Einführung (10 Min).\nEinfaches Rechnen in R, Variablen zuweisen (8 Min).\nR programming for absolute beginners (15 Minuten).\nR Programming Tutorial - Learn the Basics of Statistical Computing (2 Stunden).\n\n\n\n📚 Bücher & Blogs\n\nEinführung in R: Kapitel 1 und 2.\nEinführung in R\nEasy R Programming Basics.\nForschungsseminar: Text as data: Kapitel 1 bis 3.\nWenn du keine Programmiererfahrung hast, könnte Hands on Programming with R eine wertvolle Ergänzung zu diesem Kurs sein.\n\n\n\n💻 Kurse\n\nW3Schools R Tutorial, R Vectors, R Data Frames, R Factors.",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Überblick"
    ]
  },
  {
    "objectID": "exercises/unit06/prak_06a-quarto-projekt-key.html",
    "href": "exercises/unit06/prak_06a-quarto-projekt-key.html",
    "title": "Praktikum 06a: CO2-Emissionen",
    "section": "",
    "text": "Packages laden\n\nlibrary(skimr)\nlibrary(janitor)\nlibrary(tidyverse)\n\n\n\nDaten laden\nDie CO2-Emissionen nach Energieträger, Gemeinde und Jahr einlesen:\n\ndf &lt;- read_delim(\"data/ogd-12020-co2-emissionen.csv\", delim = \";\")\n\nDie Raumgliederungsdaten einlesen:\n\ndf_gem &lt;- read_delim(\"data/odg-10110-gemeinden.csv\", delim = \";\")\n\n\n\nDaten erkunden\n\n# glimpse(df)\n# skim(df)\n# glimpse(df_gem)\n\n\n\nNamen reinigen\n\ndf_gem &lt;- df_gem |&gt; \n  clean_names()\nglimpse(df_gem)\n\nRows: 86\nColumns: 34\n$ bfs_nummer                                &lt;dbl&gt; 2761, 2762, 2763, 2764, 2765…\n$ gemeinde                                  &lt;chr&gt; \"Aesch (BL)\", \"Allschwil\", \"…\n$ bezirk_nummer                             &lt;dbl&gt; 1301, 1301, 1301, 1301, 1301…\n$ bezirk                                    &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"A…\n$ grossregion_code                          &lt;dbl&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ grossregion                               &lt;chr&gt; \"Nordwestschweiz\", \"Nordwest…\n$ agglomeration_2020_code                   &lt;dbl&gt; 2701, 2701, 2701, 2701, 2701…\n$ agglomeration_2020                        &lt;chr&gt; \"Basel (CH)\", \"Basel (CH)\", …\n$ agglomerationsgrossenklasse_2020_code     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ agglomerationsgrossenklasse_2020          &lt;chr&gt; \"&gt;= 500'000 Einwohner/innen\"…\n$ stadtischer_charakter_2020_code           &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 4, 2, 2…\n$ stadtischer_charakter_2020                &lt;chr&gt; \"Agglomerationskerngemeinde …\n$ statistische_stadt_2020_code              &lt;dbl&gt; 1, 1, 1, 0, 1, 1, 0, 0, 1, 1…\n$ statistische_stadt_2020                   &lt;chr&gt; \"Ja\", \"Ja\", \"Ja\", \"Nein\", \"J…\n$ stadtisch_landlich_2020_code              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 2, 1, 1…\n$ stadtisch_landlich_2020                   &lt;chr&gt; \"Städtisch\", \"Städtisch\", \"S…\n$ gemeindetypologie_2020_9_code             &lt;dbl&gt; 11, 11, 11, 11, 11, 11, 11, …\n$ gemeindetypologie_2020_9                  &lt;chr&gt; \"Städtische Gemeinde einer g…\n$ gemeindetypologie_2020_25_code            &lt;dbl&gt; 112, 112, 112, 113, 113, 113…\n$ gemeindetypologie_2020_25                 &lt;chr&gt; \"Städtische Arbeitsplatzgeme…\n$ arbeitsmarktgrossregion_2018_code         &lt;chr&gt; \"08\", \"08\", \"08\", \"08\", \"08\"…\n$ arbeitsmarktgrossregion_2018              &lt;chr&gt; \"Region Basel\", \"Region Base…\n$ arbeitsmarktregion_2018_code              &lt;chr&gt; \"08012\", \"08012\", \"08012\", \"…\n$ arbeitsmarktregion_2018                   &lt;chr&gt; \"Reinach (BL) - Allschwil\", …\n$ berggebiet_2019_code                      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ berggebiet_2019                           &lt;chr&gt; \"Nein\", \"Nein\", \"Nein\", \"Nei…\n$ urbanisierungsgrad_2011_code              &lt;dbl&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 1…\n$ urbanisierungsgrad_2011                   &lt;chr&gt; \"Dichtbesiedeltes Gebiet\", \"…\n$ erweiterte_stadt_2011_code                &lt;dbl&gt; 2701950, 2701950, 2701950, 0…\n$ erweiterte_stadt_2011                     &lt;chr&gt; \"Basel: erweiterte Stadt\", \"…\n$ funktionales_stadtisches_gebiet_2014_code &lt;dbl&gt; 2701960, 2701960, 2701960, 2…\n$ funktionales_stadtisches_gebiet_2014      &lt;chr&gt; \"Basel: funktionales städtis…\n$ geometrie                                 &lt;chr&gt; \"{\\\"coordinates\\\": [[[[7.567…\n$ geometrisches_zentrum                     &lt;chr&gt; \"47.473950622, 7.585373859\",…\n\n\n\n\nDaten zusammenfassen count()\n\ndf |&gt; count(erhebungsjahr)\n\n# A tibble: 3 × 2\n  erhebungsjahr     n\n          &lt;dbl&gt; &lt;int&gt;\n1          2018   150\n2          2020   151\n3          2022   126\n\n\n\ndf |&gt; count(bfs_gemeindenummer)\n\n# A tibble: 86 × 2\n   bfs_gemeindenummer     n\n                &lt;dbl&gt; &lt;int&gt;\n 1               2761     6\n 2               2762     6\n 3               2763     9\n 4               2764     5\n 5               2765     6\n 6               2766     8\n 7               2767     6\n 8               2768     9\n 9               2769     6\n10               2770    11\n# ℹ 76 more rows\n\n\n\ndf_gem |&gt; count(bfs_nummer, gemeinde, bezirk_nummer, bezirk)\n\n# A tibble: 86 × 5\n   bfs_nummer gemeinde     bezirk_nummer bezirk        n\n        &lt;dbl&gt; &lt;chr&gt;                &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt;\n 1       2761 Aesch (BL)            1301 Arlesheim     1\n 2       2762 Allschwil             1301 Arlesheim     1\n 3       2763 Arlesheim             1301 Arlesheim     1\n 4       2764 Biel-Benken           1301 Arlesheim     1\n 5       2765 Binningen             1301 Arlesheim     1\n 6       2766 Birsfelden            1301 Arlesheim     1\n 7       2767 Bottmingen            1301 Arlesheim     1\n 8       2768 Ettingen              1301 Arlesheim     1\n 9       2769 Münchenstein          1301 Arlesheim     1\n10       2770 Muttenz               1301 Arlesheim     1\n# ℹ 76 more rows\n\n\n\n\nDaten zusammenfügen\nBehaltet Spalten bfs_nummer, gemeinde, bezirk_nummer und bezirk im Gemeindendatensatz\n\ndf_gem &lt;- df_gem |&gt; \n  select(bfs_nummer, gemeinde, starts_with(\"bezirk\"))\n\nEntfernt Spalte gemeinde in den CO2-Daten und fügt den resultiereden Datensatz mit dem Gemeinde-Datensatz:\n\ndf_augmented &lt;- df |&gt; \n  rename(jahr = erhebungsjahr) |&gt; \n  select(-gemeinde) |&gt;\n  left_join(df_gem, join_by(bfs_gemeindenummer == bfs_nummer))\nglimpse(df_augmented)\n\nRows: 427\nColumns: 8\n$ jahr                       &lt;dbl&gt; 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2…\n$ bfs_gemeindenummer         &lt;dbl&gt; 2761, 2761, 2762, 2762, 2763, 2763, 2763, 2…\n$ energietraeger_bezeichnung &lt;chr&gt; \"Erdgas\", \"Heizöl\", \"Erdgas\", \"Heizöl\", \"Er…\n$ co2_absolut_tonnen         &lt;dbl&gt; 12898.89135, 11264.13676, 24068.87099, 1681…\n$ co2_kg_pro_person          &lt;dbl&gt; 1.2480785051, 1.0899019603, 1.1380080846, 0…\n$ gemeinde                   &lt;chr&gt; \"Aesch (BL)\", \"Aesch (BL)\", \"Allschwil\", \"A…\n$ bezirk_nummer              &lt;dbl&gt; 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1…\n$ bezirk                     &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"Arlesheim\", \"Arl…\n\n\n\n\nDaten visualisieren\nVerwendet {ggplot} um die durschnittlichen CO2-Emissionen pro Person, Jahr und Bezirk zu visualisieren.\n\ndf_augmented |&gt; \n  summarise(total_co2_pers = sum(co2_kg_pro_person), .by = c(bezirk, jahr)) |&gt; \n  mutate(bezirk = fct_reorder(bezirk, total_co2_pers)) |&gt; \n  mutate(bezirk = fct_rev(bezirk)) |&gt; \n  ggplot(aes(x = jahr, y = total_co2_pers, colour = bezirk)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    x = \"\",\n    y = \"kg\",\n    colour = \"\",\n    title = \"CO2-Emissionen in KG pro Person und Bezirk ab 2018\",\n    subtitle = \"Kanton Basel-Landschaft\",\n    caption = \"Quelle: https://data.bl.ch/explore/dataset/12020\"\n  ) +\n  theme_minimal() +\n  ggthemes::scale_colour_colorblind()\n\n\n\n\n\n\n\n\n\nggsave(filename = \"output/co2_emissionen_pers.png\")"
  },
  {
    "objectID": "exercises/unit05/prak-05d-cond-mutate-forcats-key.html",
    "href": "exercises/unit05/prak-05d-cond-mutate-forcats-key.html",
    "title": "Praktikum 05d: if_else(), case_when(), fct_infreq()",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -"
  },
  {
    "objectID": "exercises/unit05/prak-05d-cond-mutate-forcats-key.html#stetige-variable",
    "href": "exercises/unit05/prak-05d-cond-mutate-forcats-key.html#stetige-variable",
    "title": "Praktikum 05d: if_else(), case_when(), fct_infreq()",
    "section": "Stetige Variable",
    "text": "Stetige Variable\n\nErstellt zusätzlich zur Variable species_binary eine Spalte für BMI=mass[height(m)]^2\\text{BMI} = \\frac{\\text{mass}}{[\\text{height(m)]^2}}\n\nund eine kategorielle Variable bmi_cat mit folgenden Werten:\n\nBMI &lt; 18.5: Underweight\n18.5 ≤\\leq BMI &lt; 25: Healthy\n25 ≤\\leq BMI &lt; 30: Overweight\nBMI ≥\\geq 30: Obese\n\nund speichert den resultierenden Dataframe in einem neuen Objekt df1.\n\ndf1 &lt;- starwars |&gt;\n  mutate(species_binary = if_else(species != \"Human\", \"Other\", species, missing = \"Unknown\")) |&gt;\n  mutate(bmi = mass / (height / 100)^2, .after = mass) |&gt;\n  mutate(bmi_cat = case_when(\n    is.na(bmi) ~ \"Unknown\",\n    bmi &lt; 18.5 ~ \"Underweight\",\n    bmi &lt; 25 ~ \"Healthy\",\n    bmi &lt; 30 ~ \"Overweight\",\n    .default = \"Obese\"\n  ))\n\n\nErstellt ein Boxplot der Variable bmi gegen species_binary:\n\n\ndf1 |&gt;\n  ggplot(aes(x = species_binary, y = bmi)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\nGibt es outliers?\n\ndf1 |&gt;\n  filter(bmi &gt; 400) |&gt;\n  select(name, bmi, height, mass)\n\n# A tibble: 1 × 4\n  name                    bmi height  mass\n  &lt;chr&gt;                 &lt;dbl&gt;  &lt;int&gt; &lt;dbl&gt;\n1 Jabba Desilijic Tiure  443.    175  1358\n\n\n\nErstellt ein barplot von sex mit Zuordnung zur Variable bmi_cat. sex sollte abseteigend dargestellet werden (fct_infreq()).\n\n\ndf1 |&gt;\n  mutate(sex = fct_infreq(sex)) |&gt;\n  ggplot(aes(x = sex, fill = bmi_cat)) +\n  geom_bar()"
  },
  {
    "objectID": "exercises/unit05/prak-05d-cond-mutate-forcats-key.html#kategorielle-variable",
    "href": "exercises/unit05/prak-05d-cond-mutate-forcats-key.html#kategorielle-variable",
    "title": "Praktikum 05d: if_else(), case_when(), fct_infreq()",
    "section": "Kategorielle Variable",
    "text": "Kategorielle Variable\nIm starwars Datensatz gibt es vier Typen von Kreaturen:\n\nMenschen = Human,\nEmpfindungsfähige Humanoide = Sentient Humanoid,\nNicht empfindungsfähiges Tiere = Non-Sentient Animal,\nDroiden = Droid.\n\nHier ist die Liste von empfindungsfähigen Humanoiden:\n\nsentient_humanoids &lt;- c(\"Aleena\", \"Besalisk\", \"Cerean\", \"Chagrian\", \"Clawdite\", \"Ewok\", \"Dug\", \"Zabrak\", \"Geonosian\", \"Gungan\", \"Hutt\", \"Iktotchi\", \"Kaleesh\", \"Kel Dor\", \"Mirialan\", \"Mon Calamari\", \"Muun\", \"Nautolan\", \"Neimodian\", \"Pau'an\", \"Togruta\", \"Twi'lek\", \"Wookiee\", \"Quermian\", \"Rodian\", \"Skakoan\", \"Sullustan\", \"Tholothian\", \"Togruta\", \"Toong\", \"Twi'lek\", \"Vulptereen\", \"Xexto\", \"Yoda's species\", \"Zabrak\")\n\nund die Liste von nicht empfindungsfähigen Tieren:\n\nnon_sentient_animals &lt;- c(\"Trandoshan\", \"Kaminoan\", \"Toydarian\")\n\n\nErstellt eine Spalte (species_type) für den Typ der Kreaturen. Benutzt case_when() un %in% dafür:\n\n\ndf1 |&gt;\n  mutate(species_type = case_when(\n    is.na(species) ~ \"Unbekannt\",\n    species %in% sentient_humanoids ~ \"sentient_humanoids\",\n    species %in% non_sentient_animals ~ \"non_sentient_animals\",\n    .default = species\n  )) |&gt;\n  count(species_type, species)\n\n# A tibble: 38 × 3\n   species_type         species        n\n   &lt;chr&gt;                &lt;chr&gt;      &lt;int&gt;\n 1 Droid                Droid          6\n 2 Human                Human         35\n 3 Unbekannt            &lt;NA&gt;           4\n 4 non_sentient_animals Kaminoan       2\n 5 non_sentient_animals Toydarian      1\n 6 non_sentient_animals Trandoshan     1\n 7 sentient_humanoids   Aleena         1\n 8 sentient_humanoids   Besalisk       1\n 9 sentient_humanoids   Cerean         1\n10 sentient_humanoids   Chagrian       1\n# ℹ 28 more rows\n\n\n\nNimmt Jabba the Hutt (“Jabba Desilijic Tiure”) raus und erstellt ein barplot (position = \"fill\") der Variable species_type mit bmi_cat als Zuordnung-Variable. Beide species_type und bmi_cat sollten absteigend dargestellt werden.\n\n\ndf1 |&gt;\n  mutate(species_type = case_when(\n    is.na(species) ~ \"Unbekannt\",\n    species %in% sentient_humanoids ~ \"sentient_humanoids\",\n    species %in% non_sentient_animals ~ \"non_sentient_animals\",\n    .default = species\n  )) |&gt;\n  mutate(species_type = fct_infreq(species_type)) |&gt;\n  mutate(bmi_cat = fct_infreq(bmi_cat)) |&gt;\n  filter(name != \"Jabba Desilijic Tiure\") |&gt;\n  ggplot(aes(x = species_type, fill = bmi_cat)) +\n  geom_bar(position = \"fill\")"
  },
  {
    "objectID": "exercises/unit05/prak-05c-forcats-firmen-key.html",
    "href": "exercises/unit05/prak-05c-forcats-firmen-key.html",
    "title": "Praktikum 5c: {forcats}",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages laden\n\nLadet Packages janitor und tidyverse.\n\n\nlibrary(janitor)\nlibrary(tidyverse)\n\n\n\nDaten laden\n\nLest die Firmen- und Raumgliederungsdaten ein und macht die Namen sauber (janitor::clean_names())\n\ndata/ogd_12460_firmen_clean.csv\ndata/ogd-10110-raumgliederung.csv\n\n\n\nfirmen &lt;- read_csv(\"data/ogd_12460_firmen_clean.csv\")\nraumgliederung &lt;- read_delim(\"data/ogd-10110-raumgliederung.csv\", delim = \";\")\n\n\nErkundet die Daten mit glimpse() und summary().\n\n\nglimpse(firmen)\n\nRows: 23,770\nColumns: 14\n$ jahr                &lt;dbl&gt; 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 20…\n$ kategorie           &lt;chr&gt; \"Widerruf der Auflösung\", \"Neueintragung\", \"Löschu…\n$ kategorie_gruppiert &lt;chr&gt; \"Anders\", \"Neueintragung\", \"Löschung\", \"Löschung\",…\n$ firmensitz_code     &lt;dbl&gt; 2831, 2831, 2770, 2770, 2775, 2763, 2828, 2831, 27…\n$ firmensitz          &lt;chr&gt; \"Pratteln\", \"Pratteln\", \"Muttenz\", \"Muttenz\", \"The…\n$ uid                 &lt;chr&gt; \"CHE114900844\", \"CHE175812531\", \"CHE131395143\", \"C…\n$ firmenname          &lt;chr&gt; \"Flipp GmbH in Liquidation\", \"Alaia Beauty GmbH\", …\n$ rechtsform_code     &lt;chr&gt; \"0107\", \"0107\", \"0101\", \"0101\", \"0101\", \"0107\", \"0…\n$ rechtsform          &lt;chr&gt; \"Gesellschaft mit beschränkter Haftung (GmbH)\", \"G…\n$ noga_code           &lt;chr&gt; \"181201\", \"960202\", \"432100\", \"692000\", \"329900\", …\n$ noga                &lt;chr&gt; \"Offsetdruck\", \"Kosmetiksalons\", \"Elektroinstallat…\n$ noga_abschnitt_code &lt;chr&gt; \"C\", \"S\", \"F\", \"M\", \"C\", \"G\", \"S\", \"L\", \"S\", \"U\", …\n$ noga_abschnitt      &lt;chr&gt; \"VERARBEITENDES GEWERBE/HERSTELLUNG VON WAREN\", \"E…\n$ noga_abteilung      &lt;chr&gt; \"Herstellung von Druckerzeugnissen; Vervielfältigu…\n\n\n\nglimpse(raumgliederung)\n\nRows: 86\nColumns: 34\n$ BFS_Nummer                                &lt;dbl&gt; 2761, 2762, 2763, 2764, 2765…\n$ Gemeinde                                  &lt;chr&gt; \"Aesch (BL)\", \"Allschwil\", \"…\n$ Bezirk_Nummer                             &lt;dbl&gt; 1301, 1301, 1301, 1301, 1301…\n$ Bezirk                                    &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"A…\n$ Grossregion_Code                          &lt;dbl&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ Grossregion                               &lt;chr&gt; \"Nordwestschweiz\", \"Nordwest…\n$ Agglomeration_2020_Code                   &lt;dbl&gt; 2701, 2701, 2701, 2701, 2701…\n$ Agglomeration_2020                        &lt;chr&gt; \"Basel (CH)\", \"Basel (CH)\", …\n$ Agglomerationsgrössenklasse_2020_Code     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Agglomerationsgrössenklasse_2020          &lt;chr&gt; \"&gt;= 500'000 Einwohner/innen\"…\n$ Städtischer_Charakter_2020_Code           &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 4, 2, 2…\n$ Städtischer_Charakter_2020                &lt;chr&gt; \"Agglomerationskerngemeinde …\n$ Statistische_Stadt_2020_Code              &lt;dbl&gt; 1, 1, 1, 0, 1, 1, 0, 0, 1, 1…\n$ Statistische_Stadt_2020                   &lt;chr&gt; \"Ja\", \"Ja\", \"Ja\", \"Nein\", \"J…\n$ Städtisch_Ländlich_2020_Code              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 2, 1, 1…\n$ Städtisch_Ländlich_2020                   &lt;chr&gt; \"Städtisch\", \"Städtisch\", \"S…\n$ Gemeindetypologie_2020_9_Code             &lt;dbl&gt; 11, 11, 11, 11, 11, 11, 11, …\n$ Gemeindetypologie_2020_9                  &lt;chr&gt; \"Städtische Gemeinde einer g…\n$ Gemeindetypologie_2020_25_Code            &lt;dbl&gt; 112, 112, 112, 113, 113, 113…\n$ Gemeindetypologie_2020_25                 &lt;chr&gt; \"Städtische Arbeitsplatzgeme…\n$ Arbeitsmarktgrossregion_2018_Code         &lt;chr&gt; \"08\", \"08\", \"08\", \"08\", \"08\"…\n$ Arbeitsmarktgrossregion_2018              &lt;chr&gt; \"Region Basel\", \"Region Base…\n$ Arbeitsmarktregion_2018_Code              &lt;chr&gt; \"08012\", \"08012\", \"08012\", \"…\n$ Arbeitsmarktregion_2018                   &lt;chr&gt; \"Reinach (BL) - Allschwil\", …\n$ Berggebiet_2019_Code                      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Berggebiet_2019                           &lt;chr&gt; \"Nein\", \"Nein\", \"Nein\", \"Nei…\n$ Urbanisierungsgrad_2011_Code              &lt;dbl&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 1…\n$ Urbanisierungsgrad_2011                   &lt;chr&gt; \"Dichtbesiedeltes Gebiet\", \"…\n$ Erweiterte_Stadt_2011_Code                &lt;dbl&gt; 2701950, 2701950, 2701950, 0…\n$ Erweiterte_Stadt_2011                     &lt;chr&gt; \"Basel: erweiterte Stadt\", \"…\n$ Funktionales_städtisches_Gebiet_2014_Code &lt;dbl&gt; 2701960, 2701960, 2701960, 2…\n$ Funktionales_städtisches_Gebiet_2014      &lt;chr&gt; \"Basel: funktionales städtis…\n$ Geometrie                                 &lt;chr&gt; \"{\\\"coordinates\\\": [[[[7.567…\n$ Geometrisches_Zentrum                     &lt;chr&gt; \"47.473950622, 7.585373859\",…\n\n\n\nraumgliederung &lt;- raumgliederung |&gt; clean_names()\n\n\n\nDaten transformieren\n\nWie viele Kategorien von rechtsform gibt es?\n\n\nfirmen |&gt; count(rechtsform)\n\n# A tibble: 12 × 2\n   rechtsform                                              n\n   &lt;chr&gt;                                               &lt;int&gt;\n 1 Aktiengesellschaft (AG)                              4197\n 2 Einzelunternehmen                                    8786\n 3 Genossenschaft                                        105\n 4 Gesellschaft mit beschränkter Haftung (GmbH)         9040\n 5 Haupt von Gemeinderschaft                               2\n 6 Institut des öffentlichen Rechts                        3\n 7 Kollektivgesellschaft (KlG)                           522\n 8 Kommanditgesellschaft (KmG)                            38\n 9 Stiftung                                              294\n10 Verein                                                238\n11 Zweigniederlassung                                    472\n12 Zweigniederlassung eines ausländischen Unternehmens    73\n\n\n\nFügt die Firmen- und Raumgliederungsdaten zusammen (Achtung! verschiedene Variablenamen, join_by())\nEntfernt das Jahr 2025\nVerwendet fct_lump um drei Kategorien der Rechstform zu behalten (other_level = “Anders”)\nVerwendet count() um das Ergebnis zu checken\n\n\nfirmen_joined &lt;- firmen |&gt;\n  left_join(y = raumgliederung, join_by(firmensitz_code == bfs_nummer, firmensitz == gemeinde)) |&gt;\n  relocate(starts_with(\"bezirk\"), .after = firmensitz) |&gt; \n    filter(jahr != 2025) |&gt; \n  mutate(\n    rechtsform_gruppiert = fct_lump(rechtsform, n = 3, other_level = \"Anders\")\n  )\nfirmen_joined |&gt; count(rechtsform_gruppiert, rechtsform)\n\n# A tibble: 12 × 3\n   rechtsform_gruppiert                         rechtsform                     n\n   &lt;fct&gt;                                        &lt;chr&gt;                      &lt;int&gt;\n 1 Aktiengesellschaft (AG)                      Aktiengesellschaft (AG)     4172\n 2 Einzelunternehmen                            Einzelunternehmen           8708\n 3 Gesellschaft mit beschränkter Haftung (GmbH) Gesellschaft mit beschrän…  8970\n 4 Anders                                       Genossenschaft               105\n 5 Anders                                       Haupt von Gemeinderschaft      2\n 6 Anders                                       Institut des öffentlichen…     3\n 7 Anders                                       Kollektivgesellschaft (Kl…   519\n 8 Anders                                       Kommanditgesellschaft (Km…    37\n 9 Anders                                       Stiftung                     293\n10 Anders                                       Verein                       236\n11 Anders                                       Zweigniederlassung           468\n12 Anders                                       Zweigniederlassung eines …    73\n\n\n\n\nDaten visualisieren\n\nErstellt ein Balkendiagram der neuen gruppierte Rechtsform-Variable\nBenutzt fct_infreq() um die Balken absteigend zu ordnen\nErstellt ein Balkendiagramm der neuen gruppierte Rechtsform-Variable und dem Bezirk (Facettierung: facet_grid(rechtsform_gruppiert ~ bezirk))\n\n\nfirmen_joined |&gt; \n  mutate(jahr = factor(jahr)) |&gt; \n  mutate(rechtsform_gruppiert = fct_infreq(rechtsform_gruppiert)) |&gt;\n  mutate(bezirk = fct_infreq(bezirk)) |&gt; \n  ggplot(aes(x = jahr, fill = rechtsform_gruppiert)) +\n  geom_bar() +\n  facet_grid(rechtsform_gruppiert ~ bezirk) +\n  theme_minimal() +\n   theme(legend.position = \"none\",\n         axis.text.x = element_text(angle = 45, hjust = 1)) +\n    labs(\n    x = \"\",\n    y = \"Anzahl\",\n    fill = \"\",\n    title = \"Anzahl Firmen pro Rechtsform und Bezirk, BL\",\n    caption = \"https://data.bl.ch/explore/dataset/12460\"\n  )"
  },
  {
    "objectID": "exercises/unit05/prak-05b-cond-mutate-key.html",
    "href": "exercises/unit05/prak-05b-cond-mutate-key.html",
    "title": "Praktium 05b: Bedingt mutate()",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages laden\n\nLädt das tidyverse-Package.\n\n\nlibrary(tidyverse)\n\n\n\nif_else()\n\nLädt die Daten “data/ogd_abstimmungsarchiv_11990.csv”.\nErkundet die Daten: glimpse(), summary(), View()\n\n\nabstimmung &lt;- read_delim(\"data/ogd_abstimmungsarchiv_11990.csv\", delim = \";\")\n# glimpse(abstimmung)\n\n\nWas ist die durschnittliche Wahlbeteiligung?\n\n\n(avg_turnout &lt;- abstimmung |&gt; \n  summarise(avg_turnout = mean(percent_turnout)) |&gt; \n  pull(avg_turnout))\n\n[1] 43.3867\n\n\n\nErstellt eine neue kategorielle Variable turnout_cat die zwei Niveaux hat:\n\nunterdurschnittlich\nüberdurschnittlich\n\nErstellt ein Balkendiagramm (geom_bar() und facet_wrap()) pro Bezirk mit:\n\nx = domain\nfill = turnout_cat\n\n\n\nabstimmung |&gt; \n  mutate(turnout_cat = if_else(percent_turnout &lt; avg_turnout, \"unterdurschnittlich\", \"überdurschnittlich\")) |&gt; \n  ggplot(aes(x = domain, fill = turnout_cat)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap(~district) +\n  labs(\n    x = \"\",\n    y = \"Anteil Abstimmungen\",\n    fill = \"\",\n    title = \"Anteil Abstimmungen pro Domain und Bezirk\"\n  ) +\n  scale_y_continuous(labels = scales::label_percent()) +\n  ggthemes::scale_fill_colorblind() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nWas ist die die durschnittliche Wahlbeteiligung pro domain?\n\n\nabstimmung |&gt; \n  summarise(mean(percent_turnout), .by = domain)\n\n# A tibble: 2 × 2\n  domain     `mean(percent_turnout)`\n  &lt;chr&gt;                        &lt;dbl&gt;\n1 canton                        39.4\n2 federation                    47.3\n\n\n\n\ncase_when()\n\nLädt die Daten “data/ogd_gebaeude12160.csv”\nErkundet die Daten: glimpse(), summary(), View()\n\n\ngebauede &lt;- read_delim(\"data/ogd_gebaeude12160.csv\", delim = \";\")\n# glimpse(gebauede)\n\n\nBehaltet nur die folgenden Spalten:\n\n“gemeindenummer_bfs”\n\n“gemeindename”\n\n“baujahr_des_gebaeudes”\n\n“energie_waermequelle_heizung_primaer_code”\n\n“energie_waermequelle_heizung_primaer_bezeichnung”\n“gebaeudeflaeche”\n\n“anzahl_geschosse”\n\n\n\ngebauede_small &lt;- gebauede |&gt; \n  select(starts_with(\"gemeinde\"), baujahr_des_gebaeudes, starts_with(\"energie_waermequelle_heizung_primaer\"), gebaeudeflaeche, anzahl_geschosse)\n\n\nWie viele verschiedene Primäre Wärmequellen gibt es?\n\n\ngebauede_small |&gt; count(energie_waermequelle_heizung_primaer_bezeichnung, sort = TRUE)\n\n# A tibble: 18 × 2\n   energie_waermequelle_heizung_primaer_bezeichnung      n\n   &lt;chr&gt;                                             &lt;int&gt;\n 1 Keine                                             51169\n 2 Gas                                               23644\n 3 Heizöl                                            23476\n 4 Erdwärme (generisch)                              10851\n 5 Fernwärme (generisch)                              7026\n 6 Holz (generisch)                                   3160\n 7 Luft                                               2660\n 8 Elektrizität                                       2364\n 9 Unbestimmt                                         1819\n10 Erdwärmesonde                                      1201\n11 Holz (Pellets)                                      737\n12 Holz (Stückholz)                                    466\n13 Holz (Schnitzel)                                    185\n14 Andere                                              128\n15 Wasser (Grundwasser, Oberflächenwasser, Abwasser)    30\n16 Abwärme (innerhalb des Gebäudes)                     12\n17 Sonne (thermisch)                                    12\n18 Erdregister                                           6\n\n\n\nVerwendet case_when() und die Variable energie_waermequelle_heizung_primaer_bezeichnung um eine neue Variable der Wärmequelle zu erstellen, die vier Kategorien hat:\n\nGas, Heizöl → Fossil\nKeine → Keine\nUnbestimmt → Unbestimmt\nalle andere Quellen → Erneuerbare\n\n\n\ngebauede_small |&gt; \n   mutate(\n    energie_waermequelle_heizung_primaer_bezeichnung_gruppiert = case_when(\n      energie_waermequelle_heizung_primaer_bezeichnung %in% c(\"Gas\", \"Heizöl\") ~ \"Fossil\",\n      energie_waermequelle_heizung_primaer_bezeichnung %in% c(\"Keine\", \"Unbestimmt\") ~ energie_waermequelle_heizung_primaer_bezeichnung,\n      .default = \"Erneuerbare\"\n      )\n  ) |&gt; \n  count(energie_waermequelle_heizung_primaer_bezeichnung_gruppiert)\n\n# A tibble: 4 × 2\n  energie_waermequelle_heizung_primaer_bezeichnung_gruppiert     n\n  &lt;chr&gt;                                                      &lt;int&gt;\n1 Erneuerbare                                                28838\n2 Fossil                                                     47120\n3 Keine                                                      51169\n4 Unbestimmt                                                  1819"
  },
  {
    "objectID": "exercises/unit05/draft-prak-05c-forcats-firmen.html",
    "href": "exercises/unit05/draft-prak-05c-forcats-firmen.html",
    "title": "Praktikum 5c: {forcats}",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages laden\n\nlibrary(janitor)\nlibrary(tidyverse)\n\n\n\nDaten laden\nTägliche Meldungen aus dem Schweizerischen Handelsamtsblatt (SHAB). Eingetragen und im SHAB veröffentlicht werden rechtlich verbindliche Tatsachen vorab bei privaten Rechtssubjekten.\n\ndf &lt;- read_csv(\"data/ogd_12460_firmen_clean.csv\")\ndf_raum &lt;- read_delim(\"data/ogd-10110-raumgliederung.csv\", delim = \";\") |&gt; \n  clean_names()\n\n\nErkundet die Daten mit glimpse() und summary().\n\n\ndf |&gt; glimpse()\n\nRows: 23,770\nColumns: 14\n$ jahr                &lt;dbl&gt; 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 20…\n$ kategorie           &lt;chr&gt; \"Widerruf der Auflösung\", \"Neueintragung\", \"Löschu…\n$ kategorie_gruppiert &lt;chr&gt; \"Anders\", \"Neueintragung\", \"Löschung\", \"Löschung\",…\n$ firmensitz_code     &lt;dbl&gt; 2831, 2831, 2770, 2770, 2775, 2763, 2828, 2831, 27…\n$ firmensitz          &lt;chr&gt; \"Pratteln\", \"Pratteln\", \"Muttenz\", \"Muttenz\", \"The…\n$ uid                 &lt;chr&gt; \"CHE114900844\", \"CHE175812531\", \"CHE131395143\", \"C…\n$ firmenname          &lt;chr&gt; \"Flipp GmbH in Liquidation\", \"Alaia Beauty GmbH\", …\n$ rechtsform_code     &lt;chr&gt; \"0107\", \"0107\", \"0101\", \"0101\", \"0101\", \"0107\", \"0…\n$ rechtsform          &lt;chr&gt; \"Gesellschaft mit beschränkter Haftung (GmbH)\", \"G…\n$ noga_code           &lt;chr&gt; \"181201\", \"960202\", \"432100\", \"692000\", \"329900\", …\n$ noga                &lt;chr&gt; \"Offsetdruck\", \"Kosmetiksalons\", \"Elektroinstallat…\n$ noga_abschnitt_code &lt;chr&gt; \"C\", \"S\", \"F\", \"M\", \"C\", \"G\", \"S\", \"L\", \"S\", \"U\", …\n$ noga_abschnitt      &lt;chr&gt; \"VERARBEITENDES GEWERBE/HERSTELLUNG VON WAREN\", \"E…\n$ noga_abteilung      &lt;chr&gt; \"Herstellung von Druckerzeugnissen; Vervielfältigu…\n\n\n\ndf_raum |&gt; glimpse()\n\nRows: 86\nColumns: 34\n$ bfs_nummer                                &lt;dbl&gt; 2761, 2762, 2763, 2764, 2765…\n$ gemeinde                                  &lt;chr&gt; \"Aesch (BL)\", \"Allschwil\", \"…\n$ bezirk_nummer                             &lt;dbl&gt; 1301, 1301, 1301, 1301, 1301…\n$ bezirk                                    &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"A…\n$ grossregion_code                          &lt;dbl&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ grossregion                               &lt;chr&gt; \"Nordwestschweiz\", \"Nordwest…\n$ agglomeration_2020_code                   &lt;dbl&gt; 2701, 2701, 2701, 2701, 2701…\n$ agglomeration_2020                        &lt;chr&gt; \"Basel (CH)\", \"Basel (CH)\", …\n$ agglomerationsgrossenklasse_2020_code     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ agglomerationsgrossenklasse_2020          &lt;chr&gt; \"&gt;= 500'000 Einwohner/innen\"…\n$ stadtischer_charakter_2020_code           &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 4, 2, 2…\n$ stadtischer_charakter_2020                &lt;chr&gt; \"Agglomerationskerngemeinde …\n$ statistische_stadt_2020_code              &lt;dbl&gt; 1, 1, 1, 0, 1, 1, 0, 0, 1, 1…\n$ statistische_stadt_2020                   &lt;chr&gt; \"Ja\", \"Ja\", \"Ja\", \"Nein\", \"J…\n$ stadtisch_landlich_2020_code              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 2, 1, 1…\n$ stadtisch_landlich_2020                   &lt;chr&gt; \"Städtisch\", \"Städtisch\", \"S…\n$ gemeindetypologie_2020_9_code             &lt;dbl&gt; 11, 11, 11, 11, 11, 11, 11, …\n$ gemeindetypologie_2020_9                  &lt;chr&gt; \"Städtische Gemeinde einer g…\n$ gemeindetypologie_2020_25_code            &lt;dbl&gt; 112, 112, 112, 113, 113, 113…\n$ gemeindetypologie_2020_25                 &lt;chr&gt; \"Städtische Arbeitsplatzgeme…\n$ arbeitsmarktgrossregion_2018_code         &lt;chr&gt; \"08\", \"08\", \"08\", \"08\", \"08\"…\n$ arbeitsmarktgrossregion_2018              &lt;chr&gt; \"Region Basel\", \"Region Base…\n$ arbeitsmarktregion_2018_code              &lt;chr&gt; \"08012\", \"08012\", \"08012\", \"…\n$ arbeitsmarktregion_2018                   &lt;chr&gt; \"Reinach (BL) - Allschwil\", …\n$ berggebiet_2019_code                      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ berggebiet_2019                           &lt;chr&gt; \"Nein\", \"Nein\", \"Nein\", \"Nei…\n$ urbanisierungsgrad_2011_code              &lt;dbl&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 1…\n$ urbanisierungsgrad_2011                   &lt;chr&gt; \"Dichtbesiedeltes Gebiet\", \"…\n$ erweiterte_stadt_2011_code                &lt;dbl&gt; 2701950, 2701950, 2701950, 0…\n$ erweiterte_stadt_2011                     &lt;chr&gt; \"Basel: erweiterte Stadt\", \"…\n$ funktionales_stadtisches_gebiet_2014_code &lt;dbl&gt; 2701960, 2701960, 2701960, 2…\n$ funktionales_stadtisches_gebiet_2014      &lt;chr&gt; \"Basel: funktionales städtis…\n$ geometrie                                 &lt;chr&gt; \"{\\\"coordinates\\\": [[[[7.567…\n$ geometrisches_zentrum                     &lt;chr&gt; \"47.473950622, 7.585373859\",…\n\n\n\n\nDaten transformieren\n\ndf |&gt; count(rechtsform, sort = TRUE)\n\n# A tibble: 12 × 2\n   rechtsform                                              n\n   &lt;chr&gt;                                               &lt;int&gt;\n 1 Gesellschaft mit beschränkter Haftung (GmbH)         9040\n 2 Einzelunternehmen                                    8786\n 3 Aktiengesellschaft (AG)                              4197\n 4 Kollektivgesellschaft (KlG)                           522\n 5 Zweigniederlassung                                    472\n 6 Stiftung                                              294\n 7 Verein                                                238\n 8 Genossenschaft                                        105\n 9 Zweigniederlassung eines ausländischen Unternehmens    73\n10 Kommanditgesellschaft (KmG)                            38\n11 Institut des öffentlichen Rechts                        3\n12 Haupt von Gemeinderschaft                               2\n\n\n\ndf &lt;- df |&gt; \n  left_join(df_raum, join_by(firmensitz_code == bfs_nummer, firmensitz == gemeinde)) |&gt; \n  filter(jahr != 2025) |&gt; \n  mutate(rechtsform_gruppiert = fct_lump(rechtsform, n = 3, other_level = \"Anders\"))\n\ndf |&gt; count(rechtsform_gruppiert, rechtsform, sort = TRUE)\n\n# A tibble: 12 × 3\n   rechtsform_gruppiert                         rechtsform                     n\n   &lt;fct&gt;                                        &lt;chr&gt;                      &lt;int&gt;\n 1 Gesellschaft mit beschränkter Haftung (GmbH) Gesellschaft mit beschrän…  8970\n 2 Einzelunternehmen                            Einzelunternehmen           8708\n 3 Aktiengesellschaft (AG)                      Aktiengesellschaft (AG)     4172\n 4 Anders                                       Kollektivgesellschaft (Kl…   519\n 5 Anders                                       Zweigniederlassung           468\n 6 Anders                                       Stiftung                     293\n 7 Anders                                       Verein                       236\n 8 Anders                                       Genossenschaft               105\n 9 Anders                                       Zweigniederlassung eines …    73\n10 Anders                                       Kommanditgesellschaft (Km…    37\n11 Anders                                       Institut des öffentlichen…     3\n12 Anders                                       Haupt von Gemeinderschaft      2\n\n\n\n\nDaten visualisieren\n\ndf |&gt; \n  mutate(\n    rechtsform_gruppiert = fct_rev(fct_infreq(rechtsform_gruppiert)),\n    jahr = factor(jahr)) |&gt; \n  ggplot(aes(x = jahr, fill = rechtsform_gruppiert)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\ndf |&gt; \n  mutate(\n    rechtsform_gruppiert = fct_infreq(rechtsform_gruppiert),\n    jahr = factor(jahr)) |&gt; \n  mutate(bezirk = fct_infreq(bezirk)) |&gt; \n  ggplot(aes(x = jahr, fill = rechtsform_gruppiert)) +\n  geom_bar() +\n  facet_grid(rechtsform_gruppiert ~ bezirk) +\n  theme_minimal() +\n  labs(\n    x = \"\",\n    y = \"Anzahl\",\n    fill = \"Rechtsform\",\n    title = \"Rechtsform der gemeldeten Firmen pro Bezirk in BL\",\n    caption = \"Quelle: https://data.bl.ch/explore/dataset/12460/\"\n  ) +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "exercises/unit04/prak-04c-pivot.html",
    "href": "exercises/unit04/prak-04c-pivot.html",
    "title": "Praktikum 4c: Daten pivotieren",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages importieren\n\nLadet die Packages tidyverse, ggthemes und janitor\n\n\n\nDaten laden\n\nImportiert die “data/ogd_12030_wetter.csv”-Datei. Das sind die Tagesdaten der NBCN-Station (Swiss National Basic Climate Network) Basel-Binningen vom OGD-Portal.\n\n\n\nNamen saubermachen\n\nBereinigt die Namen mit der janitor::clean_names()-Funktion\n\n\n\nDaten Zusammenfassen\n\nVerwendet group_by() und summarise() (oder summarise() und .by()) um die durschnittlichen pro Jahr zu rechnen:\n\nmaximale Tagestemperatur (tagesmaximum_lufttemperatur)\nminimale Tagestemperatur (tagesminimum_lufttemperatur)\nmittel Tagestemperatur (tagesmittel_lufttemperatur)\n\n\n\n# wetter_summary &lt;- ___ |&gt;\n#   ___(\n#     temp_mittel = ___,\n#     temp_min = ___,\n#     temp_max = ___,\n#     .by = ___\n#   )\n\n\n\nLiniendiagramm\n\nreproduziert die folgende Grafik ungefähr.\n\n\n\n# wetter_summary |&gt;\n#   ggplot() +\n#   geom_line(aes(x = ___, y = ___), colour = \"lightblue\") +\n#   geom_line(aes(x = ___, y = ___), colour = \"orange\") +\n#   geom_line(aes(x = ___, y = ___), colour = \"black\") +\n#   labs(\n#     x = \"\",\n#     y = \"Temperatur (°C)\",\n#     title = \"Durschnittliche Temperaturen in der Binnigen-Station, BL\",\n#     caption = \"Quelle: https://data.bl.ch/explore/dataset/12030/\"\n#   ) +\n#   theme_minimal()\n\nDas Problem: mehrere geoms, keine colour-aesthetic, keine legend.\n\nVerlängert den Datensatz, indem ihr temp_typ und temp_wert in zwei Spalten zusammenfasst.\n\n\n# wetter_summary_long &lt;- wetter_summary |&gt;\n#   ___(\n#     cols = ___,\n#     names_to = ___,\n#     values_to = ___\n#   )\n\n\n# p &lt;- wetter_summary_long |&gt;\n#   ggplot(aes(x = ___, y = ___, colour = ___)) +\n#   geom_line(alpha = 0.4) +\n#   geom_point(alpha = 0.4) +\n#   geom_smooth(method = \"lm\", se = FALSE) +\n#   labs(\n#     x = \"\",\n#     y = \"Temperatur (°C)\",\n#     title = \"Durschnittliche Temperaturen in der Binnigen-Station, BL\",\n#     colour = \"\",\n#     caption = \"Quelle: https://data.bl.ch/explore/dataset/12030/\"\n#   ) +\n#   scale_x_continuous(\n#     breaks = seq(min(wetter_summary_long$jahr), max(wetter_summary_long$jahr), by = 10)\n#   ) +\n#   theme_minimal() +\n#   scale_colour_colorblind(labels = c(\"Maximal\", \"Mittel\", \"Minimal\"))\n\n# p"
  },
  {
    "objectID": "exercises/unit04/prak-04b-join-firmen.html",
    "href": "exercises/unit04/prak-04b-join-firmen.html",
    "title": "Praktikum 4b - Daten zusammenfügen",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -"
  },
  {
    "objectID": "exercises/unit04/prak-04b-join-firmen.html#barplot",
    "href": "exercises/unit04/prak-04b-join-firmen.html#barplot",
    "title": "Praktikum 4b - Daten zusammenfügen",
    "section": "Barplot",
    "text": "Barplot\n\nBehaltet nur Jahre bis und mit 2024\nErstellt ein Balkendiagram der Anzahl von Firmen pro Kategorie, Jahr und Bezirk\n\n\n# Pro Bezirk, bar plot\n\n# firmen_joined |&gt;\n#   # filter\n#   ___ |&gt; \n#\n#   # Bar plot\n#   ggplot(aes(x = ___, fill = ___)) +\n#   ___() +\n#   facet_wrap(~___) +\n#   theme_minimal() +\n#   labs(\n#     x = \"\",\n#     y = \"Anzahl Firmen\",\n#     title = \"Anzahl Firmen in BL pro Bezirk und Kategorie\",\n#     caption = \"https://data.bl.ch/explore/dataset/12460\"\n#   )"
  },
  {
    "objectID": "exercises/unit04/prak-04b-join-firmen.html#liniendiagramm",
    "href": "exercises/unit04/prak-04b-join-firmen.html#liniendiagramm",
    "title": "Praktikum 4b - Daten zusammenfügen",
    "section": "Liniendiagramm",
    "text": "Liniendiagramm\n\nBehaltet nur Jahre bis und mit 2024\nVerwendet summarise() um die Anzahl von Firmen pro Jahr, Bezirk und gruppierte Kategorien zu berechnen\nErstellt ein Liniendiagram der Anzahl von Firmen pro Kategorie, Jahr und Bezirk\n\n\n# Pro Bezirk, line plot\n\n# firmen_joined |&gt;\n#   # filter\n#   ___ |&gt; \n#\n#   # summarise\n#   summarise(n = ___, .by = ___)\n# \n#   # line plot\n#   ggplot(aes(x = ___, y = ___, colour = ___)) +\n#   geom_point() +\n#   geom_line() +\n#   ___(method = \"lm\", se = FALSE) +\n#   facet_wrap(~___) +\n#   theme_minimal() +\n#   labs(\n#     x = \"\",\n#     y = \"Anzahl Firmen\",\n#     title = \"Anzahl Firmen in BL pro Bezirk und Kategorie\",\n#     caption = \"https://data.bl.ch/explore/dataset/12460\"\n#   )"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export.html",
    "href": "exercises/unit04/prak-04a-import-export.html",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export.html#packages-laden",
    "href": "exercises/unit04/prak-04a-import-export.html#packages-laden",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "Packages laden",
    "text": "Packages laden\n\nLadet die Packages tidyverse, writexl und janitor"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export.html#daten-importieren",
    "href": "exercises/unit04/prak-04a-import-export.html#daten-importieren",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "Daten importieren",
    "text": "Daten importieren\n\nImportiert die “data/ogd_12030_wetter.csv”-Datei mit read_csv2(). Das sind die Tagesdaten der NBCN-Station (Swiss National Basic Climate Network) Basel-Binningen vom OGD-Portal.\n\n\n# wetter &lt;- \n\n\nBereinigt die Namen mit der janitor::clean_names()-Funktion\nVerwendet group_by() und summarise() um die durschnittliche maximale Tagestemperatur (tagesmaximum_lufttemperatur) pro Jahr zu rechnen:\n\n\n# wetter_summary &lt;- wetter |&gt;\n#   group_by(___) |&gt;\n#   summarise(temp_max = ___)\n\n\nLest die Warnung/Fehlermeldung. Wie könntet ihr das Problem beheben?\n\nOption 1: readr::parse_number()\nOption 2: read_delim()"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export.html#daten-exportieren",
    "href": "exercises/unit04/prak-04a-import-export.html#daten-exportieren",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "Daten exportieren",
    "text": "Daten exportieren\n\nSpeichert das Ergebnis in einer csv-Datei und einer xlsx-Datei"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export.html#datenkodierung",
    "href": "exercises/unit04/prak-04a-import-export.html#datenkodierung",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "Datenkodierung",
    "text": "Datenkodierung\n\nLadet “data/urbanisierung-grad_1521.csv” mit read_delim\n\n\n# urb_grad &lt;- ___\n# glimpse(urb_grad)\n\n\nEtwas stimmt mit den Characters nicht, warum? Benutzt die readr::guess_encoding()-Funktion\nWie könntet ihr das Problem beheben? Hint: ?readr::locale.\n\n\n# urb_grad &lt;- ___(\"data/urbanisierung-grad_1521.csv\", delim = \";\", locale = locale(encoding = ___))"
  },
  {
    "objectID": "exercises/unit03/prep_12160_gebaeude.html",
    "href": "exercises/unit03/prep_12160_gebaeude.html",
    "title": "Prepare Energy Data kGWR",
    "section": "",
    "text": "Load Packages and Data\n\nlibrary(scales) # For percent_label() in ggplot()\nlibrary(naniar) # To visualise missing values\nlibrary(tidyverse)\n\n# Downloaded from https://data.bl.ch/explore/dataset/12160/table\ndf &lt;- read_delim(\"data/ogd_gebaeude12160.csv\")\n\n\n\nMissing Data\nLet us look at the rate of missing data:\n\ngg_miss_var(df, show_pct = TRUE)\n\n\n\n\n\n\n\n\nThere are multiple levels for the energy source:\n\ndf |&gt; count(energie_waermequelle_heizung_primaer_bezeichnung, sort = TRUE)\n\n# A tibble: 18 × 2\n   energie_waermequelle_heizung_primaer_bezeichnung      n\n   &lt;chr&gt;                                             &lt;int&gt;\n 1 Keine                                             51169\n 2 Gas                                               23644\n 3 Heizöl                                            23476\n 4 Erdwärme (generisch)                              10851\n 5 Fernwärme (generisch)                              7026\n 6 Holz (generisch)                                   3160\n 7 Luft                                               2660\n 8 Elektrizität                                       2364\n 9 Unbestimmt                                         1819\n10 Erdwärmesonde                                      1201\n11 Holz (Pellets)                                      737\n12 Holz (Stückholz)                                    466\n13 Holz (Schnitzel)                                    185\n14 Andere                                              128\n15 Wasser (Grundwasser, Oberflächenwasser, Abwasser)    30\n16 Abwärme (innerhalb des Gebäudes)                     12\n17 Sonne (thermisch)                                    12\n18 Erdregister                                           6\n\n\nThe time frame is very wide:\n\ndf |&gt; \n  summarise(min_year = min(baujahr_des_gebaeudes, na.rm = TRUE),\n            max_year = max(baujahr_des_gebaeudes, na.rm = TRUE))\n\n# A tibble: 1 × 2\n  min_year max_year\n     &lt;dbl&gt;    &lt;dbl&gt;\n1     1418     2024\n\n\n\n\nCleaning UP\nLet us clean up the dataset a bit:\n\nRemove columns with an NA-rate &gt; 25%\nCombine factor levels when appropriate\nOnly keep building built in or after 1960\nOrder the energy factor in decreasing order of total surface (later in the next section)\nRemove building without an area or number of floors\n\n\ndf_clean &lt;- df |&gt;\n  # Remove columns with an `NA`-rate &gt; 25%\n  select(where(\\(x) mean(is.na(x)) &lt;= 0.25)) |&gt;\n  \n  # Only keep building built in or after 1960\n  filter(baujahr_des_gebaeudes &gt; 1960) |&gt;\n  \n  # Combine factor levels when appropriate\n    mutate(\n    energie_waermequelle_heizung_primaer_bezeichnung =\n      fct_collapse(energie_waermequelle_heizung_primaer_bezeichnung,\n        \"Fossil\" = c(\"Gas\", \"Heizöl\"),\n        \"Keine\" = \"Keine\",\n        \"Unbestimmt\" = \"Unbestimmt\",\n      other_level = \"Erneuerbare\"\n      )\n  )\n\ngg_miss_var(df_clean, show_pct = TRUE)\n\n\n\n\n\n\n\n\n\ndf_clean |&gt; count(energie_waermequelle_heizung_primaer_bezeichnung)\n\n# A tibble: 4 × 2\n  energie_waermequelle_heizung_primaer_bezeichnung     n\n  &lt;fct&gt;                                            &lt;int&gt;\n1 Fossil                                           29279\n2 Keine                                            27849\n3 Unbestimmt                                         681\n4 Erneuerbare                                      19694\n\n\n\n\nVisualise\n\ndf1 &lt;- df_clean |&gt; \n  select(\n    baujahr_des_gebaeudes, \n    gemeindename, \n    gebaeudeflaeche, \n    anzahl_geschosse, \n    gebaeudekategorie_bezeichnung,\n    energie_waermequelle_heizung_primaer_bezeichnung) |&gt; \n  filter(!is.na(anzahl_geschosse) & !is.na(gebaeudeflaeche) & gebaeudekategorie_bezeichnung == \"Gebäude mit ausschliesslicher Wohnnutzung\") |&gt; \n  mutate(gebaeudeflaeche_total = gebaeudeflaeche * anzahl_geschosse) |&gt; \n  summarise(heated_surface = sum(gebaeudeflaeche_total), .by = c(baujahr_des_gebaeudes, energie_waermequelle_heizung_primaer_bezeichnung)) |&gt; \n  mutate(energie_waermequelle_heizung_primaer_bezeichnung = fct_reorder(\n    energie_waermequelle_heizung_primaer_bezeichnung, -heated_surface, .fun = sum\n  ))\n\ndf1 |&gt; \n  ggplot(aes(x = baujahr_des_gebaeudes, y = heated_surface, colour = energie_waermequelle_heizung_primaer_bezeichnung)) +\n  # geom_line() +\n  # geom_point() +\n  geom_smooth(se = FALSE) +\n  facet_wrap(~energie_waermequelle_heizung_primaer_bezeichnung) +\n  labs(\n    x = \"Baujahr\",\n    y = \"Gesamte Fläche (m2)\",\n    colour = \"Heizungsquelle\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndf2 &lt;- df_clean |&gt; \n  select(\n    baujahr_des_gebaeudes, \n    gemeindename, \n    gebaeudeflaeche, \n    anzahl_geschosse, \n    gebaeudekategorie_bezeichnung,\n    energie_waermequelle_heizung_primaer_bezeichnung) |&gt; \n  filter(!is.na(anzahl_geschosse) & !is.na(gebaeudeflaeche) & gebaeudekategorie_bezeichnung == \"Gebäude mit ausschliesslicher Wohnnutzung\") |&gt; \n  mutate(gebaeudeflaeche_total = gebaeudeflaeche * anzahl_geschosse) |&gt; \n  add_count(baujahr_des_gebaeudes, energie_waermequelle_heizung_primaer_bezeichnung, wt = gebaeudeflaeche_total, name = \"order_index\") |&gt; \n  mutate(energie_waermequelle_heizung_primaer_bezeichnung = fct_reorder(\n    energie_waermequelle_heizung_primaer_bezeichnung, -order_index, .fun = sum\n  )) |&gt; \n  select(-order_index)\n\ndf2 |&gt; \n    summarise(heated_surface = sum(gebaeudeflaeche_total), .by = c(baujahr_des_gebaeudes, energie_waermequelle_heizung_primaer_bezeichnung)) |&gt; \nggplot(aes(x = baujahr_des_gebaeudes, y = heated_surface, colour = energie_waermequelle_heizung_primaer_bezeichnung)) +\n  # geom_line() +\n  # geom_point() +\n  geom_smooth(se = FALSE) +\n  facet_wrap(~energie_waermequelle_heizung_primaer_bezeichnung) +\n  labs(\n    x = \"Baujahr\",\n    y = \"Gesamte Fläche (m2)\",\n    colour = \"Heizungsquelle\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nall.equal(df1, df2 |&gt; \n    summarise(heated_surface = sum(gebaeudeflaeche_total), .by = c(baujahr_des_gebaeudes, energie_waermequelle_heizung_primaer_bezeichnung)))\n\n[1] TRUE\n\n\n\n\nFinal Cleaned Dataset to Save\n\ndf_clean &lt;- df |&gt;\n  # Remove columns with an `NA`-rate &gt; 25%\n  select(where(\\(x) mean(is.na(x)) &lt;= 0.25)) |&gt;\n  \n  # Only keep building built in or after 1960\n  filter(baujahr_des_gebaeudes &gt; 1900 & gebaeudekategorie_bezeichnung == \"Gebäude mit ausschliesslicher Wohnnutzung\" & gebaeudestatus_bezeichnung == \"Bestehend\") |&gt;\n  # Keep columns of interest\n  select(egid:grundstücksnummer, baujahr_des_gebaeudes:anzahl_geschosse, starts_with(\"energie_waermequelle_heizung_primaer\")) |&gt; \n    # select(-starts_with(\"aktualisierungsdatum\"), -gebaeudekategorie_bezeichnung, -gebaeudestatus_bezeichnung) |&gt; \n  # Combine factor levels when appropriate\n  mutate(\n    energie_waermequelle_heizung_primaer_bezeichnung_gruppiert =\n      fct_collapse(energie_waermequelle_heizung_primaer_bezeichnung,\n        \"Fossil\" = c(\"Gas\", \"Heizöl\"),\n        \"Keine\" = \"Keine\",\n        \"Unbestimmt\" = \"Unbestimmt\",\n      other_level = \"Erneuerbare\"\n      )\n  ) |&gt; \n  filter(!is.na(anzahl_geschosse) & !is.na(gebaeudeflaeche)) |&gt; \n  \n  # Reorder energy levels in decreasing order of heated surface for plot\n    mutate(gebaeudeflaeche_total = gebaeudeflaeche * anzahl_geschosse) |&gt; \n  add_count(baujahr_des_gebaeudes, energie_waermequelle_heizung_primaer_bezeichnung_gruppiert, wt = gebaeudeflaeche_total, name = \"order_index\") |&gt; \n  mutate(energie_waermequelle_heizung_primaer_bezeichnung_gruppiert = fct_reorder(\n    energie_waermequelle_heizung_primaer_bezeichnung_gruppiert, -order_index, .fun = sum\n  )) |&gt; \n  select(-order_index, -gebaeudeflaeche_total)\n\n\nskimr::skim(df_clean)\n\n\nData summary\n\n\nName\ndf_clean\n\n\nNumber of rows\n57883\n\n\nNumber of columns\n13\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nfactor\n1\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ngemeindename\n0\n1\n4\n17\n0\n86\n0\n\n\negrid\n0\n1\n14\n14\n0\n52473\n0\n\n\ngrundstücksnummer\n0\n1\n1\n6\n0\n10893\n0\n\n\nbauperiode_bezeichnung\n0\n1\n15\n25\n0\n13\n0\n\n\nenergie_waermequelle_heizung_primaer_bezeichnung\n0\n1\n3\n49\n0\n18\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nenergie_waermequelle_heizung_primaer_bezeichnung_gruppiert\n0\n1\nFALSE\n4\nFos: 37025, Ern: 20273, Unb: 571, Kei: 14\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\negid\n0\n1\n54560453.05\n101120847.14\n390001\n408013.5\n426334\n3032140\n245076258\n▇▁▁▁▂\n\n\ngemeindenummer_bfs\n0\n1\n2801.32\n40.41\n2761\n2769.0\n2775\n2831\n2895\n▇▁▃▂▁\n\n\nbaujahr_des_gebaeudes\n0\n1\n1977.01\n26.99\n1901\n1961.0\n1979\n1998\n2024\n▂▂▇▇▆\n\n\nbauperiode_code\n0\n1\n8016.27\n3.39\n8011\n8014.0\n8015\n8019\n8023\n▆▇▅▃▅\n\n\ngebaeudeflaeche\n0\n1\n123.56\n85.06\n6\n73.0\n100\n144\n4268\n▇▁▁▁▁\n\n\nanzahl_geschosse\n0\n1\n2.55\n0.98\n1\n2.0\n2\n3\n23\n▇▁▁▁▁\n\n\nenergie_waermequelle_heizung_primaer_code\n0\n1\n7528.20\n20.13\n7500\n7520.0\n7520\n7530\n7599\n▂▇▁▁▁\n\n\n\n\n\n\ndf_clean |&gt;\n  mutate(gebaeudeflaeche_total = gebaeudeflaeche * anzahl_geschosse) |&gt;\n  summarise(heated_surface = sum(gebaeudeflaeche_total), .by = c(baujahr_des_gebaeudes, energie_waermequelle_heizung_primaer_bezeichnung_gruppiert)) |&gt;\n  ggplot(aes(x = baujahr_des_gebaeudes, y = heated_surface, colour = energie_waermequelle_heizung_primaer_bezeichnung_gruppiert)) +\n  geom_line(alpha = 0.5) +\n  # geom_point() +\n  geom_smooth(se = FALSE) +\n  facet_wrap(~energie_waermequelle_heizung_primaer_bezeichnung_gruppiert) +\n  labs(\n    x = \"Baujahr\",\n    y = \"Gesamte Fläche (m2)\",\n    colour = \"Heizungsquelle\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ndf_clean |&gt;\n  mutate(gebaeudeflaeche_total = gebaeudeflaeche * anzahl_geschosse) |&gt;\n  summarise(heated_surface = sum(gebaeudeflaeche_total), .by = c(baujahr_des_gebaeudes, energie_waermequelle_heizung_primaer_bezeichnung_gruppiert)) |&gt;\n  mutate(heated_surface_perc = heated_surface / sum(heated_surface), .by = c(baujahr_des_gebaeudes)) |&gt; \n  ggplot(aes(x = baujahr_des_gebaeudes, y = heated_surface_perc, colour = energie_waermequelle_heizung_primaer_bezeichnung_gruppiert)) +\n  geom_line(alpha = 0.4) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(se = FALSE) +\n  facet_wrap(~energie_waermequelle_heizung_primaer_bezeichnung_gruppiert) +\n  labs(\n    title = \"Anteil Gebäudefläche pro Heizungsmethode ab 1960\",\n    subtitle = \"Kanton BL\",\n    caption = \"Quelle: https://data.bl.ch/explore/dataset/12160/table\",\n    x = \"Baujahr\",\n    y = \"Anteil der gesamten Fläche\",\n    colour = \"Heizungsquelle\"\n  ) +\n  theme_minimal() + \n  scale_y_continuous(labels = scales::label_percent())\n\n\n\n\n\n\n\n\n\n\nSave Prepared Data\n\nwrite_rds(df_clean, \"data/ogd_gebaeude12160_clean.rds\")"
  },
  {
    "objectID": "exercises/unit03/prak-3b-groups-penguins-key.html",
    "href": "exercises/unit03/prak-3b-groups-penguins-key.html",
    "title": "Prak 3b: Gruppen Transformieren mit dplyr",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\ngroup_by(), summarise(), n() und count()\nDie Funktion group_by() wird genutzt um einen existierenden Dataframe in einen gruppierten Dataframe zu konvertieren, sodass die folgenden Operationen auf der Ebene der Gruppen angewandt werden.\nMit der Funktion summarise() wird ein neuer Dataframe erstellt. Dieser enthält eine Spalte für jede angegebene zusammenfassende Operation und eine Zeile für jede Kombination der Gruppierungsvariablen.\nDie Funktion n() gibt die Anzahl der Beobachtungen in einer aktuellen Gruppe zurück. Sie kann nur innerhalb von summarise() (und mutate() und filter()) verwendet werden.\ngroup_by() + summarise() + n() ≡\\equiv count(), sodass die zwei folgenden code chunks equivalent sind:\n\n# df |&gt; \n#   group_by(var1, var2) |&gt; \n#   summarise(n = n())\n\n\n# df |&gt; count(var1, var2)\n\n\n\nAufgaben\n\nLade tidyverse, skimr und palmerpenguins Packages.\n\n\nlibrary(skimr)\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n\nVerwende group_by() und summarise() um herauszufinden, wie viele Pinguine es pro Art gibt.\n\npenguins |&gt; \n  group_by(species) |&gt; \n  summarise(n = n())\n\n# A tibble: 3 × 2\n  species       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n\n\nWas ist das Minimum und Maximum bill_length_mm pro species?\n\npenguins |&gt; \n  group_by(species) |&gt; \n  summarise(min_year = min(bill_length_mm, na.rm = TRUE),\n            max_year = max(bill_length_mm, na.rm = TRUE))\n\n# A tibble: 3 × 3\n  species   min_year max_year\n  &lt;fct&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1 Adelie        32.1     46  \n2 Chinstrap     40.9     58  \n3 Gentoo        40.9     59.6\n\n\nWas ist die Proportion von Pinguine pro species? Hint: sum(var) summiert alle Werte in der Variable var.\n\npenguins |&gt; \n  group_by(species) |&gt; \n  summarise(n = n()) |&gt; \n  mutate(prop = n / sum(n))\n\n# A tibble: 3 × 3\n  species       n  prop\n  &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt;\n1 Adelie      152 0.442\n2 Chinstrap    68 0.198\n3 Gentoo      124 0.360\n\n\n\npenguins |&gt; \n  count(species) |&gt; \n  mutate(prop = n / sum(n))\n\n# A tibble: 3 × 3\n  species       n  prop\n  &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt;\n1 Adelie      152 0.442\n2 Chinstrap    68 0.198\n3 Gentoo      124 0.360\n\n\nNimm “Adelie” raus. Wie viele Pinguine gibt es pro species? Prozente?\n\npenguins |&gt; \n  filter(species != \"Adelie\") |&gt; \n  group_by(species) |&gt; \n  summarise(n = n()) |&gt; \n  mutate(prop = n / sum(n))\n\n# A tibble: 2 × 3\n  species       n  prop\n  &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt;\n1 Chinstrap    68 0.354\n2 Gentoo      124 0.646\n\n\n\npenguins |&gt;\n  filter(species != \"Adelie\") |&gt;\n  count(species) |&gt;\n  mutate(prop = n / sum(n))\n\n# A tibble: 2 × 3\n  species       n  prop\n  &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt;\n1 Chinstrap    68 0.354\n2 Gentoo      124 0.646\n\n\nBenutze group_by() und summarise()um zu rechnen, wie viele Pinguine es pro species/island-Kombination gibt (auch Prozente).\n\npenguins |&gt; \ngroup_by(species, island) |&gt; \nsummarise(n = n()) |&gt; \nmutate(prop = n / sum(n))\n\n# A tibble: 5 × 4\n# Groups:   species [3]\n  species   island        n  prop\n  &lt;fct&gt;     &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt;\n1 Adelie    Biscoe       44 0.289\n2 Adelie    Dream        56 0.368\n3 Adelie    Torgersen    52 0.342\n4 Chinstrap Dream        68 1    \n5 Gentoo    Biscoe      124 1    \n\n\nEtwas stimmt mit den Proportionen nicht! Wie können wir das gewünschte Ergebnis erhalten? Hint: Schaue dir genau die Warnung und den resultierenden Dataframe.\n\npenguins |&gt; \n  group_by(species, island) |&gt; \n  summarise(n = n()) |&gt;\n  ungroup() |&gt; \n  mutate(prop = n / sum(n))\n\n# A tibble: 5 × 4\n  species   island        n  prop\n  &lt;fct&gt;     &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt;\n1 Adelie    Biscoe       44 0.128\n2 Adelie    Dream        56 0.163\n3 Adelie    Torgersen    52 0.151\n4 Chinstrap Dream        68 0.198\n5 Gentoo    Biscoe      124 0.360\n\n\nBenutze count()um zu rechnen, wie viele Pinguine es pro species/island-Kombination gibt (auch Prozente).\n\npenguins |&gt; \ncount(species, island) |&gt; \nmutate(prop = n / sum(n))\n\n# A tibble: 5 × 4\n  species   island        n  prop\n  &lt;fct&gt;     &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt;\n1 Adelie    Biscoe       44 0.128\n2 Adelie    Dream        56 0.163\n3 Adelie    Torgersen    52 0.151\n4 Chinstrap Dream        68 0.198\n5 Gentoo    Biscoe      124 0.360\n\n\nWas bewirkt das Argument sort bei count()?\n\npenguins |&gt; count(species, sort = TRUE)\n\n# A tibble: 3 × 2\n  species       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Gentoo      124\n3 Chinstrap    68\n\n\nErstelle Violin- und Boxplots, die die Quantiles und Median des Gewichts pro Insel und Art zeigen (body_mass_g auf der y-Achse, species auf der x-Achse, Facetierung mit island). Benutze das color scheme ggthemes::scale_color_colorblind().\n\nlibrary(ggthemes)\npenguins |&gt;\n  ggplot(aes(\n    x = species,\n    y = body_mass_g,\n    colour = species\n  )) +\n  geom_violin(width = 1.4) +\n  geom_boxplot() +\n  geom_jitter(alpha = 0.3) +\n  facet_wrap(~ island) +\n  labs(\n    x = \"\",\n    y = \"Gewicht\"\n  ) +\n  theme_minimal() +\n  theme(legend.position=\"none\") +\n  scale_colour_colorblind() # Colour-blind friendly"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "",
    "text": "Das kantonale Gebäude- und Wohnungsregister (kGWR) veröffentlicht monatlich im OGD-Portal sämtliche Gebäude im Kanton Basel-Landschaft (BL), die unter anderem die Wärmequelle für die Heizung sowie weitere Merkmale enthaltet.\nDer vorliegende, vorbereitete Datensatz basiert auf dieser kGWR-Tabelle und umfasst die Energiequelle der Heizung von bestehenden Gebäuden mit ausschliesslicher Wohnnutzung. Ziel dieses Praktikums ist es, Trends bei den Energiequellen für die Heizung im Verlauf der Jahre zu ermitteln.\nDas Ziel des Praktikums ist diese Darstellung zu reproduzieren:"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#packages-laden",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#packages-laden",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Packages Laden",
    "text": "Packages Laden\n\nLade die scales und tidyverse Packages.\n\n\nlibrary(scales)\nlibrary(tidyverse)"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#daten-laden",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#daten-laden",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Daten Laden",
    "text": "Daten Laden\n\nLade die vorbereiteten Daten:\n\n\ngebaeude &lt;- read_rds(\"data/ogd_gebaeude12160_clean.rds\")"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#daten-erkunden",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#daten-erkunden",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Daten erkunden",
    "text": "Daten erkunden\n\nErkunde die Daten: Anzahl Zeilen und Spalten, Variable-Namen und -Typen.\n\n\nglimpse(gebaeude)\n\nRows: 57,883\nColumns: 13\n$ egid                                                       &lt;dbl&gt; 3029846, 39…\n$ gemeindenummer_bfs                                         &lt;dbl&gt; 2770, 2763,…\n$ gemeindename                                               &lt;chr&gt; \"Muttenz\", …\n$ egrid                                                      &lt;chr&gt; \"CH79827961…\n$ grundstücksnummer                                          &lt;chr&gt; \"635\", \"457…\n$ baujahr_des_gebaeudes                                      &lt;dbl&gt; 1998, 1970,…\n$ bauperiode_code                                            &lt;dbl&gt; 8019, 8014,…\n$ bauperiode_bezeichnung                                     &lt;chr&gt; \"Periode vo…\n$ gebaeudeflaeche                                            &lt;dbl&gt; 58, 85, 172…\n$ anzahl_geschosse                                           &lt;dbl&gt; 3, 3, 3, 2,…\n$ energie_waermequelle_heizung_primaer_code                  &lt;dbl&gt; 7520, 7530,…\n$ energie_waermequelle_heizung_primaer_bezeichnung           &lt;chr&gt; \"Gas\", \"Hei…\n$ energie_waermequelle_heizung_primaer_bezeichnung_gruppiert &lt;fct&gt; Fossil, Fos…\n\n\n\nWie viele verschiedene Gemeinden sind es (distinct oder count())?\n\n\ngebaeude |&gt; distinct(gemeindename)\n\n# A tibble: 86 × 1\n   gemeindename\n   &lt;chr&gt;       \n 1 Muttenz     \n 2 Arlesheim   \n 3 Wahlen      \n 4 Münchenstein\n 5 Giebenach   \n 6 Tenniken    \n 7 Therwil     \n 8 Arisdorf    \n 9 Ettingen    \n10 Diegten     \n# ℹ 76 more rows\n\ngebaeude |&gt; count(gemeindename)\n\n# A tibble: 86 × 2\n   gemeindename     n\n   &lt;chr&gt;        &lt;int&gt;\n 1 Aesch (BL)    1942\n 2 Allschwil     3106\n 3 Anwil          122\n 4 Arboldswil     173\n 5 Arisdorf       438\n 6 Arlesheim     1710\n 7 Augst          176\n 8 Bennwil        146\n 9 Biel-Benken   1022\n10 Binningen     2541\n# ℹ 76 more rows\n\n\n\nWie viele Energiequellen der Heizung sind es?\n\n\ngebaeude |&gt; count(\n  energie_waermequelle_heizung_primaer_bezeichnung_gruppiert,\n  energie_waermequelle_heizung_primaer_bezeichnung,\n  sort = TRUE\n)\n\n# A tibble: 18 × 3\n   energie_waermequelle_heizung_primaer_bezeichnu…¹ energie_waermequelle…²     n\n   &lt;fct&gt;                                            &lt;chr&gt;                  &lt;int&gt;\n 1 Fossil                                           Gas                    19442\n 2 Fossil                                           Heizöl                 17583\n 3 Erneuerbare                                      Erdwärme (generisch)    9636\n 4 Erneuerbare                                      Fernwärme (generisch)   4658\n 5 Erneuerbare                                      Luft                    1585\n 6 Erneuerbare                                      Elektrizität            1415\n 7 Erneuerbare                                      Holz (generisch)        1387\n 8 Erneuerbare                                      Erdwärmesonde            730\n 9 Unbestimmt                                       Unbestimmt               571\n10 Erneuerbare                                      Holz (Pellets)           447\n11 Erneuerbare                                      Holz (Stückholz)         272\n12 Erneuerbare                                      Andere                    86\n13 Erneuerbare                                      Holz (Schnitzel)          41\n14 Keine                                            Keine                     14\n15 Erneuerbare                                      Sonne (thermisch)          9\n16 Erneuerbare                                      Erdregister                4\n17 Erneuerbare                                      Wasser (Grundwasser, …     2\n18 Erneuerbare                                      Abwärme (innerhalb de…     1\n# ℹ abbreviated names:\n#   ¹​energie_waermequelle_heizung_primaer_bezeichnung_gruppiert,\n#   ²​energie_waermequelle_heizung_primaer_bezeichnung"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#daten-visualisieren",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#daten-visualisieren",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Daten visualisieren",
    "text": "Daten visualisieren\n\nErstelle ein Liniendiagramm (geom_line()), das die gesamte Gebäudefläche (total_flaeche) nach Energiequelle und Baujahr zeigt:\n\n\ngebaeude_transformiert |&gt;\n  ggplot(aes(x = baujahr, y = total_flaeche, colour = energie_quelle)) +\n  geom_line(alpha = 0.4) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(se = FALSE) +\n  labs(\n    title = \"Totale Gebäudefläche pro Energiequelle und Baujahr ab 1960\",\n    subtitle = \"Kanton BL\",\n    caption = \"Quelle: https://data.bl.ch/explore/dataset/12160/table\",\n    x = \"Baujahr\",\n    y = \"Fläche (m2)\",\n    colour = \"Energiequelle\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nErstelle ein Liniendiagramm (geom_line()), das den Anteil der Gebäudeflächen (anteil_flaeche) nach Energiequelle und Baujahr zeigt:\n\n\np &lt;- gebaeude_transformiert |&gt;\n  ggplot(aes(x = baujahr, y = anteil_flaeche, colour = energie_quelle)) +\n  geom_line(alpha = 0.4) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(se = FALSE) +\n  labs(\n    title = \"Anteil Gebäudefläche pro Energiequelle und Baujahr ab 1960\",\n    subtitle = \"Kanton BL\",\n    caption = \"Quelle: https://data.bl.ch/explore/dataset/12160/table\",\n    x = \"Baujahr\",\n    y = \"Anteil der gesamten Fläche\"\n  ) +\n  theme_minimal() +\n  guides(colour = \"none\") +\n  scale_y_continuous(labels = scales::label_percent()) +\n  facet_wrap(~energie_quelle)\np\n\n\n\n\n\n\n\n\n\nggsave(\"img/gebaeude.png\")"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#simple",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#simple",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Simple",
    "text": "Simple\nDas Package plotly installieren und laden:\n\ninstall.packages(\"plotly\")\nlibrary(plotly)\n\n\nggplotly(p)"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#improved",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude-key.html#improved",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Improved",
    "text": "Improved\nWir können das Tooltip mit dem text()-Aesthetic kontrollieren:\n\np &lt;- gebaeude_transformiert |&gt;\n  ggplot(\n    aes(\n      x = baujahr,\n      y = anteil_flaeche,\n      colour = energie_quelle\n    )\n  ) +\n  geom_line(alpha = 0.4) +\n  geom_point(\n    # Text-Aesthetic für interactive tooltip definieren\n    aes(\n      text = paste(\n        \"Baujahr:\", baujahr, \"&lt;br&gt;\",\n        \"Anteil:\", scales::percent(anteil_flaeche, accuracy = 0.1, decimal.mark = \",\"), \"&lt;br&gt;\",\n        \"Energiequelle:\", energie_quelle\n      )\n    ),\n    alpha = 0.4\n  ) +\n  geom_smooth(se = FALSE) +\n  labs(\n    title = \"Anteil Gebäudefläche pro Energiequelle und Baujahr ab 1960\",\n    subtitle = \"Kanton BL\",\n    caption = \"Quelle: https://data.bl.ch/explore/dataset/12160/table\",\n    x = \"Baujahr\",\n    y = \"Anteil der gesamten Fläche\"\n  ) +\n  theme_minimal() +\n  guides(colour = \"none\") +\n  scale_y_continuous(labels = label_percent()) +\n  facet_wrap(~energie_quelle)\n\n# Angepasste tooltip\nplotly_plot &lt;- ggplotly(p, tooltip = \"text\") |&gt;\n  layout(\n    hoverlabel = list(\n      bgcolor = \"rgba(255, 255, 255, 0.8)\", # transparenter weisser Hintergrund\n      font = list(family = \"Arial\", size = 10, color = \"black\"), \n      bordercolor = \"rgba(0, 0, 0, 0.2)\" # Rand mit leichter Transparenz\n    ),\n    title = list(\n      text = paste0(\n        \"Anteil Gebäudefläche pro Energiequelle und Baujahr ab 1960\",\n        \"&lt;br&gt;\",\n        \"&lt;sup&gt;Kanton BL&lt;/sup&gt;\"\n      ),\n      font = list(family = \"Arial\", size = 18, color = \"black\"),\n      x = 0, # Left-align\n      xanchor = \"left\", \n      yanchor = \"top\"\n    )\n  )\nplotly_plot"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung-key.html",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung-key.html",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spaltennamen",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spaltennamen",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spaltennamen",
    "text": "Spaltennamen\nWas sind die Namen der Spalten?\n\nnames(abstimmung)\n\n [1] \"date\"                   \"entity_id\"              \"name\"                  \n [4] \"district\"               \"vote_id\"                \"domain\"                \n [7] \"type\"                   \"title_de_CH\"            \"counted\"               \n[10] \"answer\"                 \"percent_yeas\"           \"percent_nays\"          \n[13] \"percent_turnout\"        \"eligible_voters\"        \"expats\"                \n[16] \"empty\"                  \"invalid\"                \"yeas\"                  \n[19] \"nays\"                   \"link_to_canton_results\" \"url_web\""
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spalten-verschieben-relocate",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spalten-verschieben-relocate",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spalten verschieben: relocate()",
    "text": "Spalten verschieben: relocate()\nVerschiebe die Prozentspalten (percent_yeas, percent_nays, percent_turnout) nach der Bezirksspalte (district):\n\nrelocate(abstimmung, percent_yeas, percent_nays, percent_turnout, .after = district)\n\n# A tibble: 31,734 × 21\n   date       entity_id name  district percent_yeas percent_nays percent_turnout\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;\n 1 2017-05-21      2765 Binn… Arleshe…         87.9         12.1            46.2\n 2 2017-05-21      2766 Birs… Arleshe…         60.1         39.9            34.9\n 3 2017-05-21      2766 Birs… Arleshe…         29.5         70.5            34.2\n 4 2017-05-21      2766 Birs… Arleshe…         26.1         73.9            34.0\n 5 2017-05-21      2766 Birs… Arleshe…         35.1         64.9            33.9\n 6 2017-05-21      2766 Birs… Arleshe…         85.4         14.6            33.3\n 7 2017-05-21      2767 Bott… Arleshe…         48.3         51.7            52.6\n 8 2017-05-21      2767 Bott… Arleshe…         42.6         57.4            53.1\n 9 2017-05-21      2767 Bott… Arleshe…         22.5         77.5            52.4\n10 2017-05-21      2767 Bott… Arleshe…         33.8         66.2            52.2\n# ℹ 31,724 more rows\n# ℹ 14 more variables: vote_id &lt;chr&gt;, domain &lt;chr&gt;, type &lt;chr&gt;,\n#   title_de_CH &lt;chr&gt;, counted &lt;lgl&gt;, answer &lt;chr&gt;, eligible_voters &lt;dbl&gt;,\n#   expats &lt;dbl&gt;, empty &lt;dbl&gt;, invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;,\n#   link_to_canton_results &lt;chr&gt;, url_web &lt;chr&gt;\n\n\n\nrelocate(abstimmung, starts_with(\"percent\"), .after = district)\n\n# A tibble: 31,734 × 21\n   date       entity_id name  district percent_yeas percent_nays percent_turnout\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;\n 1 2017-05-21      2765 Binn… Arleshe…         87.9         12.1            46.2\n 2 2017-05-21      2766 Birs… Arleshe…         60.1         39.9            34.9\n 3 2017-05-21      2766 Birs… Arleshe…         29.5         70.5            34.2\n 4 2017-05-21      2766 Birs… Arleshe…         26.1         73.9            34.0\n 5 2017-05-21      2766 Birs… Arleshe…         35.1         64.9            33.9\n 6 2017-05-21      2766 Birs… Arleshe…         85.4         14.6            33.3\n 7 2017-05-21      2767 Bott… Arleshe…         48.3         51.7            52.6\n 8 2017-05-21      2767 Bott… Arleshe…         42.6         57.4            53.1\n 9 2017-05-21      2767 Bott… Arleshe…         22.5         77.5            52.4\n10 2017-05-21      2767 Bott… Arleshe…         33.8         66.2            52.2\n# ℹ 31,724 more rows\n# ℹ 14 more variables: vote_id &lt;chr&gt;, domain &lt;chr&gt;, type &lt;chr&gt;,\n#   title_de_CH &lt;chr&gt;, counted &lt;lgl&gt;, answer &lt;chr&gt;, eligible_voters &lt;dbl&gt;,\n#   expats &lt;dbl&gt;, empty &lt;dbl&gt;, invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;,\n#   link_to_canton_results &lt;chr&gt;, url_web &lt;chr&gt;"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spalten-auswählen-select",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spalten-auswählen-select",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spalten auswählen: select()",
    "text": "Spalten auswählen: select()\nÜberlegt euch so viele Möglichkeiten wie möglich, um date, entity_id, name, district, percent_yeas, percent_nays und percent_turnout auszuwählen. Tipp: siehe select helpers.\n\nselect(abstimmung, date, entity_id, name, district, percent_yeas, percent_nays, percent_turnout)\n\n# A tibble: 31,734 × 7\n   date       entity_id name  district percent_yeas percent_nays percent_turnout\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;\n 1 2017-05-21      2765 Binn… Arleshe…         87.9         12.1            46.2\n 2 2017-05-21      2766 Birs… Arleshe…         60.1         39.9            34.9\n 3 2017-05-21      2766 Birs… Arleshe…         29.5         70.5            34.2\n 4 2017-05-21      2766 Birs… Arleshe…         26.1         73.9            34.0\n 5 2017-05-21      2766 Birs… Arleshe…         35.1         64.9            33.9\n 6 2017-05-21      2766 Birs… Arleshe…         85.4         14.6            33.3\n 7 2017-05-21      2767 Bott… Arleshe…         48.3         51.7            52.6\n 8 2017-05-21      2767 Bott… Arleshe…         42.6         57.4            53.1\n 9 2017-05-21      2767 Bott… Arleshe…         22.5         77.5            52.4\n10 2017-05-21      2767 Bott… Arleshe…         33.8         66.2            52.2\n# ℹ 31,724 more rows\n\n\n\nselect(abstimmung, date:district, starts_with(\"percent_\"))\n\n# A tibble: 31,734 × 7\n   date       entity_id name  district percent_yeas percent_nays percent_turnout\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;\n 1 2017-05-21      2765 Binn… Arleshe…         87.9         12.1            46.2\n 2 2017-05-21      2766 Birs… Arleshe…         60.1         39.9            34.9\n 3 2017-05-21      2766 Birs… Arleshe…         29.5         70.5            34.2\n 4 2017-05-21      2766 Birs… Arleshe…         26.1         73.9            34.0\n 5 2017-05-21      2766 Birs… Arleshe…         35.1         64.9            33.9\n 6 2017-05-21      2766 Birs… Arleshe…         85.4         14.6            33.3\n 7 2017-05-21      2767 Bott… Arleshe…         48.3         51.7            52.6\n 8 2017-05-21      2767 Bott… Arleshe…         42.6         57.4            53.1\n 9 2017-05-21      2767 Bott… Arleshe…         22.5         77.5            52.4\n10 2017-05-21      2767 Bott… Arleshe…         33.8         66.2            52.2\n# ℹ 31,724 more rows\n\n\n\nselect(abstimmung, c(1:4, 11:13))\n\n# A tibble: 31,734 × 7\n   date       entity_id name  district percent_yeas percent_nays percent_turnout\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;\n 1 2017-05-21      2765 Binn… Arleshe…         87.9         12.1            46.2\n 2 2017-05-21      2766 Birs… Arleshe…         60.1         39.9            34.9\n 3 2017-05-21      2766 Birs… Arleshe…         29.5         70.5            34.2\n 4 2017-05-21      2766 Birs… Arleshe…         26.1         73.9            34.0\n 5 2017-05-21      2766 Birs… Arleshe…         35.1         64.9            33.9\n 6 2017-05-21      2766 Birs… Arleshe…         85.4         14.6            33.3\n 7 2017-05-21      2767 Bott… Arleshe…         48.3         51.7            52.6\n 8 2017-05-21      2767 Bott… Arleshe…         42.6         57.4            53.1\n 9 2017-05-21      2767 Bott… Arleshe…         22.5         77.5            52.4\n10 2017-05-21      2767 Bott… Arleshe…         33.8         66.2            52.2\n# ℹ 31,724 more rows\n\n\n\nselect(abstimmung, date:percent_turnout, -c(vote_id, domain, type, title_de_CH, counted, answer))\n\n# A tibble: 31,734 × 7\n   date       entity_id name  district percent_yeas percent_nays percent_turnout\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;           &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;\n 1 2017-05-21      2765 Binn… Arleshe…         87.9         12.1            46.2\n 2 2017-05-21      2766 Birs… Arleshe…         60.1         39.9            34.9\n 3 2017-05-21      2766 Birs… Arleshe…         29.5         70.5            34.2\n 4 2017-05-21      2766 Birs… Arleshe…         26.1         73.9            34.0\n 5 2017-05-21      2766 Birs… Arleshe…         35.1         64.9            33.9\n 6 2017-05-21      2766 Birs… Arleshe…         85.4         14.6            33.3\n 7 2017-05-21      2767 Bott… Arleshe…         48.3         51.7            52.6\n 8 2017-05-21      2767 Bott… Arleshe…         42.6         57.4            53.1\n 9 2017-05-21      2767 Bott… Arleshe…         22.5         77.5            52.4\n10 2017-05-21      2767 Bott… Arleshe…         33.8         66.2            52.2\n# ℹ 31,724 more rows"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spalten-umbenennen-rename",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spalten-umbenennen-rename",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spalten umbenennen: rename()",
    "text": "Spalten umbenennen: rename()\nBenenne die folgenden Spalten in das deutsche Äquivalent um:\n\ndate → datum\nentity_id → bfs_code\nname → gemeinde\ndistrict → bezirk\n\n\nrename(abstimmung, datum = date, bfs_code = entity_id, gemeinde = name, bezirk = district)\n\n# A tibble: 31,734 × 21\n   datum      bfs_code gemeinde  bezirk vote_id domain type  title_de_CH counted\n   &lt;date&gt;        &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n 1 2017-05-21     2765 Binningen Arles… 201705… canton prop… Änderung d… TRUE   \n 2 2017-05-21     2766 Birsfeld… Arles… 201705… feder… prop… Energieges… TRUE   \n 3 2017-05-21     2766 Birsfeld… Arles… 201705… canton prop… Formuliert… TRUE   \n 4 2017-05-21     2766 Birsfeld… Arles… 201705… canton prop… Nicht form… TRUE   \n 5 2017-05-21     2766 Birsfeld… Arles… 201705… canton prop… Änderung d… TRUE   \n 6 2017-05-21     2766 Birsfeld… Arles… 201705… canton prop… Änderung d… TRUE   \n 7 2017-05-21     2767 Bottming… Arles… 201705… feder… prop… Energieges… TRUE   \n 8 2017-05-21     2767 Bottming… Arles… 201705… canton prop… Formuliert… TRUE   \n 9 2017-05-21     2767 Bottming… Arles… 201705… canton prop… Nicht form… TRUE   \n10 2017-05-21     2767 Bottming… Arles… 201705… canton prop… Änderung d… TRUE   \n# ℹ 31,724 more rows\n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#werte-einer-spalte-ändern-mutate",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#werte-einer-spalte-ändern-mutate",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Werte einer Spalte ändern: mutate()",
    "text": "Werte einer Spalte ändern: mutate()\nStimmanteile als Prozentsatz anzeigen (durch 100 dividieren):\n\nmutate(\n  abstimmung,\n  percent_yeas = percent_yeas / 100,\n  percent_nays = percent_nays / 100,\n  percent_turnout = percent_turnout / 100,\n  .keep = \"used\"\n)\n\n# A tibble: 31,734 × 3\n   percent_yeas percent_nays percent_turnout\n          &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;\n 1        0.879        0.121           0.462\n 2        0.601        0.399           0.349\n 3        0.295        0.705           0.342\n 4        0.261        0.739           0.340\n 5        0.351        0.649           0.339\n 6        0.854        0.146           0.333\n 7        0.483        0.517           0.526\n 8        0.426        0.574           0.531\n 9        0.225        0.775           0.524\n10        0.338        0.662           0.522\n# ℹ 31,724 more rows"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spalten-erstellen-mutate",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung-key.html#spalten-erstellen-mutate",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spalten erstellen: mutate()",
    "text": "Spalten erstellen: mutate()\nPrüfe, ob die Summe der Ja- und Nein-Stimmen 100 beträgt.\n\nmutate(abstimmung, percent_total = percent_yeas + percent_nays, .keep = \"used\")\n\n# A tibble: 31,734 × 3\n   percent_yeas percent_nays percent_total\n          &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;\n 1         87.9         12.1           100\n 2         60.1         39.9           100\n 3         29.5         70.5           100\n 4         26.1         73.9           100\n 5         35.1         64.9           100\n 6         85.4         14.6           100\n 7         48.3         51.7           100\n 8         42.6         57.4           100\n 9         22.5         77.5           100\n10         33.8         66.2           100\n# ℹ 31,724 more rows\n\n\nBerechne die Anzahl der Wähler, die sich beteiligt haben:\n\nmutate(abstimmung, turnout = percent_turnout * eligible_voters / 100, .after = percent_turnout)\n\n# A tibble: 31,734 × 22\n   date       entity_id name   district vote_id domain type  title_de_CH counted\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n 1 2017-05-21      2765 Binni… Arleshe… 201705… canton prop… Änderung d… TRUE   \n 2 2017-05-21      2766 Birsf… Arleshe… 201705… feder… prop… Energieges… TRUE   \n 3 2017-05-21      2766 Birsf… Arleshe… 201705… canton prop… Formuliert… TRUE   \n 4 2017-05-21      2766 Birsf… Arleshe… 201705… canton prop… Nicht form… TRUE   \n 5 2017-05-21      2766 Birsf… Arleshe… 201705… canton prop… Änderung d… TRUE   \n 6 2017-05-21      2766 Birsf… Arleshe… 201705… canton prop… Änderung d… TRUE   \n 7 2017-05-21      2767 Bottm… Arleshe… 201705… feder… prop… Energieges… TRUE   \n 8 2017-05-21      2767 Bottm… Arleshe… 201705… canton prop… Formuliert… TRUE   \n 9 2017-05-21      2767 Bottm… Arleshe… 201705… canton prop… Nicht form… TRUE   \n10 2017-05-21      2767 Bottm… Arleshe… 201705… canton prop… Änderung d… TRUE   \n# ℹ 31,724 more rows\n# ℹ 13 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;,\n#   empty &lt;dbl&gt;, invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;,\n#   link_to_canton_results &lt;chr&gt;, url_web &lt;chr&gt;"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\nDer Bechdel-Test fragt, ob in einem Film mindestens zwei Frauen zu sehen sind, die über alles andere als einen Mann miteinander reden. Um den Test zu bestehen, muss ein Film drei Grundvoraussetzungen erfüllen:\n\nEs gibt mindestens zwei Frauenrollen\nSie sprechen miteinander\nSie unterhalten sich über etwas anderes als einen Mann.\n\n\n\n\nArt by Srravya [CC0], via Wikimedia Commons\n\n\nIn dieser Minianalyse arbeiten wir mit den Daten, die in der FiveThirtyEight-Geschichte mit dem Titel “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women” benutzt wurden.\n\nLade packages tidyverse, fivethirtyeight und skimr\n\n\n# install.packages(\"skimr\")\n# install.packages(\"fivethirtyeight\")\nlibrary(skimr)\nlibrary(fivethirtyeight)\nlibrary(tidyverse)\n\n\nErkunde die bechdel-Daten: glimpse(), skim()\n\n\nglimpse(bechdel)\n\nRows: 1,794\nColumns: 15\n$ year          &lt;int&gt; 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 20…\n$ imdb          &lt;chr&gt; \"tt1711425\", \"tt1343727\", \"tt2024544\", \"tt1272878\", \"tt0…\n$ title         &lt;chr&gt; \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"…\n$ test          &lt;chr&gt; \"notalk\", \"ok-disagree\", \"notalk-disagree\", \"notalk\", \"m…\n$ clean_test    &lt;ord&gt; notalk, ok, notalk, notalk, men, men, notalk, ok, ok, no…\n$ binary        &lt;chr&gt; \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", …\n$ budget        &lt;int&gt; 13000000, 45000000, 20000000, 61000000, 40000000, 225000…\n$ domgross      &lt;dbl&gt; 25682380, 13414714, 53107035, 75612460, 95020213, 383624…\n$ intgross      &lt;dbl&gt; 42195766, 40868994, 158607035, 132493015, 95020213, 1458…\n$ code          &lt;chr&gt; \"2013FAIL\", \"2012PASS\", \"2013FAIL\", \"2013FAIL\", \"2013FAI…\n$ budget_2013   &lt;int&gt; 13000000, 45658735, 20000000, 61000000, 40000000, 225000…\n$ domgross_2013 &lt;dbl&gt; 25682380, 13611086, 53107035, 75612460, 95020213, 383624…\n$ intgross_2013 &lt;dbl&gt; 42195766, 41467257, 158607035, 132493015, 95020213, 1458…\n$ period_code   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ decade_code   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n\n\n\n\n\nbinary vor test schieben.\n\n\nbechdel |&gt;\n  relocate(binary, .before = test)\n\n# A tibble: 1,794 × 15\n    year imdb      title  binary test  clean_test budget domgross intgross code \n   &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;ord&gt;       &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;\n 1  2013 tt1711425 21 & … FAIL   nota… notalk     1.3 e7 25682380   4.22e7 2013…\n 2  2012 tt1343727 Dredd… PASS   ok-d… ok         4.50e7 13414714   4.09e7 2012…\n 3  2013 tt2024544 12 Ye… FAIL   nota… notalk     2   e7 53107035   1.59e8 2013…\n 4  2013 tt1272878 2 Guns FAIL   nota… notalk     6.1 e7 75612460   1.32e8 2013…\n 5  2013 tt0453562 42     FAIL   men   men        4   e7 95020213   9.50e7 2013…\n 6  2013 tt1335975 47 Ro… FAIL   men   men        2.25e8 38362475   1.46e8 2013…\n 7  2013 tt1606378 A Goo… FAIL   nota… notalk     9.2 e7 67349198   3.04e8 2013…\n 8  2013 tt2194499 About… PASS   ok-d… ok         1.20e7 15323921   8.73e7 2013…\n 9  2013 tt1814621 Admis… PASS   ok    ok         1.3 e7 18007317   1.80e7 2013…\n10  2013 tt1815862 After… FAIL   nota… notalk     1.3 e8 60522097   2.44e8 2013…\n# ℹ 1,784 more rows\n# ℹ 5 more variables: budget_2013 &lt;int&gt;, domgross_2013 &lt;dbl&gt;,\n#   intgross_2013 &lt;dbl&gt;, period_code &lt;int&gt;, decade_code &lt;int&gt;\n\n\n\ncode an das Ende schieben. Hint: ?dplyr_tidy_select\n\n\nbechdel |&gt;\n  relocate(code, .after = last_col())\n\n# A tibble: 1,794 × 15\n    year imdb      title        test  clean_test binary budget domgross intgross\n   &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;        &lt;chr&gt; &lt;ord&gt;      &lt;chr&gt;   &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1  2013 tt1711425 21 & Over    nota… notalk     FAIL   1.3 e7 25682380   4.22e7\n 2  2012 tt1343727 Dredd 3D     ok-d… ok         PASS   4.50e7 13414714   4.09e7\n 3  2013 tt2024544 12 Years a … nota… notalk     FAIL   2   e7 53107035   1.59e8\n 4  2013 tt1272878 2 Guns       nota… notalk     FAIL   6.1 e7 75612460   1.32e8\n 5  2013 tt0453562 42           men   men        FAIL   4   e7 95020213   9.50e7\n 6  2013 tt1335975 47 Ronin     men   men        FAIL   2.25e8 38362475   1.46e8\n 7  2013 tt1606378 A Good Day … nota… notalk     FAIL   9.2 e7 67349198   3.04e8\n 8  2013 tt2194499 About Time   ok-d… ok         PASS   1.20e7 15323921   8.73e7\n 9  2013 tt1814621 Admission    ok    ok         PASS   1.3 e7 18007317   1.80e7\n10  2013 tt1815862 After Earth  nota… notalk     FAIL   1.3 e8 60522097   2.44e8\n# ℹ 1,784 more rows\n# ℹ 6 more variables: budget_2013 &lt;int&gt;, domgross_2013 &lt;dbl&gt;,\n#   intgross_2013 &lt;dbl&gt;, period_code &lt;int&gt;, decade_code &lt;int&gt;, code &lt;chr&gt;\n\n\n\n\n\n\nÜberlegt euch so viele Möglichkeiten wie möglich, um budget, domgross, intgross, budget_2013, domgross_2013, intgross_2013 auszuwählen. Tipp: siehe select helpers.\n\n\nbechdel |&gt;\n  select(budget, domgross, intgross, budget_2013, domgross_2013, intgross_2013)\n\n# A tibble: 1,794 × 6\n      budget domgross  intgross budget_2013 domgross_2013 intgross_2013\n       &lt;int&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;int&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1  13000000 25682380  42195766    13000000      25682380      42195766\n 2  45000000 13414714  40868994    45658735      13611086      41467257\n 3  20000000 53107035 158607035    20000000      53107035     158607035\n 4  61000000 75612460 132493015    61000000      75612460     132493015\n 5  40000000 95020213  95020213    40000000      95020213      95020213\n 6 225000000 38362475 145803842   225000000      38362475     145803842\n 7  92000000 67349198 304249198    92000000      67349198     304249198\n 8  12000000 15323921  87324746    12000000      15323921      87324746\n 9  13000000 18007317  18007317    13000000      18007317      18007317\n10 130000000 60522097 244373198   130000000      60522097     244373198\n# ℹ 1,784 more rows\n\n\n\nbechdel |&gt;\n  select(budget:intgross, budget_2013:intgross_2013)\n\n# A tibble: 1,794 × 6\n      budget domgross  intgross budget_2013 domgross_2013 intgross_2013\n       &lt;int&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;int&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1  13000000 25682380  42195766    13000000      25682380      42195766\n 2  45000000 13414714  40868994    45658735      13611086      41467257\n 3  20000000 53107035 158607035    20000000      53107035     158607035\n 4  61000000 75612460 132493015    61000000      75612460     132493015\n 5  40000000 95020213  95020213    40000000      95020213      95020213\n 6 225000000 38362475 145803842   225000000      38362475     145803842\n 7  92000000 67349198 304249198    92000000      67349198     304249198\n 8  12000000 15323921  87324746    12000000      15323921      87324746\n 9  13000000 18007317  18007317    13000000      18007317      18007317\n10 130000000 60522097 244373198   130000000      60522097     244373198\n# ℹ 1,784 more rows\n\n\n\nbechdel |&gt;\n  select(where(is.numeric), -c(year, ends_with(\"_code\")))\n\n# A tibble: 1,794 × 6\n      budget domgross  intgross budget_2013 domgross_2013 intgross_2013\n       &lt;int&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;int&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1  13000000 25682380  42195766    13000000      25682380      42195766\n 2  45000000 13414714  40868994    45658735      13611086      41467257\n 3  20000000 53107035 158607035    20000000      53107035     158607035\n 4  61000000 75612460 132493015    61000000      75612460     132493015\n 5  40000000 95020213  95020213    40000000      95020213      95020213\n 6 225000000 38362475 145803842   225000000      38362475     145803842\n 7  92000000 67349198 304249198    92000000      67349198     304249198\n 8  12000000 15323921  87324746    12000000      15323921      87324746\n 9  13000000 18007317  18007317    13000000      18007317      18007317\n10 130000000 60522097 244373198   130000000      60522097     244373198\n# ℹ 1,784 more rows\n\n\n\nbechdel |&gt;\n  select(starts_with(\"budget\"), contains(\"gross\"))\n\n# A tibble: 1,794 × 6\n      budget budget_2013 domgross  intgross domgross_2013 intgross_2013\n       &lt;int&gt;       &lt;int&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1  13000000    13000000 25682380  42195766      25682380      42195766\n 2  45000000    45658735 13414714  40868994      13611086      41467257\n 3  20000000    20000000 53107035 158607035      53107035     158607035\n 4  61000000    61000000 75612460 132493015      75612460     132493015\n 5  40000000    40000000 95020213  95020213      95020213      95020213\n 6 225000000   225000000 38362475 145803842      38362475     145803842\n 7  92000000    92000000 67349198 304249198      67349198     304249198\n 8  12000000    12000000 15323921  87324746      15323921      87324746\n 9  13000000    13000000 18007317  18007317      18007317      18007317\n10 130000000   130000000 60522097 244373198      60522097     244373198\n# ℹ 1,784 more rows\n\n\n\n\n\n\ncode mit bechdel_code umbenennen.\n\n\nbechdel |&gt;\n  rename(bechdel_code = code)\n\n# A tibble: 1,794 × 15\n    year imdb      title        test  clean_test binary budget domgross intgross\n   &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;        &lt;chr&gt; &lt;ord&gt;      &lt;chr&gt;   &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1  2013 tt1711425 21 & Over    nota… notalk     FAIL   1.3 e7 25682380   4.22e7\n 2  2012 tt1343727 Dredd 3D     ok-d… ok         PASS   4.50e7 13414714   4.09e7\n 3  2013 tt2024544 12 Years a … nota… notalk     FAIL   2   e7 53107035   1.59e8\n 4  2013 tt1272878 2 Guns       nota… notalk     FAIL   6.1 e7 75612460   1.32e8\n 5  2013 tt0453562 42           men   men        FAIL   4   e7 95020213   9.50e7\n 6  2013 tt1335975 47 Ronin     men   men        FAIL   2.25e8 38362475   1.46e8\n 7  2013 tt1606378 A Good Day … nota… notalk     FAIL   9.2 e7 67349198   3.04e8\n 8  2013 tt2194499 About Time   ok-d… ok         PASS   1.20e7 15323921   8.73e7\n 9  2013 tt1814621 Admission    ok    ok         PASS   1.3 e7 18007317   1.80e7\n10  2013 tt1815862 After Earth  nota… notalk     FAIL   1.3 e8 60522097   2.44e8\n# ℹ 1,784 more rows\n# ℹ 6 more variables: bechdel_code &lt;chr&gt;, budget_2013 &lt;int&gt;,\n#   domgross_2013 &lt;dbl&gt;, intgross_2013 &lt;dbl&gt;, period_code &lt;int&gt;,\n#   decade_code &lt;int&gt;\n\n\n\n\n\n\nEine Spalte roi (return on investment = Kapitalrendite): roi=domgross_2013+intgross_2013budget_2013\\text{roi} = \\frac{\\text{domgross_2013} + \\text{intgross_2013}}{\\text{budget_2013}} und ein neues Objekt bechdel_roi erstellen.\n\n\nbechdel_roi &lt;- bechdel |&gt;\n  mutate(roi = (domgross_2013 + intgross_2013) / budget_2013)\n\n\n\n\n\nBerechnet den Mittelwert (mean()) und den Median (median()) der Kapitalrendite (roi) pro Testergebnis (binary)\n\n\nbechdel_roi |&gt;\n  group_by(binary) |&gt;\n  summarise(\n    n = n(),\n    mean_roi = mean(roi, na.rm = TRUE),\n    median_roi = median(roi, na.rm = TRUE)\n  )\n\n# A tibble: 2 × 4\n  binary     n mean_roi median_roi\n  &lt;chr&gt;  &lt;int&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 FAIL     991    11.4        3.96\n2 PASS     803     8.28       4.28\n\n\n\nErstellt ein Boxplot der roi gegen binary.\n\n\nggplot(bechdel_roi, aes(x = binary, y = roi, colour = binary)) +\n  geom_boxplot() +\n  coord_cartesian(ylim = c(0, 15)) + # Zoom in on films with reasonable ROI\n  labs(\n    x = \"Bechdel test\",\n    y = \"Return on investment\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#relocate",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#relocate",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "binary vor test schieben.\n\n\nbechdel |&gt;\n  relocate(binary, .before = test)\n\n# A tibble: 1,794 × 15\n    year imdb      title  binary test  clean_test budget domgross intgross code \n   &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;ord&gt;       &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;\n 1  2013 tt1711425 21 & … FAIL   nota… notalk     1.3 e7 25682380   4.22e7 2013…\n 2  2012 tt1343727 Dredd… PASS   ok-d… ok         4.50e7 13414714   4.09e7 2012…\n 3  2013 tt2024544 12 Ye… FAIL   nota… notalk     2   e7 53107035   1.59e8 2013…\n 4  2013 tt1272878 2 Guns FAIL   nota… notalk     6.1 e7 75612460   1.32e8 2013…\n 5  2013 tt0453562 42     FAIL   men   men        4   e7 95020213   9.50e7 2013…\n 6  2013 tt1335975 47 Ro… FAIL   men   men        2.25e8 38362475   1.46e8 2013…\n 7  2013 tt1606378 A Goo… FAIL   nota… notalk     9.2 e7 67349198   3.04e8 2013…\n 8  2013 tt2194499 About… PASS   ok-d… ok         1.20e7 15323921   8.73e7 2013…\n 9  2013 tt1814621 Admis… PASS   ok    ok         1.3 e7 18007317   1.80e7 2013…\n10  2013 tt1815862 After… FAIL   nota… notalk     1.3 e8 60522097   2.44e8 2013…\n# ℹ 1,784 more rows\n# ℹ 5 more variables: budget_2013 &lt;int&gt;, domgross_2013 &lt;dbl&gt;,\n#   intgross_2013 &lt;dbl&gt;, period_code &lt;int&gt;, decade_code &lt;int&gt;\n\n\n\ncode an das Ende schieben. Hint: ?dplyr_tidy_select\n\n\nbechdel |&gt;\n  relocate(code, .after = last_col())\n\n# A tibble: 1,794 × 15\n    year imdb      title        test  clean_test binary budget domgross intgross\n   &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;        &lt;chr&gt; &lt;ord&gt;      &lt;chr&gt;   &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1  2013 tt1711425 21 & Over    nota… notalk     FAIL   1.3 e7 25682380   4.22e7\n 2  2012 tt1343727 Dredd 3D     ok-d… ok         PASS   4.50e7 13414714   4.09e7\n 3  2013 tt2024544 12 Years a … nota… notalk     FAIL   2   e7 53107035   1.59e8\n 4  2013 tt1272878 2 Guns       nota… notalk     FAIL   6.1 e7 75612460   1.32e8\n 5  2013 tt0453562 42           men   men        FAIL   4   e7 95020213   9.50e7\n 6  2013 tt1335975 47 Ronin     men   men        FAIL   2.25e8 38362475   1.46e8\n 7  2013 tt1606378 A Good Day … nota… notalk     FAIL   9.2 e7 67349198   3.04e8\n 8  2013 tt2194499 About Time   ok-d… ok         PASS   1.20e7 15323921   8.73e7\n 9  2013 tt1814621 Admission    ok    ok         PASS   1.3 e7 18007317   1.80e7\n10  2013 tt1815862 After Earth  nota… notalk     FAIL   1.3 e8 60522097   2.44e8\n# ℹ 1,784 more rows\n# ℹ 6 more variables: budget_2013 &lt;int&gt;, domgross_2013 &lt;dbl&gt;,\n#   intgross_2013 &lt;dbl&gt;, period_code &lt;int&gt;, decade_code &lt;int&gt;, code &lt;chr&gt;"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#select",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#select",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "Überlegt euch so viele Möglichkeiten wie möglich, um budget, domgross, intgross, budget_2013, domgross_2013, intgross_2013 auszuwählen. Tipp: siehe select helpers.\n\n\nbechdel |&gt;\n  select(budget, domgross, intgross, budget_2013, domgross_2013, intgross_2013)\n\n# A tibble: 1,794 × 6\n      budget domgross  intgross budget_2013 domgross_2013 intgross_2013\n       &lt;int&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;int&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1  13000000 25682380  42195766    13000000      25682380      42195766\n 2  45000000 13414714  40868994    45658735      13611086      41467257\n 3  20000000 53107035 158607035    20000000      53107035     158607035\n 4  61000000 75612460 132493015    61000000      75612460     132493015\n 5  40000000 95020213  95020213    40000000      95020213      95020213\n 6 225000000 38362475 145803842   225000000      38362475     145803842\n 7  92000000 67349198 304249198    92000000      67349198     304249198\n 8  12000000 15323921  87324746    12000000      15323921      87324746\n 9  13000000 18007317  18007317    13000000      18007317      18007317\n10 130000000 60522097 244373198   130000000      60522097     244373198\n# ℹ 1,784 more rows\n\n\n\nbechdel |&gt;\n  select(budget:intgross, budget_2013:intgross_2013)\n\n# A tibble: 1,794 × 6\n      budget domgross  intgross budget_2013 domgross_2013 intgross_2013\n       &lt;int&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;int&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1  13000000 25682380  42195766    13000000      25682380      42195766\n 2  45000000 13414714  40868994    45658735      13611086      41467257\n 3  20000000 53107035 158607035    20000000      53107035     158607035\n 4  61000000 75612460 132493015    61000000      75612460     132493015\n 5  40000000 95020213  95020213    40000000      95020213      95020213\n 6 225000000 38362475 145803842   225000000      38362475     145803842\n 7  92000000 67349198 304249198    92000000      67349198     304249198\n 8  12000000 15323921  87324746    12000000      15323921      87324746\n 9  13000000 18007317  18007317    13000000      18007317      18007317\n10 130000000 60522097 244373198   130000000      60522097     244373198\n# ℹ 1,784 more rows\n\n\n\nbechdel |&gt;\n  select(where(is.numeric), -c(year, ends_with(\"_code\")))\n\n# A tibble: 1,794 × 6\n      budget domgross  intgross budget_2013 domgross_2013 intgross_2013\n       &lt;int&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;int&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1  13000000 25682380  42195766    13000000      25682380      42195766\n 2  45000000 13414714  40868994    45658735      13611086      41467257\n 3  20000000 53107035 158607035    20000000      53107035     158607035\n 4  61000000 75612460 132493015    61000000      75612460     132493015\n 5  40000000 95020213  95020213    40000000      95020213      95020213\n 6 225000000 38362475 145803842   225000000      38362475     145803842\n 7  92000000 67349198 304249198    92000000      67349198     304249198\n 8  12000000 15323921  87324746    12000000      15323921      87324746\n 9  13000000 18007317  18007317    13000000      18007317      18007317\n10 130000000 60522097 244373198   130000000      60522097     244373198\n# ℹ 1,784 more rows\n\n\n\nbechdel |&gt;\n  select(starts_with(\"budget\"), contains(\"gross\"))\n\n# A tibble: 1,794 × 6\n      budget budget_2013 domgross  intgross domgross_2013 intgross_2013\n       &lt;int&gt;       &lt;int&gt;    &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n 1  13000000    13000000 25682380  42195766      25682380      42195766\n 2  45000000    45658735 13414714  40868994      13611086      41467257\n 3  20000000    20000000 53107035 158607035      53107035     158607035\n 4  61000000    61000000 75612460 132493015      75612460     132493015\n 5  40000000    40000000 95020213  95020213      95020213      95020213\n 6 225000000   225000000 38362475 145803842      38362475     145803842\n 7  92000000    92000000 67349198 304249198      67349198     304249198\n 8  12000000    12000000 15323921  87324746      15323921      87324746\n 9  13000000    13000000 18007317  18007317      18007317      18007317\n10 130000000   130000000 60522097 244373198      60522097     244373198\n# ℹ 1,784 more rows"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#rename",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#rename",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "code mit bechdel_code umbenennen.\n\n\nbechdel |&gt;\n  rename(bechdel_code = code)\n\n# A tibble: 1,794 × 15\n    year imdb      title        test  clean_test binary budget domgross intgross\n   &lt;int&gt; &lt;chr&gt;     &lt;chr&gt;        &lt;chr&gt; &lt;ord&gt;      &lt;chr&gt;   &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1  2013 tt1711425 21 & Over    nota… notalk     FAIL   1.3 e7 25682380   4.22e7\n 2  2012 tt1343727 Dredd 3D     ok-d… ok         PASS   4.50e7 13414714   4.09e7\n 3  2013 tt2024544 12 Years a … nota… notalk     FAIL   2   e7 53107035   1.59e8\n 4  2013 tt1272878 2 Guns       nota… notalk     FAIL   6.1 e7 75612460   1.32e8\n 5  2013 tt0453562 42           men   men        FAIL   4   e7 95020213   9.50e7\n 6  2013 tt1335975 47 Ronin     men   men        FAIL   2.25e8 38362475   1.46e8\n 7  2013 tt1606378 A Good Day … nota… notalk     FAIL   9.2 e7 67349198   3.04e8\n 8  2013 tt2194499 About Time   ok-d… ok         PASS   1.20e7 15323921   8.73e7\n 9  2013 tt1814621 Admission    ok    ok         PASS   1.3 e7 18007317   1.80e7\n10  2013 tt1815862 After Earth  nota… notalk     FAIL   1.3 e8 60522097   2.44e8\n# ℹ 1,784 more rows\n# ℹ 6 more variables: bechdel_code &lt;chr&gt;, budget_2013 &lt;int&gt;,\n#   domgross_2013 &lt;dbl&gt;, intgross_2013 &lt;dbl&gt;, period_code &lt;int&gt;,\n#   decade_code &lt;int&gt;"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#mutate",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#mutate",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "Eine Spalte roi (return on investment = Kapitalrendite): roi=domgross_2013+intgross_2013budget_2013\\text{roi} = \\frac{\\text{domgross_2013} + \\text{intgross_2013}}{\\text{budget_2013}} und ein neues Objekt bechdel_roi erstellen.\n\n\nbechdel_roi &lt;- bechdel |&gt;\n  mutate(roi = (domgross_2013 + intgross_2013) / budget_2013)"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#summarise",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel-key.html#summarise",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "Berechnet den Mittelwert (mean()) und den Median (median()) der Kapitalrendite (roi) pro Testergebnis (binary)\n\n\nbechdel_roi |&gt;\n  group_by(binary) |&gt;\n  summarise(\n    n = n(),\n    mean_roi = mean(roi, na.rm = TRUE),\n    median_roi = median(roi, na.rm = TRUE)\n  )\n\n# A tibble: 2 × 4\n  binary     n mean_roi median_roi\n  &lt;chr&gt;  &lt;int&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 FAIL     991    11.4        3.96\n2 PASS     803     8.28       4.28\n\n\n\nErstellt ein Boxplot der roi gegen binary.\n\n\nggplot(bechdel_roi, aes(x = binary, y = roi, colour = binary)) +\n  geom_boxplot() +\n  coord_cartesian(ylim = c(0, 15)) + # Zoom in on films with reasonable ROI\n  labs(\n    x = \"Bechdel test\",\n    y = \"Return on investment\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-rows-peng-key.html",
    "href": "exercises/unit02/prak-02c-dplyr-rows-peng-key.html",
    "title": "Praktikum 02c - Zeilen transformieren mit dplyr",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-rows-peng-key.html#text-variablen-filtern",
    "href": "exercises/unit02/prak-02c-dplyr-rows-peng-key.html#text-variablen-filtern",
    "title": "Praktikum 02c - Zeilen transformieren mit dplyr",
    "section": "Text Variablen Filtern",
    "text": "Text Variablen Filtern\nVariablen der Klassen factor und character werden mit einem Text string gefiltert. Filter für mehrere Werte mit | (or) Operator. Das Symbol auf deutscher Windows-Tastatur: AltGr + 7.\n\nBehalte Pinguine der Art Chinstrap.\n\n\nfilter(penguins, species == \"Chinstrap\")\n\n# A tibble: 68 × 8\n   species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;     &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Chinstrap Dream            46.5          17.9               192        3500\n 2 Chinstrap Dream            50            19.5               196        3900\n 3 Chinstrap Dream            51.3          19.2               193        3650\n 4 Chinstrap Dream            45.4          18.7               188        3525\n 5 Chinstrap Dream            52.7          19.8               197        3725\n 6 Chinstrap Dream            45.2          17.8               198        3950\n 7 Chinstrap Dream            46.1          18.2               178        3250\n 8 Chinstrap Dream            51.3          18.2               197        3750\n 9 Chinstrap Dream            46            18.9               195        4150\n10 Chinstrap Dream            51.3          19.9               198        3700\n# ℹ 58 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\nBehalte Pinguine die entweder zur Art Chinstrap oder Gentoo gehören.\n\n\nfilter(penguins, species == \"Chinstrap\" | species == \"Gentoo\")\n\n# A tibble: 192 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Gentoo  Biscoe           46.1          13.2               211        4500\n 2 Gentoo  Biscoe           50            16.3               230        5700\n 3 Gentoo  Biscoe           48.7          14.1               210        4450\n 4 Gentoo  Biscoe           50            15.2               218        5700\n 5 Gentoo  Biscoe           47.6          14.5               215        5400\n 6 Gentoo  Biscoe           46.5          13.5               210        4550\n 7 Gentoo  Biscoe           45.4          14.6               211        4800\n 8 Gentoo  Biscoe           46.7          15.3               219        5200\n 9 Gentoo  Biscoe           43.3          13.4               209        4400\n10 Gentoo  Biscoe           46.8          15.4               215        5150\n# ℹ 182 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\nfilter(penguins, species %in% c(\"Chinstrap\", \"Gentoo\"))\n\n# A tibble: 192 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Gentoo  Biscoe           46.1          13.2               211        4500\n 2 Gentoo  Biscoe           50            16.3               230        5700\n 3 Gentoo  Biscoe           48.7          14.1               210        4450\n 4 Gentoo  Biscoe           50            15.2               218        5700\n 5 Gentoo  Biscoe           47.6          14.5               215        5400\n 6 Gentoo  Biscoe           46.5          13.5               210        4550\n 7 Gentoo  Biscoe           45.4          14.6               211        4800\n 8 Gentoo  Biscoe           46.7          15.3               219        5200\n 9 Gentoo  Biscoe           43.3          13.4               209        4400\n10 Gentoo  Biscoe           46.8          15.4               215        5150\n# ℹ 182 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\nBehalte Pinguine der Art Adelie die auf der Insel Dream leben (Tipp: zwei mögliche Operatoren).\n\n\nfilter(penguins, species == \"Adelie\" & island == \"Dream\")\n\n# A tibble: 56 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Dream            39.5          16.7               178        3250\n 2 Adelie  Dream            37.2          18.1               178        3900\n 3 Adelie  Dream            39.5          17.8               188        3300\n 4 Adelie  Dream            40.9          18.9               184        3900\n 5 Adelie  Dream            36.4          17                 195        3325\n 6 Adelie  Dream            39.2          21.1               196        4150\n 7 Adelie  Dream            38.8          20                 190        3950\n 8 Adelie  Dream            42.2          18.5               180        3550\n 9 Adelie  Dream            37.6          19.3               181        3300\n10 Adelie  Dream            39.8          19.1               184        4650\n# ℹ 46 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\nfilter(penguins, species == \"Adelie\" , island == \"Dream\")\n\n# A tibble: 56 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;           &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Dream            39.5          16.7               178        3250\n 2 Adelie  Dream            37.2          18.1               178        3900\n 3 Adelie  Dream            39.5          17.8               188        3300\n 4 Adelie  Dream            40.9          18.9               184        3900\n 5 Adelie  Dream            36.4          17                 195        3325\n 6 Adelie  Dream            39.2          21.1               196        4150\n 7 Adelie  Dream            38.8          20                 190        3950\n 8 Adelie  Dream            42.2          18.5               180        3550\n 9 Adelie  Dream            37.6          19.3               181        3300\n10 Adelie  Dream            39.8          19.1               184        4650\n# ℹ 46 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-rows-peng-key.html#numerische-variablen-filtern",
    "href": "exercises/unit02/prak-02c-dplyr-rows-peng-key.html#numerische-variablen-filtern",
    "title": "Praktikum 02c - Zeilen transformieren mit dplyr",
    "section": "Numerische Variablen Filtern",
    "text": "Numerische Variablen Filtern\n\nBehalte Pinguine mit Gewicht 2900g oder leichter.\n\n\nfilter(penguins, body_mass_g &lt;= 2900)\n\n# A tibble: 7 × 8\n  species   island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;fct&gt;     &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1 Adelie    Biscoe              34.5          18.1               187        2900\n2 Adelie    Biscoe              36.5          16.6               181        2850\n3 Adelie    Biscoe              36.4          17.1               184        2850\n4 Adelie    Dream               33.1          16.1               178        2900\n5 Adelie    Torgersen           38.6          17                 188        2900\n6 Chinstrap Dream               43.2          16.6               187        2900\n7 Chinstrap Dream               46.9          16.6               192        2700\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\nBehalte Pinguine der Art Adelie mit bill_length_mm über 40 mm.\n\n\nfilter(penguins, species == \"Adelie\" & bill_length_mm &gt; 40)\n\n# A tibble: 51 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           40.3          18                 195        3250\n 2 Adelie  Torgersen           42            20.2               190        4250\n 3 Adelie  Torgersen           41.1          17.6               182        3200\n 4 Adelie  Torgersen           42.5          20.7               197        4500\n 5 Adelie  Torgersen           46            21.5               194        4200\n 6 Adelie  Biscoe              40.6          18.6               183        3550\n 7 Adelie  Biscoe              40.5          17.9               187        3200\n 8 Adelie  Biscoe              40.5          18.9               180        3950\n 9 Adelie  Dream               40.9          18.9               184        3900\n10 Adelie  Dream               42.2          18.5               180        3550\n# ℹ 41 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-rows-peng-key.html#nas-filtern",
    "href": "exercises/unit02/prak-02c-dplyr-rows-peng-key.html#nas-filtern",
    "title": "Praktikum 02c - Zeilen transformieren mit dplyr",
    "section": "NAs Filtern",
    "text": "NAs Filtern\n\nWelche variable haben NA? Hint: skimr::skim()\nEntferne Pinguine die keine Daten für sex haben. Hint: is.na()\n\n\nfilter(penguins, !is.na(sex))\n\n# A tibble: 333 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           36.7          19.3               193        3450\n 5 Adelie  Torgersen           39.3          20.6               190        3650\n 6 Adelie  Torgersen           38.9          17.8               181        3625\n 7 Adelie  Torgersen           39.2          19.6               195        4675\n 8 Adelie  Torgersen           41.1          17.6               182        3200\n 9 Adelie  Torgersen           38.6          21.2               191        3800\n10 Adelie  Torgersen           34.6          21.1               198        4400\n# ℹ 323 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-abstimmung-key.html",
    "href": "exercises/unit02/prak-02c-dplyr-abstimmung-key.html",
    "title": "Unit 2: Hausuafgabe - dplyr",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages und Daten Laden\n\nLade packages tidyverse und skimr.\n\n\nlibrary(skimr)\nlibrary(tidyverse)\n\n\nLade und erkunde die Abstimmungsdaten des Kantons BL: glimpse() und skim()\n\n\nabstimmung &lt;- read_delim(\"data/ogd_abstimmungsarchiv_11990.csv\", delim = \";\")\n\nglimpse(abstimmung)\n\nRows: 31,734\nColumns: 21\n$ date                   &lt;date&gt; 2017-05-21, 2017-05-21, 2017-05-21, 2017-05-21…\n$ entity_id              &lt;dbl&gt; 2765, 2766, 2766, 2766, 2766, 2766, 2767, 2767,…\n$ name                   &lt;chr&gt; \"Binningen\", \"Birsfelden\", \"Birsfelden\", \"Birsf…\n$ district               &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"Arlesheim\", \"Arleshe…\n$ vote_id                &lt;chr&gt; \"20170521_K5\", \"20170521_E1\", \"20170521_K2\", \"2…\n$ domain                 &lt;chr&gt; \"canton\", \"federation\", \"canton\", \"canton\", \"ca…\n$ type                   &lt;chr&gt; \"proposal\", \"proposal\", \"proposal\", \"proposal\",…\n$ title_de_CH            &lt;chr&gt; \"Änderung der Verfassung des Kantons Basel-Land…\n$ counted                &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE,…\n$ answer                 &lt;chr&gt; \"accepted\", \"accepted\", \"rejected\", \"rejected\",…\n$ percent_yeas           &lt;dbl&gt; 87.93388, 60.14460, 29.46679, 26.06433, 35.0667…\n$ percent_nays           &lt;dbl&gt; 12.06612, 39.85540, 70.53321, 73.93567, 64.9332…\n$ percent_turnout        &lt;dbl&gt; 46.24283, 34.89440, 34.20569, 33.97612, 33.8689…\n$ eligible_voters        &lt;dbl&gt; 9941, 6534, 6534, 6534, 6534, 6534, 4192, 4192,…\n$ expats                 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ empty                  &lt;dbl&gt; 321, 22, 54, 62, 71, 127, 16, 24, 46, 57, 123, …\n$ invalid                &lt;dbl&gt; 41, 45, 43, 44, 46, 48, 0, 0, 0, 0, 1, 26, 24, …\n$ yeas                   &lt;dbl&gt; 3724, 1331, 630, 551, 735, 1710, 1056, 939, 484…\n$ nays                   &lt;dbl&gt; 511, 882, 1508, 1563, 1361, 292, 1131, 1264, 16…\n$ link_to_canton_results &lt;chr&gt; \"https://data.bl.ch/explore/dataset/10500/table…\n$ url_web                &lt;chr&gt; \"https://abstimmungen.bl.ch/vote/anderung-der-v…\n\n\n\nBehalte nur Zeilen, in denen die Whalbeteiligung (percent_turnout) unter 10 % liegt:\n\n\nabstimmung_unter_10 &lt;- filter(abstimmung, percent_turnout &lt; 10)\nabstimmung_unter_10\n\n# A tibble: 5 × 21\n  date       entity_id name    district vote_id domain type  title_de_CH counted\n  &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n1 2015-11-08      2790 Roggen… Laufen   201511… canton coun… die formul… TRUE   \n2 2015-11-08      2790 Roggen… Laufen   201511… canton prop… die formul… TRUE   \n3 2015-11-08      2790 Roggen… Laufen   201511… canton tie-… die formul… TRUE   \n4 2015-11-08      2790 Roggen… Laufen   201511… canton prop… die formul… TRUE   \n5 2015-11-08      2790 Roggen… Laufen   201511… canton prop… ELBA, Entw… TRUE   \n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;\n\n\n\nBehalte nur Zeilen, in denen die Beteiligungsquote (percent_turnout) und ja-Anteil (percent_yeas) 50 % oder mehr sind:\n\n\nabstimmung_ueber50 &lt;- filter(abstimmung, percent_turnout &gt;= 50 & percent_yeas &gt;= 50)\nabstimmung_ueber50\n\n# A tibble: 4,164 × 21\n   date       entity_id name   district vote_id domain type  title_de_CH counted\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n 1 2017-05-21      2767 Bottm… Arleshe… 201705… canton prop… Änderung d… TRUE   \n 2 2017-05-21      2788 Liesb… Laufen   201705… canton prop… Formuliert… TRUE   \n 3 2017-05-21      2788 Liesb… Laufen   201705… canton prop… Änderung d… TRUE   \n 4 2017-05-21      2833 Selti… Liestal  201705… feder… prop… Energieges… TRUE   \n 5 2017-05-21      2833 Selti… Liestal  201705… canton prop… Änderung d… TRUE   \n 6 2017-05-21      2851 Kilch… Sissach  201705… feder… prop… Energieges… TRUE   \n 7 2017-05-21      2851 Kilch… Sissach  201705… canton prop… Änderung d… TRUE   \n 8 2017-05-21      2860 Rünen… Sissach  201705… feder… prop… Energieges… TRUE   \n 9 2017-05-21      2887 Lampe… Waldenb… 201705… feder… prop… Energieges… TRUE   \n10 2017-05-21      2890 Liede… Waldenb… 201705… canton prop… Änderung d… TRUE   \n# ℹ 4,154 more rows\n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;\n\n\n\nOrdne das Ergebnis nach absteigendem ja-Anteil:\n\n\narrange(abstimmung_ueber50, desc(percent_yeas))\n\n# A tibble: 4,164 × 21\n   date       entity_id name   district vote_id domain type  title_de_CH counted\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n 1 2010-11-28      2774 Schön… Arleshe… 201011… canton prop… Landratsbe… TRUE   \n 2 2010-11-28      2850 Käner… Sissach  201011… canton prop… Landratsbe… TRUE   \n 3 2009-11-29      2890 Liede… Waldenb… 200911… canton prop… Beitritt d… TRUE   \n 4 2010-11-28      2830 Lupsi… Liestal  201011… canton prop… Landratsbe… TRUE   \n 5 2009-11-29      2867 Witti… Sissach  200911… canton prop… Beitritt d… TRUE   \n 6 2010-11-28      2767 Bottm… Arleshe… 201011… canton prop… Landratsbe… TRUE   \n 7 2010-11-28      2832 Ramli… Liestal  201011… canton prop… Landratsbe… TRUE   \n 8 2010-11-28      2890 Liede… Waldenb… 201011… canton prop… Landratsbe… TRUE   \n 9 2010-11-28      2882 Bennw… Waldenb… 201011… canton prop… Landratsbe… TRUE   \n10 2010-11-28      2775 Therw… Arleshe… 201011… canton prop… Landratsbe… TRUE   \n# ℹ 4,154 more rows\n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;\n\n\n\nWelche Gemeinden (mit Bezirk oder district) haben eine Wahlbeteiligung über 80 %?\n\n\nabstimmung_80 &lt;-  filter(abstimmung, percent_turnout &gt; 80)\ndistinct(abstimmung_80, name, district)\n\n# A tibble: 4 × 2\n  name           district\n  &lt;chr&gt;          &lt;chr&gt;   \n1 Kilchberg (BL) Sissach \n2 Oltingen       Sissach \n3 Wittinsburg    Sissach \n4 Frenkendorf    Liestal \n\n\n\nBehalte nur Zeilen, in denen expats vorhanden ist\n\n\nfilter(abstimmung, !is.na(expats))\n\n# A tibble: 1,700 × 21\n   date       entity_id name   district vote_id domain type  title_de_CH counted\n   &lt;date&gt;         &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;lgl&gt;  \n 1 2024-11-24      2761 Aesch… Arleshe… 202411… feder… prop… Bundesbesc… TRUE   \n 2 2024-11-24      2761 Aesch… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 3 2024-11-24      2761 Aesch… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 4 2024-11-24      2761 Aesch… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 5 2024-11-24      2762 Allsc… Arleshe… 202411… feder… prop… Bundesbesc… TRUE   \n 6 2024-11-24      2762 Allsc… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 7 2024-11-24      2762 Allsc… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 8 2024-11-24      2762 Allsc… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n 9 2024-11-24      2763 Arles… Arleshe… 202411… feder… prop… Bundesbesc… TRUE   \n10 2024-11-24      2763 Arles… Arleshe… 202411… feder… prop… Änderung v… TRUE   \n# ℹ 1,690 more rows\n# ℹ 12 more variables: answer &lt;chr&gt;, percent_yeas &lt;dbl&gt;, percent_nays &lt;dbl&gt;,\n#   percent_turnout &lt;dbl&gt;, eligible_voters &lt;dbl&gt;, expats &lt;dbl&gt;, empty &lt;dbl&gt;,\n#   invalid &lt;dbl&gt;, yeas &lt;dbl&gt;, nays &lt;dbl&gt;, link_to_canton_results &lt;chr&gt;,\n#   url_web &lt;chr&gt;"
  },
  {
    "objectID": "exercises/unit02/prak-02b-viz-key.html",
    "href": "exercises/unit02/prak-02b-viz-key.html",
    "title": "Prak 02b - Verteilungen und Beziehungen visualisieren",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages und Daten Laden\nDie erforderlichen R-Packages werden zu Beginn des Skripts geladen:\n\ntidyverse für dasggplot2 Package,\npalmerpenguins für die penguins Daten.\n\n\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n\n\nVerteilungen\n\nWelche Variablen im penguins-Datensatz sind kategorial? Welche Variablen sind numerisch? Hint: glimpse(), summary().\n\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\nErstelle ein barplot der species von penguins, in dem du species der y-Ästhetik zuordnest.\n\n\nggplot(penguins, aes(y = species)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nInwiefern unterscheiden sich die beiden folgenden Diagramme? Welche Ästhetik, colour oder fill, ist sinnvoller, um die Farbe der bars zu ändern?\n\n\nggplot(penguins, aes(x = species)) +\n  geom_bar(fill = \"red\")\n\n\nErstelle ein barplot der species von penguins auf der y-Achse, ordne island zur fill-Aesthetic. Was passiert wenn du das Argument position = \"fill\" im barplot benutzst?\n\n\nggplot(penguins, aes(y = species, fill = island)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\n\nWas bewirkt das Argument bins in geom_histogram()?\n\n\nggplot(penguins, aes(x = bill_length_mm)) +\n  geom_histogram(bins = 30)\n\n\n\n\n\n\n\n\n\nErstelle ein density plot der bill_length_mm-Variabel. Mit der Variable species zuordenen.\n\n\nggplot(penguins, aes(x = bill_length_mm, colour = species, fill = species)) +\n  geom_density(alpha = 0.3)\n\n\n\n\n\n\n\n\n\n\nBeziehungen\n\nErstelle ein Boxplot von flipper_length_mm vs. island. Benutze geom_jitter() um Punkte auch zu zeigen.\n\n\nggplot(penguins, aes(x = island, y = flipper_length_mm)) +\n  geom_boxplot() +\n  geom_jitter()\n\n\n\n\n\n\n\n\n\nErstelle ein Streudiagramm von bill_depth_mm vs. bill_length_mm und färbe die Punkte nach species. Was sagt die Einfärbung nach species über die Beziehung zwischen diesen beiden Variablen aus? Wie sieht es mit der Facettierung der species?\n\n\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\n  geom_point(aes(colour = species)) +\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~ species)\n\n\n\n\n\n\n\n\n\nWarum ergeben sich im Folgenden zwei getrennte Legenden? Wie würdest du die beiden Legenden kombinieren?\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_length_mm, y = bill_depth_mm,\n    colour = species, shape = species\n  )\n) +\n  geom_point() +\n  labs(\n    colour = \"Species\",\n    shape = \"Species\"\n    )\n\n\n\n\n\n\n\n\n\nWie könntest du deine Grafik als PNG und PDF im Ordner out speichern? Hint: ggsave()\n\n\n# ggsave(\"out/plt.pdf\")\n# ggsave(\"out/plt.png\")"
  },
  {
    "objectID": "exercises/unit02/prak-02a-viz-key.html",
    "href": "exercises/unit02/prak-02a-viz-key.html",
    "title": "Praktikum 02a - Visualisierung: Streudiagramm",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages und Daten Laden\nWir beginnen immer mit library(tidyverse), weil es die neun core Packages enthält, unter anderem ggplot2.\n\nWir werden mit den penguins Daten arbeiten, die im Package palmerpenguins enthalten sind.\n\n\n\nZusätzlich möchten wir die Function scale_colour_colorblind() benützen und dafür brauchen wir das Package ggthemes.\n\nlibrary(palmerpenguins)\nlibrary(ggthemes)\nlibrary(tidyverse)\n\nEs gibt mehrere Methoden Daten zu erkunden:\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n# summary(penguins)\n\n\n\nStreudiagramm\nWir wollen ein Streudiagramm von body_mass_g gegen flipper_length_mm erstellen.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  # Streudiagramm\n  geom_point(mapping = aes( \n    colour = species,\n    shape = species\n  )) +\n  # Linie\n  geom_smooth(method = \"lm\") +\n  # Titeln\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo penguins\",\n    x = \"Flipper length (mm)\",\n    y = \"Body mass (g)\",\n    colour = \"Species\",\n    shape = \"Species\"\n  ) +\n  # farbenblindenfreundliche Farbgebung\n  scale_colour_colorblind()\n\n\n\n\n\n\n\n\nmapping = aes(xxx) kann in ggplot() oder geom_xxx() sein. Sorgfältig auswählen!\n\n\nIhr seid dran!\n\nErstelle ein Streudiagramm von bill_depth_mm gegen bill_length_mm. Das heisst:\n\n\nErstelle ein Streudiagramm mit bill_depth_mm auf der y-Achse und bill_length_mm auf der x-Achse.\nBeschreibe die Beziehung zwischen diesen beiden Variablen mit geom_smooth().\nOrdne die Variable species zur colour-Aesthetic.\n\n\nggplot(data = penguins,\n       mapping = aes(\n         x = bill_length_mm,\n         y = bill_depth_mm,\n         colour = species\n       )) +\n  geom_point() +\n  geom_smooth(method= \"lm\") \n\n\n\n\n\n\n\n\n\nFüge einen Titel, Achsen-Titel und eine caption zu dem Diagramm hinzu: “Die Daten stammen aus dem Paket palmerpenguins”. Tipp: wirf einen Blick in die Dokumentation von labs().\n\n\nggplot(data = penguins,\n       mapping = aes(\n         x = bill_length_mm,\n         y = bill_depth_mm,\n         colour = species\n       )) +\n  geom_point() +\n  geom_smooth(method= \"lm\") +\n  labs(\n    x = \"Schnabellenge (mm)\",\n    y = \"Schnabeltiefe (mm)\",\n    colour = \"Art\",\n    title = \"Schnabeltiefe vs Schnabellenge von Pinguinen\",\n    caption = \"Datenquelle: palmerpenguins\"\n  )\n\n\n\n\n\n\n\n\n\nBenutze scale_colour_colorblind() um die Farben zu änderen und theme_light() um den Aspekt zu verbessern.\n\n\nggplot(data = penguins,\n       mapping = aes(\n         x = bill_length_mm,\n         y = bill_depth_mm,\n         colour = species\n       )) +\n  geom_point() +\n  geom_smooth(method= \"lm\") +\n  labs(\n    x = \"Schnabellenge (mm)\",\n    y = \"Schnabeltiefe (mm)\",\n    colour = \"Art\",\n    title = \"Schnabeltiefe vs Schnabellenge von Pinguinen\",\n    caption = \"Datenquelle: palmerpenguins\"\n  ) +\n  scale_colour_colorblind()\n\n\n\n\n\n\n\n\nBeachtet, dass ihr die Argumente data und mapping in ggplot() weglassen könntet.\n\nSpeichert das Plot im png-Format.\n\n\n# ggsave(filename = \"plt_penguins.png\")"
  },
  {
    "objectID": "exercises/unit01/prak-01d-style.html",
    "href": "exercises/unit01/prak-01d-style.html",
    "title": "Hausaufgabe 01: Rechtschreibung",
    "section": "",
    "text": "Tastaturkürzel\n\nEinen neuen Code-chunk hinzufügen: Ctrl + Alt + I oder  oben rechts\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen: Ctrl + Enter\nDen gesamten Code-chunk ausführen: Ctrl + Shift + Enter\nDer Zuweisungs-Operator &lt;-: Alt + -\nBericht rendern: Ctrl + Shift + K\n\n\n\nAufgaben\n\nRendere den Bericht.\nFülle deinen Namen im YAML-Header aus.\nKorrigiere diesen Code Schritt für Schritt bis du die richtige Visualisierung bekommst.\nRendere den Bericht.\n\n\nlibary(todyverse)\n\nggplot(\n  daTa = penguins,\n  maping = aes(\n    x = flipper_length_mm\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\n# Den korrekten Code hier eintragen\n\n\n\nLösung\n01d-prak-style-key.qmd"
  },
  {
    "objectID": "exercises/unit01/prak-01c-ggplot-scatter.html",
    "href": "exercises/unit01/prak-01c-ggplot-scatter.html",
    "title": "Praktikum 01c - ggplot",
    "section": "",
    "text": "Tastaturkürzel\nHier sind die wichtigsten Tastaturkürzel:\n\nEinen neuen Code-chunk hinzufügen: Ctrl + Alt + Ioder  oben rechts\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen: Ctrl + Enter\nDen gesamten Code-chunk ausführen: Ctrl + Shift + Enter\nDer Zuweisungs-Operator &lt;-: Alt + -\n\n\n\nR-Packages Laden\nDie erforderlichen R-Packages werden zu Beginn des Skripts geladen: tidyverse, palmerpenguins, ggthemes.\n\ninstall.packages(\"palmerpenguins\")\ninstall.packages(\"ggthemes\")\n\nlibrary(___)\nlibrary(___)\nlibrary(___)\n\n\n\n\nStreudiagramm\n\nWie viele Zeilen und Spalten gibt es in penguins? Benutze nrow(), ncol(), dim() und glimpse().\nLese die Hilfe für ?penguins, um herauszufinden, was die Variabeln beschreiben.\nErstelle ein Streudiagramm von bill_depth_mm gegen bill_length_mm. Das heisst:\n\n\nErstelle ein Streudiagramm mit bill_depth_mm auf der y-Achse und bill_length_mm auf der x-Achse.\nBeschreibe die Beziehung zwischen diesen beiden Variablen.\nOrdne die Variable species zur colour-Aesthetic.\n\n\nggplot(\n  data = penguins,\n    mapping = aes(\n    x = ___,\n    y = ___,\n    colour = ___\n )\n) +\n  geom____() +\n  geom____(mehtod = \"lm\")\n\n\nWelche Rolle hat das Argument na.rm in geom_point()? Was ist der default für dieses Argument?\nFüge einen Titel, Achsen-Titel und eine caption zu dem Diagramm hinzu: “Die Daten stammen aus dem Paket palmerpenguins”. Tipp: wirf einen Blick in die Dokumentation von labs().\n\n\nggplot(\n  data = penguins,\n    mapping = aes(\n    x = ___,\n    y = ___,\n    colour = ___\n )\n) +\n  geom____() +\n  geom____(method = \"lm\") +\n  labs(___)\n\n\nBenutze ggthemes::scale_colour_colorblind() um die Farben zu änderen und theme_light() um den Aspekt zu verbessern.\n\n\nggplot(\n  data = penguins,\n    mapping = aes(\n    x = ___,\n    y = ___,\n    colour = ___\n )\n) +\n  geom____() +\n  geom____(method = \"lm\") +\n  labs(___) +\n  ___ +\n  ___\n\n\nWas passiert, wenn man ein Streudiagramm von bill_depth_mm gegen species erstellt? Was wäre eine bessere Wahl des geoms?\nErstelle die folgende Visualisierung neu. Welcher Ästhetik sollte bill_depth_mm zugewiesen werden? Und sollte es auf der globalen Ebene oder auf der geom-Ebene abgebildet werden? \nWas passiert wenn du die Namen der Argumenten von ggplot() wegnimmst?\n\n\nggplot(\n  penguins,\n  aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point()\n\n\nSpeicher das letzte Plot mit ggsave()."
  },
  {
    "objectID": "exercises/unit01/prak-01b-bechdel.html",
    "href": "exercises/unit01/prak-01b-bechdel.html",
    "title": "Praktikum 01b - Quarto: Bechdel",
    "section": "",
    "text": "Der Bechdel-Test fragt, ob in einem Film mindestens zwei Frauen zu sehen sind, die über alles andere als einen Mann miteinander reden. Um den Test zu bestehen, muss ein Film drei Grundvoraussetzungen erfüllen:\n\nEs gibt mindestens zwei Frauenrollen\nSie sprechen miteinander\nSie unterhalten sich über etwas anderes als einen Mann.\n\n\n\n\nArt by Srravya [CC0], via Wikimedia Commons\n\n\nIn dieser Minianalyse arbeiten wir mit den Daten, die in der FiveThirtyEight-Geschichte mit dem Titel “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women” benutzt wurden.\n\nEure Aufgaben\n\nBericht erstellen:\n\nClicke auf den Render Knopf oben,\noder Ctrl + Shift + K\n\ndie ___ Lücken ausfüllen.\n\n\n\nDaten und Packages\nWir beginnen mit dem Laden der Packages, die wir verwenden werden.\n\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight)\nlibrary(tidyverse)\n\nDer Datensatz enthält Informationen zu 1794 Filme, die zwischen 1970 und 2013 veröffentlicht wurden.\nWir konzentrieren unsere Analyse jedoch auf Filme, die zwischen 1990 und 2013 veröffentlicht wurden.\n\nbechdel90_13 &lt;- bechdel |&gt;  \n  filter(between(year, 1990, 2013))\n\nEs gibt ___ solche Filme.\n\nglimpse(bechdel90_13)\n\nRows: 1,615\nColumns: 15\n$ year          &lt;int&gt; 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 20…\n$ imdb          &lt;chr&gt; \"tt1711425\", \"tt1343727\", \"tt2024544\", \"tt1272878\", \"tt0…\n$ title         &lt;chr&gt; \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"…\n$ test          &lt;chr&gt; \"notalk\", \"ok-disagree\", \"notalk-disagree\", \"notalk\", \"m…\n$ clean_test    &lt;ord&gt; notalk, ok, notalk, notalk, men, men, notalk, ok, ok, no…\n$ binary        &lt;chr&gt; \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", …\n$ budget        &lt;int&gt; 13000000, 45000000, 20000000, 61000000, 40000000, 225000…\n$ domgross      &lt;dbl&gt; 25682380, 13414714, 53107035, 75612460, 95020213, 383624…\n$ intgross      &lt;dbl&gt; 42195766, 40868994, 158607035, 132493015, 95020213, 1458…\n$ code          &lt;chr&gt; \"2013FAIL\", \"2012PASS\", \"2013FAIL\", \"2013FAIL\", \"2013FAI…\n$ budget_2013   &lt;int&gt; 13000000, 45658735, 20000000, 61000000, 40000000, 225000…\n$ domgross_2013 &lt;dbl&gt; 25682380, 13611086, 53107035, 75612460, 95020213, 383624…\n$ intgross_2013 &lt;dbl&gt; 42195766, 41467257, 158607035, 132493015, 95020213, 1458…\n$ period_code   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ decade_code   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n\n\nDie finanziellen Variablen, auf die wir uns konzentrieren werden, sind die folgenden:\n\nbudget_2013: Budget in inflationsbereinigten Dollar für 2013\ndomgross_2013: Inlandsbrutto (USA) in inflationsbereinigten Dollar für 2013\nintgross_2013: Gesamtes internationales Brutto in 2013 inflationsbereinigten Dollar\n\nUnd wir werden auch die Variable binary und clean_test für die Gruppierung verwenden.\n\n\nAnalyse\nWie varieren die median Budget und Brutto, je nachdem, ob der Film den Bechdel-Test bestanden hat? (Info in der binary Variable)\n\nbechdel90_13 |&gt; \n  group_by(binary) |&gt; \n  summarise(\n    med_budget = median(budget_2013),\n    med_domgross = median(domgross_2013, na.rm = TRUE),\n    med_intgross = median(intgross_2013, na.rm = TRUE)\n    )\n\n# A tibble: 2 × 4\n  binary med_budget med_domgross med_intgross\n  &lt;chr&gt;       &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 FAIL    48385984.    57318606.    104475669\n2 PASS    31070724     45330446.     80124349\n\n\nSchauen wir uns als Nächstes an, wie sich die median Budget and Brutto anhand eines detaillierteren Indikators des Bechdel-Testergebnisses unterscheiden (clean_test):\n\nok = besteht den Test\ndubious = zweifelhaft\nmen = Frauen reden nur über Männer\nnotalk = Frauen reden nicht miteinander\nnowomen = weniger als zwei Frauen\n\n\nbechdel90_13 |&gt; \n  # group_by(___) |&gt;\n  summarise(\n    med_budget = median(budget_2013),\n    med_domgross = median(domgross_2013, na.rm = TRUE),\n    med_intgross = median(intgross_2013, na.rm = TRUE)\n    )\n\n# A tibble: 1 × 3\n  med_budget med_domgross med_intgross\n       &lt;int&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1   37878971     52270207     93523336\n\n\nUm zu bewerten, wie sich die Kapitalrendite (return on investment) zwischen Filmen, die den Bechdel-Test bestehen und nicht bestehen, unterscheidet, erstellen wir zunächst eine neue Variable namens roi als Verhältnis von Brutto zu Budget.\n\nbechdel90_13 &lt;- bechdel90_13 |&gt; \n  mutate(roi = (intgross_2013 + domgross_2013) / budget_2013)\n\nWelche Filme haben die höchste Kapitalrendite?\n\nbechdel90_13 |&gt; \n  arrange(desc(roi))  |&gt;  \n  select(title, roi, year)\n\n# A tibble: 1,615 × 3\n   title                     roi  year\n   &lt;chr&gt;                   &lt;dbl&gt; &lt;int&gt;\n 1 Paranormal Activity      671.  2007\n 2 The Blair Witch Project  648.  1999\n 3 El Mariachi              583.  1992\n 4 Clerks.                  258.  1994\n 5 In the Company of Men    231.  1997\n 6 Napoleon Dynamite        227.  2004\n 7 Once                     190.  2006\n 8 The Devil Inside         155.  2012\n 9 Primer                   142.  2004\n10 Fireproof                134.  2008\n# ℹ 1,605 more rows\n\n\nHier ist eine Visualisierung der Kapitalrendite nach Testergebnis. Aufgrund einiger extremer Beobachtungen ist es jedoch schwierig, die Verteilungen zu erkennen.\n\nggplot(data = bechdel90_13, \n       mapping = aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel test result\",\n    y = \"___\",\n    color = \"Binary Bechdel test result\"\n    )\n\n\n\n\n\n\n\n\nWas sind das für Filme mit sehr hoher Kapitalrendite?\n\nbechdel90_13 |&gt; \n  filter(roi &gt; 400) |&gt;\n  select(title, budget_2013, domgross_2013, year)\n\n# A tibble: 3 × 4\n  title                   budget_2013 domgross_2013  year\n  &lt;chr&gt;                         &lt;int&gt;         &lt;dbl&gt; &lt;int&gt;\n1 Paranormal Activity          505595     121251476  2007\n2 The Blair Witch Project      839077     196538593  1999\n3 El Mariachi                   11622       3388636  1992\n\n\nWenn wir die Filme mit roi &lt; ___ vergrössern, erhalten wir einen besseren Überblick über den Vergleich der Mediane zwischen den Kategorien:\n\nggplot(data = bechdel90_13, mapping = aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    subtitle = \"___\", # Etwas über das Vergrössern auf eine bestimmte Ebene\n    x = \"Detailed Bechdel test result\",\n    y = \"Return on investment\",\n    color = \"Binary Bechdel test result\"\n    ) +\n  coord_cartesian(ylim = c(0, 15))\n\n\n\n\n\n\n\n\n\n\nAppendix: R Code-Chunk\nFüge einen eigenen Code-chunk hinzu:\n\nTastatur-Abkürzung: Ctrl + Shift + I\nAdd Chunk  oben rechts\noder ```{r}``` eintippen\n\nFühre den Code aus:\n\nzeilenweise mit Ctrl + Enter\nden gesamten Code mit der grünen Play-Taste\nwähle eine Option im Run-Menu oben rechts"
  },
  {
    "objectID": "exercises/unit01/prak-01a-unvotes.html",
    "href": "exercises/unit01/prak-01a-unvotes.html",
    "title": "Praktikum 01a - UN-Abstimmungen",
    "section": "",
    "text": "Wie stimmen die verschiedenen Länder in der Generalversammlung der United Nations ab? Wie hat sich ihr Abstimmungsverhalten im Laufe der Zeit entwickelt? Wie unterscheidet sich ihr Abstimmungsverhalten bei bestimmten Themen?\nWir werden versuchen, diese Fragen durch Visualisierung zu beantworten.\nWir werden die Packages tidyverse, scales und gt für die Datenaufbereitung und -visualisierung und das Package unvotes (Voeten 2013) für die Daten verwenden.\n\ninstall.packages(\"unvotes\")\ninstall.packages(\"gt\")\n\nlibrary(gt)\nlibrary(scales)\nlibrary(unvotes)\nlibrary(tidyverse)"
  },
  {
    "objectID": "exercises/unit01/prak-01a-unvotes.html#einleitung",
    "href": "exercises/unit01/prak-01a-unvotes.html#einleitung",
    "title": "Praktikum 01a - UN-Abstimmungen",
    "section": "",
    "text": "Wie stimmen die verschiedenen Länder in der Generalversammlung der United Nations ab? Wie hat sich ihr Abstimmungsverhalten im Laufe der Zeit entwickelt? Wie unterscheidet sich ihr Abstimmungsverhalten bei bestimmten Themen?\nWir werden versuchen, diese Fragen durch Visualisierung zu beantworten.\nWir werden die Packages tidyverse, scales und gt für die Datenaufbereitung und -visualisierung und das Package unvotes (Voeten 2013) für die Daten verwenden.\n\ninstall.packages(\"unvotes\")\ninstall.packages(\"gt\")\n\nlibrary(gt)\nlibrary(scales)\nlibrary(unvotes)\nlibrary(tidyverse)"
  },
  {
    "objectID": "exercises/unit01/prak-01a-unvotes.html#un-wahlverhalten",
    "href": "exercises/unit01/prak-01a-unvotes.html#un-wahlverhalten",
    "title": "Praktikum 01a - UN-Abstimmungen",
    "section": "UN-Wahlverhalten",
    "text": "UN-Wahlverhalten\nWir wollen eine Datenvisualisierung erstellen, die zeigt, wie sich das Abstimmungsverhalten von Algerien, der Schweiz und dem Vereinigten Königreich im Laufe der Zeit bei einer Reihe von Themen verändert hat.\nWir können ganz einfach ein Diagramm für jede beliebige Länderkombination erstellen, indem wir die Ländernamen in der unten stehenden filter()-Anweisung ersetzen. Die genauen Namen der Länder findest du im Anhang.\n\nun_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\") |&gt;\n  filter(country %in% c(\"Algeria\", \"Switzerland\", \"United Kingdom\")) |&gt;\n  mutate(\n    year = year(date),\n    issue = fct_relevel(issue, \"Arms control and disarmament\"),\n    issue = fct_relevel(issue, \"Palestinian conflict\", after = Inf)\n  ) |&gt;\n  group_by(country, year, issue) |&gt;\n  summarise(percent_yes = mean(vote == \"yes\")) |&gt;\n  ggplot(mapping = aes(x = year, y = percent_yes, colour = country)) +\n  geom_point(alpha = 0.4, size = 1) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  facet_wrap(~issue) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(\n    title = \"Percentage of 'Yes' votes in the UN General Assembly\",\n    subtitle = paste(un_roll_calls |&gt; summarise(min(year(date))) |&gt; pull(), \"to\", un_roll_calls |&gt; summarise(max(year(date))) |&gt; pull()),\n    colour = \"Country\",\n    x = \"Year\",\n    y = \"% Yes\"\n  ) +\n  theme_minimal() +\n  theme(\n    text = element_text(size = 8)\n  )\n\n\n\n\n\n\n\n\nNützliche Fakten:\n\nDie United Nations wurden 1945 gegründet.\nAlgerien wurde 1962 unabhängig.\nDas Vereinigte Königreich trat 1973 der EU bei.\nDie Schweiz trat 2002 der UNO bei."
  },
  {
    "objectID": "exercises/unit01/prak-01a-unvotes.html#appendix",
    "href": "exercises/unit01/prak-01a-unvotes.html#appendix",
    "title": "Praktikum 01a - UN-Abstimmungen",
    "section": "Anhang",
    "text": "Anhang\n\n\n\n\n\nListe der Länder mit Stimmrecht in der UN-Generalversammlung"
  },
  {
    "objectID": "exercises/unit01/prak-01b-bechdel-key.html",
    "href": "exercises/unit01/prak-01b-bechdel-key.html",
    "title": "Praktikum 01b - Quarto: Bechdel",
    "section": "",
    "text": "Der Bechdel-Test fragt, ob in einem Film mindestens zwei Frauen zu sehen sind, die über alles andere als einen Mann miteinander reden. Um den Test zu bestehen, muss ein Film drei Grundvoraussetzungen erfüllen:\n\nEs gibt mindestens zwei Frauenrollen\nSie sprechen miteinander\nSie unterhalten sich über etwas anderes als einen Mann.\n\n\n\n\nArt by Srravya [CC0], via Wikimedia Commons\n\n\nIn dieser Minianalyse arbeiten wir mit den Daten, die in der FiveThirtyEight-Geschichte mit dem Titel “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women” benutzt wurden.\n\nEure Aufgaben\n\nBericht erstellen:\n\nClicke auf den Render Knopf oben,\noder Ctrl + Shift + K\n\ndie ___ Lücken ausfüllen.\n\n\n\nR Code-Chunk\nFüge einen eigenen Code-chunk hinzu:\n\nTastatur-Abkürzung: Ctrl + Shift + I\nAdd Chunk  oben rechts\noder ```{r}``` eintippen\n\nFühre den Code aus:\n\nzeilenweise mit Ctrl + Enter\nden gesamten Code mit der grünen Play-Taste\nwähle eine Option im Run-Menu oben rechts\n\nInline Code könntest du mit `r` inserieren.\n\n\nDaten und Packages\nWir beginnen mit dem Laden der Packages, die wir verwenden werden.\n\ninstall.packages(\"fivethirtyeight\")\nlibrary(fivethirtyeight)\nlibrary(tidyverse)\n\nDer Datensatz enthält Informationen zu 1794 Filme, die zwischen 1970 und 2013 veröffentlicht wurden.\nWir konzentrieren unsere Analyse jedoch auf Filme, die zwischen 1990 und 2013 veröffentlicht wurden.\n\nbechdel90_13 &lt;- bechdel |&gt;  \n  filter(between(year, 1990, 2013))\n\nEs gibt 1615 solche Filme.\n\nglimpse(bechdel90_13)\n\nRows: 1,615\nColumns: 15\n$ year          &lt;int&gt; 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 20…\n$ imdb          &lt;chr&gt; \"tt1711425\", \"tt1343727\", \"tt2024544\", \"tt1272878\", \"tt0…\n$ title         &lt;chr&gt; \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"…\n$ test          &lt;chr&gt; \"notalk\", \"ok-disagree\", \"notalk-disagree\", \"notalk\", \"m…\n$ clean_test    &lt;ord&gt; notalk, ok, notalk, notalk, men, men, notalk, ok, ok, no…\n$ binary        &lt;chr&gt; \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", …\n$ budget        &lt;int&gt; 13000000, 45000000, 20000000, 61000000, 40000000, 225000…\n$ domgross      &lt;dbl&gt; 25682380, 13414714, 53107035, 75612460, 95020213, 383624…\n$ intgross      &lt;dbl&gt; 42195766, 40868994, 158607035, 132493015, 95020213, 1458…\n$ code          &lt;chr&gt; \"2013FAIL\", \"2012PASS\", \"2013FAIL\", \"2013FAIL\", \"2013FAI…\n$ budget_2013   &lt;int&gt; 13000000, 45658735, 20000000, 61000000, 40000000, 225000…\n$ domgross_2013 &lt;dbl&gt; 25682380, 13611086, 53107035, 75612460, 95020213, 383624…\n$ intgross_2013 &lt;dbl&gt; 42195766, 41467257, 158607035, 132493015, 95020213, 1458…\n$ period_code   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ decade_code   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n\n\nDie finanziellen Variablen, auf die wir uns konzentrieren werden, sind die folgenden:\n\nbudget_2013: Budget in inflationsbereinigten Dollar für 2013\ndomgross_2013: Inlandsbrutto (USA) in inflationsbereinigten Dollar für 2013\nintgross_2013: Gesamtes internationales Brutto in 2013 inflationsbereinigten Dollar\n\nUnd wir werden auch die Variable binary und clean_test für die Gruppierung verwenden.\n\n\nAnalyse\nWie varieren die median Budget und Brutto, je nachdem, ob der Film den Bechdel-Test bestanden hat? (Info in der binary Variable)\n\nbechdel90_13 |&gt; \n  group_by(binary) |&gt; \n  summarise(\n    med_budget = median(budget_2013),\n    med_domgross = median(domgross_2013, na.rm = TRUE),\n    med_intgross = median(intgross_2013, na.rm = TRUE)\n    )\n\n# A tibble: 2 × 4\n  binary med_budget med_domgross med_intgross\n  &lt;chr&gt;       &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 FAIL    48385984.    57318606.    104475669\n2 PASS    31070724     45330446.     80124349\n\n\nSchauen wir uns als Nächstes an, wie sich die median Budget and Brutto anhand eines detaillierteren Indikators des Bechdel-Testergebnisses unterscheiden (clean_test):\n\nok = besteht den Test\ndubious = zweifelhaft\nmen = Frauen reden nur über Männer\nnotalk = Frauen reden nicht miteinander\nnowomen = weniger als zwei Frauen\n\n\nbechdel90_13 |&gt; \n  group_by(clean_test) |&gt;\n  summarise(\n    med_budget = median(budget_2013),\n    med_domgross = median(domgross_2013, na.rm = TRUE),\n    med_intgross = median(intgross_2013, na.rm = TRUE)\n    )\n\n# A tibble: 5 × 4\n  clean_test med_budget med_domgross med_intgross\n  &lt;ord&gt;           &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 nowomen     43373066     44891296.    89509349 \n2 notalk      56570084.    63890455    123102194 \n3 men         39737690.    56392786     99578022.\n4 dubious     35790994     49173429     89883201 \n5 ok          31070724     45330446.    80124349 \n\n\nUm zu bewerten, wie sich die Kapitalrendite (return on investment) zwischen Filmen, die den Bechdel-Test bestehen und nicht bestehen, unterscheidet, erstellen wir zunächst eine neue Variable namens roi als Verhältnis von Brutto zu Budget.\n\nbechdel90_13 &lt;- bechdel90_13 |&gt; \n  mutate(roi = (intgross_2013 + domgross_2013) / budget_2013)\n\nWelche Filme haben die höchste Kapitalrendite?\n\nbechdel90_13 |&gt; \n  arrange(desc(roi))  |&gt;  \n  select(title, roi, year)\n\n# A tibble: 1,615 × 3\n   title                     roi  year\n   &lt;chr&gt;                   &lt;dbl&gt; &lt;int&gt;\n 1 Paranormal Activity      671.  2007\n 2 The Blair Witch Project  648.  1999\n 3 El Mariachi              583.  1992\n 4 Clerks.                  258.  1994\n 5 In the Company of Men    231.  1997\n 6 Napoleon Dynamite        227.  2004\n 7 Once                     190.  2006\n 8 The Devil Inside         155.  2012\n 9 Primer                   142.  2004\n10 Fireproof                134.  2008\n# ℹ 1,605 more rows\n\n\nHier ist eine Visualisierung der Kapitalrendite nach Testergebnis. Aufgrund einiger extremer Beobachtungen ist es jedoch schwierig, die Verteilungen zu erkennen.\n\nggplot(data = bechdel90_13, \n       mapping = aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel test result\",\n    y = \"Return on investment\",\n    color = \"Binary Bechdel test result\"\n    )\n\n\n\n\n\n\n\n\nWas sind das für Filme mit sehr hoher Kapitalrendite?\n\nbechdel90_13 |&gt; \n  filter(roi &gt; 400) |&gt;\n  select(title, budget_2013, domgross_2013, year)\n\n# A tibble: 3 × 4\n  title                   budget_2013 domgross_2013  year\n  &lt;chr&gt;                         &lt;int&gt;         &lt;dbl&gt; &lt;int&gt;\n1 Paranormal Activity          505595     121251476  2007\n2 The Blair Witch Project      839077     196538593  1999\n3 El Mariachi                   11622       3388636  1992\n\n\nWenn wir die Filme mit roi &lt; 15vergrössern, erhalten wir einen besseren Überblick über den Vergleich der Mediane zwischen den Kategorien:\n\nggplot(data = bechdel90_13, mapping = aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    subtitle = \"Zoomed in on films with return on investemnt \\u2264 15\", # Etwas über das Vergrössern auf eine bestimmte Ebene\n    x = \"Detailed Bechdel test result\",\n    y = \"Return on investment\",\n    color = \"Binary Bechdel test result\"\n    ) +\n  coord_cartesian(ylim = c(0, 15))"
  },
  {
    "objectID": "exercises/unit01/prak-01c-ggplot-scatter-key.html",
    "href": "exercises/unit01/prak-01c-ggplot-scatter-key.html",
    "title": "Praktikum 01c - ggplot",
    "section": "",
    "text": "R-Packages laden\nDie erforderlichen R-Packages werden zu Beginn des Skripts geladen.\n\ninstall.packages(\"palmerpenguins\")\ninstall.packages(\"ggthemes\")\n\nlibrary(palmerpenguins) # data\nlibrary(ggthemes) # scale_color_blind()\nlibrary(tidyverse)\n\n\n\n\nStreudiagramm\n\nWie viele Zeilen und Spalten gibt es in penguins?\n\n\nnrow(penguins)\n\n[1] 344\n\nncol(penguins)\n\n[1] 8\n\ndim(penguins)\n\n[1] 344   8\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\nLese die Hilfe für ?penguins, um herauszufinden, was die Variabeln beschreiben.\nErstelle ein Streudiagramm von bill_depth_mm gegen bill_length_mm. Das heisst, erstelle ein Streudiagramm mit bill_depth_mm auf der y-Achse und bill_length_mm auf der x-Achse. Beschredie Beziehung zwischen diesen beiden Variablen.\n\n\nggplot(\n  data = penguins,\n    mapping = aes(\n    x = bill_length_mm,\n    y = bill_depth_mm\n )\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_length_mm,\n    y = bill_depth_mm,\n    colour = species\n  )\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\n\n\nWelche Rolle hat das Argument na.rm in geom_point()? Was ist der default für dieses Argument?\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_depth_mm,\n    y = bill_length_mm,\n    colour = species\n  )\n) +\n  geom_point(na.rm = TRUE) \n\n\n\n\n\n\n\n\n\nFüge einen Titel, Achsen-Titel und eine caption zu dem Diagramm hinzu: “Die Daten stammen aus dem Paket palmerpenguins”. Tipp: wirf einen Blick in die Dokumentation von labs().\n\n\np &lt;- ggplot(\n  data = penguins,\n  mapping = aes(\n    x = bill_length_mm,\n    y = bill_depth_mm,\n    colour = species\n  )\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +  \n  labs(\n    x = \"Bill depth (mm)\",\n    y = \"Bill length (mm)\",\n    colour = \"Species\", \n    title = \"Palmer Island Penguins\",\n    caption = \"Die Daten stammen aus dem Paket palmerpenguins\"\n  )\np\n\n\n\n\n\n\n\n\n\nBenutze ggthemes::scale_color_blind() um die Farben zu änderen und theme_light() um den Aspekt zu verbessern.\n\n\np +\n  scale_color_colorblind() +\n  theme_light()\n\n\n\n\n\n\n\n\n\nWas passiert, wenn man ein Streudiagramm von bill_depth_mm gegen species erstellt? Was wäre eine bessere Wahl des geoms?\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = species,\n    y = bill_depth_mm,\n    colour = species\n  )\n) +\n  # geom_point() +\n  geom_boxplot() +\n  geom_jitter(width = 0.1, show.legend = FALSE)\n\n\n\n\n\n\n\n\n\nErstelle die folgende Visualisierung neu. Welcher Ästhetik sollte bill_depth_mm zugewiesen werden? Und sollte es auf der globalen Ebene oder auf der geom-Ebene abgebildet werden? \n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = bill_depth_mm)) +\n  geom_smooth(se = FALSE)\n\n\n\n\n\n\n\n\n\nWas passiert wenn du die Namen der Argumenten von ggplot() wegnimmst?\n\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\nSpeicher das letzte Plot mit ggsave().\n\n\nggsave(\"test.png\")"
  },
  {
    "objectID": "exercises/unit01/prak-01d-style-key.html",
    "href": "exercises/unit01/prak-01d-style-key.html",
    "title": "Hausaufgabe 01: Rechtschreibung",
    "section": "",
    "text": "libary(todyverse)\n\nggplot(\n  daTa = penguins,\n  maping = aes(\n    x = flipper_length_mm\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibary(todyverse)\n\nggplot(\n  daTa = penguins,\n  maping = aes(\n    x = flipper_length_mm\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  daTa = penguins,\n  maping = aes(\n    x = flipper_length_mm\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  daTa = penguins,\n  maping = aes(\n    x = flipper_length_mm\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"red\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm\")\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "exercises/unit01/prak-01d-style-key.html#was-ist-los",
    "href": "exercises/unit01/prak-01d-style-key.html#was-ist-los",
    "title": "Hausaufgabe 01: Rechtschreibung",
    "section": "",
    "text": "libary(todyverse)\n\nggplot(\n  daTa = penguins,\n  maping = aes(\n    x = flipper_length_mm\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibary(todyverse)\n\nggplot(\n  daTa = penguins,\n  maping = aes(\n    x = flipper_length_mm\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  daTa = penguins,\n  maping = aes(\n    x = flipper_length_mm\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  daTa = penguins,\n  maping = aes(\n    x = flipper_length_mm\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"species\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(colour = \"red\") +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm)\n\n\nlibrary(tidyverse)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm\")\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "exercises/unit01/prak-01d-style-key.html#tada",
    "href": "exercises/unit01/prak-01d-style-key.html#tada",
    "title": "Hausaufgabe 01: Rechtschreibung",
    "section": "Tada!",
    "text": "Tada!\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  geom_point(mapping = aes(colour = species)) +\n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "exercises/unit02/ha-02a-mapping-setting.html",
    "href": "exercises/unit02/ha-02a-mapping-setting.html",
    "title": "Unit 2: Mapping vs Setting in {ggplot2}",
    "section": "",
    "text": "library(palmerpenguins)\nlibrary(tidyverse)"
  },
  {
    "objectID": "exercises/unit02/ha-02a-mapping-setting.html#mapping-vs.-setting-in-ggplot2-der-unterschied",
    "href": "exercises/unit02/ha-02a-mapping-setting.html#mapping-vs.-setting-in-ggplot2-der-unterschied",
    "title": "Unit 2: Mapping vs Setting in {ggplot2}",
    "section": "Mapping vs. Setting in {ggplot2}: Der Unterschied",
    "text": "Mapping vs. Setting in {ggplot2}: Der Unterschied\nIn {ggplot2} gibt es zwei Möglichkeiten, ästhetische Eigenschaften festzulegen:\n\nMapping (Zuordnung): Eine ästhetische Eigenschaft wird mit einer Variablen aus den Daten verknüpft.\nSetting (Festlegen): Eine ästhetische Eigenschaft erhält einen festen Wert."
  },
  {
    "objectID": "exercises/unit02/ha-02a-mapping-setting.html#mapping---zuordnung-innerhalb-von-aes",
    "href": "exercises/unit02/ha-02a-mapping-setting.html#mapping---zuordnung-innerhalb-von-aes",
    "title": "Unit 2: Mapping vs Setting in {ggplot2}",
    "section": "Mapping - Zuordnung (Innerhalb von aes())",
    "text": "Mapping - Zuordnung (Innerhalb von aes())\n\nggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point(aes(colour = species)) +\n  geom_smooth(method = \"lm\", colour = \"black\") +\n  scale_colour_manual(values = c(\"Adelie\" = \"purple\", \"Gentoo\" = \"cyan\", \"Chinstrap\" = \"green\"))\n\n\n\n\n\n\n\n\n\nDie Farbe der Punkte hängt von der Pinguinart (species) ab, da colour = species innerhalb von aes() steht.\nEine Legende wird automatisch erstellt, weil die Farben an eine Variable gebunden sind."
  },
  {
    "objectID": "exercises/unit02/ha-02a-mapping-setting.html#setting---festlegung-ausserhalb-von-aes",
    "href": "exercises/unit02/ha-02a-mapping-setting.html#setting---festlegung-ausserhalb-von-aes",
    "title": "Unit 2: Mapping vs Setting in {ggplot2}",
    "section": "Setting - Festlegung (Ausserhalb von aes())",
    "text": "Setting - Festlegung (Ausserhalb von aes())\n\nggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm)) +\n  geom_point(colour = \"purple\")\n\n\n\n\n\n\n\n\n\nAlle Punkte sind lila, weil colour = \"purple\" ausserhalb von aes() gesetzt wurde.\nEs gibt keine Legende, weil die Farbe nicht von einer Variable abhängt.`"
  },
  {
    "objectID": "exercises/unit02/ha-02a-mapping-setting.html#vergleichstabelle",
    "href": "exercises/unit02/ha-02a-mapping-setting.html#vergleichstabelle",
    "title": "Unit 2: Mapping vs Setting in {ggplot2}",
    "section": "Vergleichstabelle",
    "text": "Vergleichstabelle\n\n\n\n\n\n\n\n\nEigenschaft\nMapping (aes())\nSetting (ausserhalb aes())\n\n\n\n\nAbhängig von den Daten?\n✅ Ja\n❌ Nein\n\n\nErstellt eine Legende?\n✅ Ja\n❌ Nein\n\n\nÄndert sich pro Beobachtung?\n✅ Ja\n❌ Nein\n\n\nBeispiel\naes(colour = species)\ncolour = \"red\""
  },
  {
    "objectID": "exercises/unit02/ha-02a-mapping-setting.html#mapping-und-setting-kombinieren",
    "href": "exercises/unit02/ha-02a-mapping-setting.html#mapping-und-setting-kombinieren",
    "title": "Unit 2: Mapping vs Setting in {ggplot2}",
    "section": "Mapping und Setting kombinieren",
    "text": "Mapping und Setting kombinieren\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g, color = species)) +\n  geom_point(size = 3, shape = 10) +\n  geom_smooth(method = \"lm\", color = \"black\")"
  },
  {
    "objectID": "exercises/unit02/prak-02a-viz.html",
    "href": "exercises/unit02/prak-02a-viz.html",
    "title": "Praktikum 02a - Visualisierung: Streudiagramm",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages und Daten Laden\nWir beginnen immer mit library(tidyverse), weil es die neun core Packages enthält, unter anderem ggplot2.\n\nWir werden mit den penguins Daten arbeiten, die im Package palmerpenguins enthalten sind.\n\n\n\nZusätzlich möchten wir die Function scale_colour_colorblind() benützen und dafür brauchen wir das Package ggthemes.\n\nlibrary(palmerpenguins)\nlibrary(ggthemes)\nlibrary(tidyverse)\n\nEs gibt mehrere Methoden Daten zu erkunden:\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n# summary(penguins)\n\n\n\nStreudiagramm\nWir wollen ein Streudiagramm von body_mass_g gegen flipper_length_mm erstellen.\n\n\nggplot(\n  data = penguins,\n  mapping = aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  # Streudiagramm\n  geom_point(mapping = aes( \n    colour = species,\n    shape = species\n  )) +\n  # Linie\n  geom_smooth(method = \"lm\") +\n  # Titeln\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo penguins\",\n    x = \"Flipper length (mm)\",\n    y = \"Body mass (g)\",\n    colour = \"Species\",\n    shape = \"Species\"\n  ) +\n  # farbenblindenfreundliche Farbgebung\n  scale_colour_colorblind()\n\n\n\n\n\n\n\n\nmapping = aes(xxx) kann in ggplot() oder geom_xxx() sein. Sorgfältig auswählen!\n\n\nIhr seid dran!\n\nErstelle ein Streudiagramm von bill_depth_mm gegen bill_length_mm. Das heisst:\n\n\nErstelle ein Streudiagramm mit bill_depth_mm auf der y-Achse und bill_length_mm auf der x-Achse.\nBeschreibe die Beziehung zwischen diesen beiden Variablen mit geom_smooth().\nOrdne die Variable species zur colour-Aesthetic.\n\n\n# ggplot(data = ___,\n#        mapping = aes(\n#          x = ___,\n#          y = ___,\n#          colour = ___\n#        )) +\n#   geom____() +\n#   geom____(method = \"lm\") \n\n\nFüge einen Titel, Achsen-Titel und eine caption zu dem Diagramm hinzu: “Die Daten stammen aus dem Paket palmerpenguins”. Tipp: wirf einen Blick in die Dokumentation von labs().\n\n\n# ggplot(data = ___,\n#        mapping = aes(\n#          x = ___,\n#          y = ___,\n#          colour = ___\n#        )) +\n#   geom____() +\n#   geom____(method = \"lm\") + \n#   ___(___) # ?labs\n\n\nBenutze scale_colour_colorblind() um die Farben zu änderen und theme_light() um den Aspekt zu verbessern.\n\n\n# ggplot(data = ___,\n#        mapping = aes(\n#          x = ___,\n#          y = ___,\n#          colour = ___\n#        )) +\n#   geom____() +\n#   geom____(method = \"lm\") + \n#   ___(___) + # ?labs\n#   ___ # colour-blind friendly colours\n\nBeachtet, dass ihr die Argumente data und mapping in ggplot() weglassen könntet.\n\nSpeichert das Plot im png-Format.\n\n\n# ggsave(___)"
  },
  {
    "objectID": "exercises/unit02/prak-02b-viz.html",
    "href": "exercises/unit02/prak-02b-viz.html",
    "title": "Prak 02b - Verteilungen und Beziehungen visualisieren",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages und Daten Laden\nDie erforderlichen R-Packages werden zu Beginn des Skripts geladen:\n\ntidyverse für dasggplot2 Package,\npalmerpenguins für die penguins Daten.\n\n\n# library(___)\n# library(___)\n\n\n\nVerteilungen\n\nWelche Variablen im penguins-Datensatz sind kategorial? Welche Variablen sind numerisch? Hint: glimpse(), summary().\n\n\n# glimpse(___)\n\n\nErstelle ein barplot der species von penguins, in dem du species der y-Ästhetik zuordnest.\n\n\n# ggplot(___, aes(y = ___)) +\n#   geom____()\n\n\nInwiefern unterscheiden sich die beiden folgenden Diagramme? Welche Ästhetik, colour oder fill, ist sinnvoller, um die Farbe der bars zu ändern?\n\n\n# ggplot(penguins, aes(x = species)) +\n#   geom_bar(colour = \"red\")\n\n\n# ggplot(penguins, aes(x = species)) +\n#   geom_bar(fill = \"red\")\n\n\nErstelle ein barplot der species von penguins auf der y-Achse, ordne island zur fill-Aesthetic. Was passiert wenn du das Argument position = \"fill\" im barplot benutzst?\n\n\n# ggplot(penguins, aes(___, fill = ___)) +\n#   geom_bar(___)\n\n\nWas bewirkt das Argument bins in geom_histogram()?\n\n\n# ggplot(penguins, aes(x = bill_length_mm)) +\n#   geom_histogram(bins = ___)\n\n\nErstelle ein density plot der bill_length_mm-Variabel. Mit der Variable species zuordenen.\n\n\n# ggplot(___, aes(x = ____, colour = ___, fill = ___)) +\n#   geom____()\n\n\n\nBeziehungen\n\nErstelle ein Boxplot von flipper_length_mm vs. island. Benutze geom_jitter() um Punkte auch zu zeigen.\n\n\n# ggplot(___, aes(x = ___, y = ___)) +\n#   geom____() +\n#   geom____()\n\n\nErstelle ein Streudiagramm von bill_depth_mm vs. bill_length_mm und färbe die Punkte nach species. Was sagt die Einfärbung nach species über die Beziehung zwischen diesen beiden Variablen aus? Wie sieht es mit der Facettierung der species?\n\n\n# ggplot(___, aes(x = ___, y = ___)) +\n#   geom____(aes(colour = species)) +\n#   geom_smooth(method = \"lm\") +\n#   facet_wrap(~ ___)\n\n\nWarum ergeben sich im Folgenden zwei getrennte Legenden? Wie würdest du die beiden Legenden kombinieren?\n\n\n# ggplot(\n#   data = penguins,\n#   mapping = aes(\n#     x = bill_length_mm, y = bill_depth_mm,\n#     colour = species, shape = species\n#   )\n# ) +\n#   geom_point() +\n#   labs(colour = \"Species\")\n\n\nWie könntest du deine Grafik als PNG und PDF im Ordner out speichern? Hint: ggsave()"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-abstimmung.html",
    "href": "exercises/unit02/prak-02c-dplyr-abstimmung.html",
    "title": "Unit 2: Hausuafgabe - dplyr",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages und Daten Laden\n\nLade packages tidyverse und skimr.\nLade und erkunde die Abstimmungsdaten des Kantons BL: glimpse(), head(), summary(), str() und skim()\n\n\n# abstimmung &lt;- read_delim(\"data/ogd_abstimmungsarchiv_11990.csv\", delim = \";\")\n\n\nBehalte nur Zeilen, in denen die Beteiligungsquote (percent_turnout) unter 10 % liegt:\n\n\n# abstimmung_unter_10 &lt;- filter(abstimmung, ___)\n# abstimmung_unter_10\n\n\nBehalte nur Zeilen, in denen die Beteiligungsquote (percent_turnout) und ja-Anteil (percent_yeas) 50 % oder mehr sind:\n\n\n# abstimmung_ueber50 &lt;- filter(abstimmung, ___ & ___)\n# abstimmung_ueber50\n\n\nOrdne das Ergebnis nach absteigendem ja-Anteil:\n\n\n# arrange(___, desc(___))\n\n\nWelche Gemeinden (mit Bezirk oder district) haben eine Wahlbeteiligung über 80 %?\n\n\n# abstimmung_80 &lt;- filter(abstimmung, ___)\n# ___(abstimmung_80, ___, ___)\n\n\nBehalte nur Zeilen, in denen expats vorhanden ist\n\n\n# ___(abstimmung, ___)"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-rows-peng.html",
    "href": "exercises/unit02/prak-02c-dplyr-rows-peng.html",
    "title": "Praktikum 02c - Zeilen transformieren mit dplyr",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-rows-peng.html#text-variablen-filtern",
    "href": "exercises/unit02/prak-02c-dplyr-rows-peng.html#text-variablen-filtern",
    "title": "Praktikum 02c - Zeilen transformieren mit dplyr",
    "section": "Text Variablen Filtern",
    "text": "Text Variablen Filtern\nVariablen der Klassen factor und character werden mit einem Text string gefiltert. Filter für mehrere Werte mit | (or) Operator. Das Symbol auf deutscher Windows-Tastatur: AltGr + 7.\n\nBehalte Pinguine der Art Chinstrap.\n\n\n# filter(penguins, ___)\n\n\nBehalte Pinguine die entweder zur Art Chinstrap oder Gentoo gehören.\n\n\n# filter(penguins, ___ | ___)\n\n\n# filter(penguins, ___ %in% c(\"___\", \"___\"))\n\n\nBehalte Pinguine der Art Adelie die auf der Insel Dream leben (Tipp: zwei mögliche Operatoren).\n\n\n# filter(penguins, ___)\n\n\n# filter(penguins, ___)"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-rows-peng.html#numerische-variablen-filtern",
    "href": "exercises/unit02/prak-02c-dplyr-rows-peng.html#numerische-variablen-filtern",
    "title": "Praktikum 02c - Zeilen transformieren mit dplyr",
    "section": "Numerische Variablen Filtern",
    "text": "Numerische Variablen Filtern\n\nBehalte Pinguine mit Gewicht 2900g oder leichter.\n\n\n# filter(penguins, ___)\n\n\nBehalte Pinguine der Art Adelie mit bill_length_mm über 40 mm.\n\n\n# filter(penguins, ___)"
  },
  {
    "objectID": "exercises/unit02/prak-02c-dplyr-rows-peng.html#nas-filtern",
    "href": "exercises/unit02/prak-02c-dplyr-rows-peng.html#nas-filtern",
    "title": "Praktikum 02c - Zeilen transformieren mit dplyr",
    "section": "NAs Filtern",
    "text": "NAs Filtern\n\nWelche variable haben NA? Hint: skimr::skim()\nEntferne Pinguine die keine Daten für sex haben. Hint: is.na()\n\n\n# filter(penguins, ___)"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\nDer Bechdel-Test fragt, ob in einem Film mindestens zwei Frauen zu sehen sind, die über alles andere als einen Mann miteinander reden. Um den Test zu bestehen, muss ein Film drei Grundvoraussetzungen erfüllen:\n\nEs gibt mindestens zwei Frauenrollen\nSie sprechen miteinander\nSie unterhalten sich über etwas anderes als einen Mann.\n\n\n\n\nArt by Srravya [CC0], via Wikimedia Commons\n\n\nIn dieser Minianalyse arbeiten wir mit den Daten, die in der FiveThirtyEight-Geschichte mit dem Titel “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women” benutzt wurden.\n\nLade packages tidyverse, fivethirtyeight und skimr\n\n\n# install.packages(\"skimr\")\n# library(___)\n# library(___)\n# library(___)\n\n\nErkunde die bechdel-Daten: glimpse(), skim()\n\n\n\n\nbinary vor test schieben.\n\n\n# bechdel |&gt; \n#   relocate(___) \n\n\ncode an das Ende schieben. Hint: ?dplyr_tidy_select\n\n\n# bechdel |&gt; \n#   ___(___, .after = ___)\n\n\n\n\n\nÜberlegt euch so viele Möglichkeiten wie möglich, um budget, domgross, intgross, budget_2013, domgross_2013, intgross_2013 auszuwählen. Tipp: siehe select helpers.\n\n\n# bechdel |&gt; \n#   select(___)\n\n\n\n\n\ncode mit bechdel_code umbenennen.\n\n\n# bechdel |&gt; \n#   rename(___)\n\n\n\n\n\nEine Spalte roi (return on investment = Kapitalrendite): roi=domgross_2013+intgross_2013budget_2013\\text{roi} = \\frac{\\text{domgross_2013} + \\text{intgross_2013}}{\\text{budget_2013}} und ein neues Objekt bechdel_roi erstellen.\n\n\n# bechdel_roi &lt;- bechdel |&gt; \n#   mutate(roi = ___) \n\n\n\n\n\nBerechnet den Mittelwert (mean()) und den Median (median()) der Kapitalrendite (roi) pro Testergebnis (binary)\n\n\n# bechdel_roi |&gt; \n#   group_by(___) |&gt; \n#   summarise(\n#     n = n(),\n#     mean_roi =___,\n#     median_roi = ___\n#   )\n\n\nErstelle ein Boxplot der roi gegen binary.\n\n\n# ggplot(bechdel_roi, aes(x = ___, y = ___, colour = ___)) +\n#   geom____() +\n#   coord_cartesian(ylim = c(0, 15)) + # Zoom in on films with reasonable ROI\n#   labs(\n#     x = \"Bechdel test\",\n#     y = \"Return on investment\",\n#     colour = \"\"\n#   )"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#relocate",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#relocate",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "binary vor test schieben.\n\n\n# bechdel |&gt; \n#   relocate(___) \n\n\ncode an das Ende schieben. Hint: ?dplyr_tidy_select\n\n\n# bechdel |&gt; \n#   ___(___, .after = ___)"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#select",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#select",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "Überlegt euch so viele Möglichkeiten wie möglich, um budget, domgross, intgross, budget_2013, domgross_2013, intgross_2013 auszuwählen. Tipp: siehe select helpers.\n\n\n# bechdel |&gt; \n#   select(___)"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#rename",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#rename",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "code mit bechdel_code umbenennen.\n\n\n# bechdel |&gt; \n#   rename(___)"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#mutate",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#mutate",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "Eine Spalte roi (return on investment = Kapitalrendite): roi=domgross_2013+intgross_2013budget_2013\\text{roi} = \\frac{\\text{domgross_2013} + \\text{intgross_2013}}{\\text{budget_2013}} und ein neues Objekt bechdel_roi erstellen.\n\n\n# bechdel_roi &lt;- bechdel |&gt; \n#   mutate(roi = ___)"
  },
  {
    "objectID": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#summarise",
    "href": "exercises/unit03/ha-03a-dplyr-cols-bechdel.html#summarise",
    "title": "Unit 3 - {dplyr} - Bechdel Test",
    "section": "",
    "text": "Berechnet den Mittelwert (mean()) und den Median (median()) der Kapitalrendite (roi) pro Testergebnis (binary)\n\n\n# bechdel_roi |&gt; \n#   group_by(___) |&gt; \n#   summarise(\n#     n = n(),\n#     mean_roi =___,\n#     median_roi = ___\n#   )\n\n\nErstelle ein Boxplot der roi gegen binary.\n\n\n# ggplot(bechdel_roi, aes(x = ___, y = ___, colour = ___)) +\n#   geom____() +\n#   coord_cartesian(ylim = c(0, 15)) + # Zoom in on films with reasonable ROI\n#   labs(\n#     x = \"Bechdel test\",\n#     y = \"Return on investment\",\n#     colour = \"\"\n#   )"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung.html",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung.html",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung.html#spaltennamen",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung.html#spaltennamen",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spaltennamen",
    "text": "Spaltennamen\nWas sind die Namen der Spalten?"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung.html#spalten-verschieben-relocate",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung.html#spalten-verschieben-relocate",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spalten verschieben: relocate()",
    "text": "Spalten verschieben: relocate()\nVerschiebe die Prozentspalten (percent_yeas, percent_nays, percent_turnout) nach der Bezirksspalte (district):\n\n# ___(___, ___, ___, ___, .after = ___)\n\n\n# ___(___, starts_with(\"___\"), .after = ___)"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung.html#spalten-auswählen-select",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung.html#spalten-auswählen-select",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spalten auswählen: select()",
    "text": "Spalten auswählen: select()\nÜberlegt euch so viele Möglichkeiten wie möglich, um date, entity_id, name, district, percent_yeas, percent_nays und percent_turnout auszuwählen. Tipp: siehe select helpers.\n\n# select(___, ___, ___, ___, ___, ___, ___, ___)"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung.html#spalten-umbenennen-rename",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung.html#spalten-umbenennen-rename",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spalten umbenennen: rename()",
    "text": "Spalten umbenennen: rename()\nBenenne die folgenden Spalten in das deutsche Äquivalent um:\n\ndate → datum\nentity_id → bfs_code\nname → gemeinde\ndistrict → bezirk\n\n\n# ___(___, ___)"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung.html#werte-einer-spalte-ändern-mutate",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung.html#werte-einer-spalte-ändern-mutate",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Werte einer Spalte ändern: mutate()",
    "text": "Werte einer Spalte ändern: mutate()\nStimmanteile als Prozentsatz anzeigen (durch 100 dividieren):\n\n# ___(\n#   ___,\n#   percent_yeas = ___ / 100,\n#   percent_nays = ___ / 100,\n#   percent_turnout = ___ / 100,\n#   .keep = \"used\"\n# )"
  },
  {
    "objectID": "exercises/unit03/prak-03a-spalten-abstimmung.html#spalten-erstellen-mutate",
    "href": "exercises/unit03/prak-03a-spalten-abstimmung.html#spalten-erstellen-mutate",
    "title": "Unit 3: Spalten transformieren mit dplyr",
    "section": "Spalten erstellen: mutate()",
    "text": "Spalten erstellen: mutate()\nPrüfe, ob die Summe der Ja- und Nein-Stimmen 100 beträgt.\n\n# ___(___, percent_total = ___ + ___)\n\nBerechne die Anzahl der Wähler, die sich beteiligt haben (Grundgesamtheit ist in der eligible_voters-Spalte enthalten):\n\n# ___(___, turnout = ___ * ___ / 100, .after = percent_turnout)"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude.html",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude.html",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "",
    "text": "Das kantonale Gebäude- und Wohnungsregister (kGWR) veröffentlicht monatlich im OGD-Portal sämtliche Gebäude im Kanton Basel-Landschaft (BL), die unter anderem die Wärmequelle für die Heizung sowie weitere Merkmale enthaltet.\nDer vorliegende, vorbereitete Datensatz basiert auf dieser kGWR-Tabelle und umfasst die Energiequelle der Heizung von bestehenden Gebäuden mit ausschliesslicher Wohnnutzung. Ziel dieses Praktikums ist es, Trends bei den Energiequellen für die Heizung im Verlauf der Jahre zu ermitteln.\nDas Ziel des Praktikums ist diese Darstellung zu reproduzieren:"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude.html#packages-laden",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude.html#packages-laden",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Packages Laden",
    "text": "Packages Laden\n\nLade die scales und tidyverse Packages."
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude.html#daten-laden",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude.html#daten-laden",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Daten Laden",
    "text": "Daten Laden\n\nLade die vorbereiteten Daten:\n\n\n# gebaeude &lt;- read_rds(\"data/ogd_gebaeude12160_clean.rds\")"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude.html#daten-erkunden",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude.html#daten-erkunden",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Daten erkunden",
    "text": "Daten erkunden\n\nErkunde die Daten: Anzahl Zeilen und Spalten, Variable-Namen und -Typen (glimpse()).\nWie viele verschiedene Gemeinden sind es (distinct oder count())?\n\n\n# gebaeude |&gt; ___(___)\n# gebaeude |&gt; ___(___)\n\n\nWie viele Energiequellen der Heizung (energie_waermequelle_heizung_primaer_bezeichnung und energie_waermequelle_heizung_primaer_bezeichnung_gruppiert) sind es?\n\n\n# gebaeude |&gt; count(\n#   ___,\n#   ___,\n#   sort = TRUE)"
  },
  {
    "objectID": "exercises/unit03/prak-03c-dplyr-gebaeude.html#daten-visualisieren",
    "href": "exercises/unit03/prak-03c-dplyr-gebaeude.html#daten-visualisieren",
    "title": "Prak03c: Gebäude und Energie Kanton BL",
    "section": "Daten visualisieren",
    "text": "Daten visualisieren\n\nErstelle ein Liniendiagramm (geom_line()), das die gesamte Gebäudefläche (total_flaeche) nach Energiequelle und Baujahr zeigt:\n\n\n# gebaeude_transformiert |&gt;\n#   ggplot(aes(x = ___, y = ___, colour = ___)) +\n#   ___(alpha = 0.4) +\n#   geom_point(alpha = 0.4) +\n#   geom_smooth(se = FALSE) +\n#   labs(\n#     title = \"Totale Gebäudefläche pro Energiequelle und Baujahr ab 1960\",\n#     subtitle = \"Kanton BL\",\n#     caption = \"Quelle: https://data.bl.ch/explore/dataset/12160/table\",\n#     x = \"Baujahr\",\n#     y = \"Fläche (m2)\",\n#     colour = \"Energiequelle\"\n#   ) +\n#   theme_minimal()\n\n\nErstelle ein Liniendiagramm (geom_line()), das den Anteil der Gebäudeflächen (anteil_flaeche) nach Energiequelle und Baujahr zeigt:\n\n\n# gebaeude_transformiert |&gt;\n#   ggplot(aes(x = ___, y = ___, colour = ___)) +\n#   ___(alpha = 0.4) +\n#   geom_point(alpha = 0.4) +\n#   geom_smooth(se = FALSE) +\n#   labs(\n#     title = \"Anteil Gebäudefläche pro Energiequelle und Baujahr ab 1960\",\n#     subtitle = \"Kanton BL\",\n#     caption = \"Quelle: https://data.bl.ch/explore/dataset/12160/table\",\n#     x = \"Baujahr\",\n#     y = \"Anteil der gesamten Fläche\"\n#   ) +\n#   theme_minimal() +\n#   guides(colour = \"none\") +\n#   scale_y_continuous(labels = scales::label_percent()) +\n#   facet_wrap(~ energie_quelle)"
  },
  {
    "objectID": "exercises/unit03/prak-3b-groups-penguins.html",
    "href": "exercises/unit03/prak-3b-groups-penguins.html",
    "title": "Unit 3",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\ngroup_by(), summarise(), n() und count()\nDie Funktion group_by() wird genutzt um einen existierenden Dataframe in einen gruppierten Dataframe zu konvertieren, sodass die folgenden Operationen auf der Ebene der Gruppen angewandt werden.\nMit der Funktion summarise() wird ein neuer Dataframe erstellt. Dieser enthält eine Spalte für jede angegebene zusammenfassende Operation und eine Zeile für jede Kombination der Gruppierungsvariablen.\nDie Funktion n() gibt die Anzahl der Beobachtungen in einer aktuellen Gruppe zurück. Sie kann nur innerhalb von summarise() (und mutate() und filter()) verwendet werden.\ngroup_by() + summarise() + n() ≡\\equiv count(), sodass die zwei folgenden code chunks equivalent sind:\n\ndf |&gt;\n  group_by(var1, var2) |&gt;\n  summarise(n = n())\n\n\ndf |&gt; count(var1, var2)\n\n\n\nAufgaben\n\nLade tidyverse, skimr und palmerpenguins Packages.\nVerwende group_by() und summarise() um herauszufinden, wie viele Pinguine es pro Art gibt.\n\n\n# penguins |&gt;\n#   group_by(___) |&gt;\n#   summarise(n = ___)\n\n\nWas ist das Minimum und Maximum bill_length_mm pro species?\n\n\n# penguins |&gt;\n#   group_by(___) |&gt;\n#   summarise(min_bill = ___,\n#             max_bill = ___)\n\n\nWas ist die Proportion von Pinguine pro species? Hint: sum(var) summiert alle Werte in der Variable var.\n\n\n# penguins |&gt;\n#   group_by(___) |&gt;\n#   summarise(n = ___) |&gt;\n#   mutate(prop = ___ / ___)\n\n\n# penguins |&gt;\n#   count(___) |&gt;\n#   mutate(prop = ___ / ___)\n\n\nNimm “Adelie” raus. Wie viele Pinguine gibt es pro species? Prozente?\n\n\n# penguins |&gt;\n#   filter(___) |&gt;\n#   group_by(___) |&gt;\n#   summarise(n = ___) |&gt;\n#   mutate(prop = ___ / ___)\n\n\n# penguins |&gt;\n#   filter(___) |&gt;\n#   count(___) |&gt;\n#   mutate(prop = ___ / ___)\n\n\nBenutze group_by() und summarise()um zu rechnen, wie viele Pinguine es pro species/island-Kombination gibt (auch Prozente).\n\n\n# penguins |&gt;\n# group_by(___) |&gt;\n# summarise(___) |&gt;\n# mutate(___)\n\n\nEtwas stimmt mit den Proportionen nicht! Wie können wir das gewünschte Ergebnis erhalten? Hint: Schaue dir genau die Warnung und den resultierenden Dataframe.\nBenutze count()um zu rechnen, wie viele Pinguine es pro species/island-Kombination gibt (auch Prozente).\n\n\n# penguins |&gt;\n# count(___) |&gt;\n# mutate(prop = ___ / ___)\n\nWas bewirkt das Argument `sort` bei `count()`?\n\n# penguins |&gt; count(___, sort = ___)\n\n\nErstelle Violin- und Boxplots, die die Quantiles und Median des Gewichts pro Insel und Art zeigen (body_mass_g auf der y-Achse, species auf der x-Achse, Facetierung mit island). Benutze das color scheme ggthemes::scale_color_colorblind().\n\n\n# library(ggthemes)\n# penguins |&gt;\n#   ggplot(aes(\n#     x = ___,\n#     y = ___,\n#     colour = ___\n#   )) +\n#   geom_violin(width = 1.4) +\n#   geom_boxplot() +\n#   geom_jitter(alpha = 0.3) +\n#   facet_wrap(~ ___) +\n#   labs(\n#     x = \"\",\n#     y = \"Gewicht\"\n#   ) +\n#   theme_minimal() +\n#   theme(legend.position=\"none\") +\n#   scale_colour_colorblind() # Colour-blind friendly"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export-key.html",
    "href": "exercises/unit04/prak-04a-import-export-key.html",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export-key.html#packages-laden",
    "href": "exercises/unit04/prak-04a-import-export-key.html#packages-laden",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "Packages laden",
    "text": "Packages laden\n\nLadet die Packages tidyverse, writexl und janitor\n\n\nlibrary(janitor)\nlibrary(writexl)\nlibrary(tidyverse)"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export-key.html#daten-importieren",
    "href": "exercises/unit04/prak-04a-import-export-key.html#daten-importieren",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "Daten importieren",
    "text": "Daten importieren\n\nImportiert die “data/ogd_12030_wetter.csv”-Datei mit read_csv2()\n\n\nwetter &lt;- read_csv2(\"data/ogd_12030_wetter.csv\")\n\nglimpse(wetter)\n\nRows: 45,656\nColumns: 12\n$ Datum                         &lt;date&gt; 1946-02-22, 1946-02-23, 1946-02-24, 194…\n$ Jahr                          &lt;dbl&gt; 1946, 1946, 1946, 1946, 1946, 1946, 1946…\n$ `Globalstrahlung in W/m2`     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Gesamtschneemenge             &lt;chr&gt; \"0.0\", \"0.0\", \"0.0\", \"1.0\", \"0.0\", \"0.0\"…\n$ Gesamtbewölkung               &lt;chr&gt; \"87.0\", \"93.0\", \"97.0\", \"100.0\", \"100.0\"…\n$ `Luftdruck in hPa`            &lt;dbl&gt; 9808, 9735, 9755, 9758, 9630, 9602, 9653…\n$ Niederschlag                  &lt;chr&gt; \"0.0\", \"1.9\", \"6.9\", \"2.1\", \"0.0\", \"0.3\"…\n$ Sonnenscheindauer             &lt;chr&gt; \"240.0\", \"0.0\", \"132.0\", \"0.0\", \"36.0\", …\n$ `Tagesmittel Lufttemperatur`  &lt;chr&gt; \"0.8\", \"4.0\", \"3.5\", \"0.7\", \"5.0\", \"0.9\"…\n$ `Tagesminimum Lufttemperatur` &lt;chr&gt; \"-0.7\", \"0.3\", \"0.9\", \"0.1\", \"3.1\", \"0.5…\n$ `Tagesmaximum Lufttemperatur` &lt;chr&gt; \"2.8\", \"5.8\", \"6.1\", \"3.1\", \"8.9\", \"4.0\"…\n$ `Relative Luftfeuchtigkeit`   &lt;dbl&gt; 773, 707, 620, 927, 823, 950, 537, 863, …\n\n\n\nBereinigt die Namen mit der janitor::clean_names()-Funktion\n\n\nwetter &lt;- wetter |&gt;\n  clean_names()\n\nglimpse(wetter)\n\nRows: 45,656\nColumns: 12\n$ datum                       &lt;date&gt; 1946-02-22, 1946-02-23, 1946-02-24, 1946-…\n$ jahr                        &lt;dbl&gt; 1946, 1946, 1946, 1946, 1946, 1946, 1946, …\n$ globalstrahlung_in_w_m2     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ gesamtschneemenge           &lt;chr&gt; \"0.0\", \"0.0\", \"0.0\", \"1.0\", \"0.0\", \"0.0\", …\n$ gesamtbewolkung             &lt;chr&gt; \"87.0\", \"93.0\", \"97.0\", \"100.0\", \"100.0\", …\n$ luftdruck_in_h_pa           &lt;dbl&gt; 9808, 9735, 9755, 9758, 9630, 9602, 9653, …\n$ niederschlag                &lt;chr&gt; \"0.0\", \"1.9\", \"6.9\", \"2.1\", \"0.0\", \"0.3\", …\n$ sonnenscheindauer           &lt;chr&gt; \"240.0\", \"0.0\", \"132.0\", \"0.0\", \"36.0\", \"0…\n$ tagesmittel_lufttemperatur  &lt;chr&gt; \"0.8\", \"4.0\", \"3.5\", \"0.7\", \"5.0\", \"0.9\", …\n$ tagesminimum_lufttemperatur &lt;chr&gt; \"-0.7\", \"0.3\", \"0.9\", \"0.1\", \"3.1\", \"0.5\",…\n$ tagesmaximum_lufttemperatur &lt;chr&gt; \"2.8\", \"5.8\", \"6.1\", \"3.1\", \"8.9\", \"4.0\", …\n$ relative_luftfeuchtigkeit   &lt;dbl&gt; 773, 707, 620, 927, 823, 950, 537, 863, 91…\n\n\n\nVerwendet group_by() und summarise() um die durschnittliche maximale Tagestemperatur (tagesmaximum_lufttemperatur) pro Jahr zu rechnen:\n\n\nwetter |&gt;\n  group_by(jahr) |&gt;\n  summarise(temp_max = mean(tagesmaximum_lufttemperatur, na.rm = TRUE))\n\n# A tibble: 125 × 2\n    jahr temp_max\n   &lt;dbl&gt;    &lt;dbl&gt;\n 1  1900       NA\n 2  1901       NA\n 3  1902       NA\n 4  1903       NA\n 5  1904       NA\n 6  1905       NA\n 7  1906       NA\n 8  1907       NA\n 9  1908       NA\n10  1909       NA\n# ℹ 115 more rows\n\n\n\nLest die Warnung/Fehlermeldung. Wie könntet ihr das Problem beheben?\n\n\n#  Option 1: `readr::parse_number()`\nwetter |&gt;\n  mutate(tagesmaximum_lufttemperatur = parse_number(tagesmaximum_lufttemperatur)) |&gt;\n  summarise(\n    temp_max = mean(tagesmaximum_lufttemperatur, na.rm = TRUE), .by = jahr\n  )\n\n# A tibble: 125 × 2\n    jahr temp_max\n   &lt;dbl&gt;    &lt;dbl&gt;\n 1  1946     15.3\n 2  1947     16.8\n 3  1948     16.0\n 4  1949     16.8\n 5  1950     15.8\n 6  1951     15.3\n 7  1952     15.6\n 8  1953     15.8\n 9  1954     14.6\n10  1955     15.0\n# ℹ 115 more rows\n\n\n\n# Option 2: `read_delim()`\nwetter &lt;- read_delim(\"data/ogd_12030_wetter.csv\", delim = \";\")\nglimpse(wetter)\n\nRows: 45,656\nColumns: 12\n$ Datum                         &lt;date&gt; 1946-02-22, 1946-02-23, 1946-02-24, 194…\n$ Jahr                          &lt;dbl&gt; 1946, 1946, 1946, 1946, 1946, 1946, 1946…\n$ `Globalstrahlung in W/m2`     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Gesamtschneemenge             &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Gesamtbewölkung               &lt;dbl&gt; 87, 93, 97, 100, 100, 100, 77, 100, 100,…\n$ `Luftdruck in hPa`            &lt;dbl&gt; 980.8, 973.5, 975.5, 975.8, 963.0, 960.2…\n$ Niederschlag                  &lt;dbl&gt; 0.0, 1.9, 6.9, 2.1, 0.0, 0.3, 0.0, 0.2, …\n$ Sonnenscheindauer             &lt;dbl&gt; 240, 0, 132, 0, 36, 0, 66, 0, 0, 120, 22…\n$ `Tagesmittel Lufttemperatur`  &lt;dbl&gt; 0.8, 4.0, 3.5, 0.7, 5.0, 0.9, -0.1, -1.1…\n$ `Tagesminimum Lufttemperatur` &lt;dbl&gt; -0.7, 0.3, 0.9, 0.1, 3.1, 0.5, -2.2, -2.…\n$ `Tagesmaximum Lufttemperatur` &lt;dbl&gt; 2.8, 5.8, 6.1, 3.1, 8.9, 4.0, 4.3, 0.0, …\n$ `Relative Luftfeuchtigkeit`   &lt;dbl&gt; 77.3, 70.7, 62.0, 92.7, 82.3, 95.0, 53.7…\n\n# Namen saubermachen\nwetter &lt;- wetter |&gt;\n  clean_names()\n\nwetter_summary &lt;- wetter |&gt;\n  summarise(\n    temp_max = mean(tagesmaximum_lufttemperatur, na.rm = TRUE), .by = jahr\n  )"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export-key.html#daten-exportieren",
    "href": "exercises/unit04/prak-04a-import-export-key.html#daten-exportieren",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "Daten exportieren",
    "text": "Daten exportieren\n\nSpeichert das Ergebnis in einer csv-Datei und einer xlsx-Datei.\n\n\nwrite_csv(x = wetter_summary, \"data/wetter_summary.csv\")\nwrite_xlsx(x = wetter_summary, \"data/wetter_summary.xlsx\")"
  },
  {
    "objectID": "exercises/unit04/prak-04a-import-export-key.html#datenkodierung",
    "href": "exercises/unit04/prak-04a-import-export-key.html#datenkodierung",
    "title": "Praktikum 4a: Daten importieren und exportieren",
    "section": "Datenkodierung",
    "text": "Datenkodierung\n\nLadet “data/urbanisierung-grad_1521.csv” mit read_delim\n\n\nurb_grad &lt;- read_delim(\"data/urbanisierung-grad_1521.csv\", delim = \";\")\nglimpse(urb_grad)\n\nRows: 86\nColumns: 8\n$ bfs_gde_nummer                      &lt;dbl&gt; 2761, 2762, 2763, 2764, 2765, 2766…\n$ gemeindename                        &lt;chr&gt; \"Aesch (BL)\", \"Allschwil\", \"Arlesh…\n$ raum_mit_stadtischem_charakter_2012 &lt;dbl&gt; 2, 2, 2, 4, 2, 2, 2, 4, 2, 2, 2, 2…\n$ urb_2015_num                        &lt;dbl&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1…\n$ urb_2015                            &lt;chr&gt; \"St\\xe4dtischer Kernraum\", \"St\\xe4…\n$ stadtische_landliche_gebiete        &lt;dbl&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1…\n$ urb_2021                            &lt;chr&gt; \"St\\xe4dtisch\", \"St\\xe4dtisch\", \"S…\n$ urb_same                            &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…\n\n\n\nEtwas stimmt mit den Characters nicht, warum? Benutzt die readr::guess_encoding()-Funktion\n\n\nguess_encoding(\"data/urbanisierung-grad_1521.csv\")\n\n# A tibble: 1 × 2\n  encoding   confidence\n  &lt;chr&gt;           &lt;dbl&gt;\n1 ISO-8859-1       0.55\n\n\n\nWie könntet ihr das Problem beheben? Hint: ?readr::locale.\n\n\nurb_grad &lt;- read_delim(\"data/urbanisierung-grad_1521.csv\", delim = \";\", locale = locale(encoding = \"ISO-8859-1\"))\nglimpse(urb_grad)\n\nRows: 86\nColumns: 8\n$ bfs_gde_nummer                      &lt;dbl&gt; 2761, 2762, 2763, 2764, 2765, 2766…\n$ gemeindename                        &lt;chr&gt; \"Aesch (BL)\", \"Allschwil\", \"Arlesh…\n$ raum_mit_stadtischem_charakter_2012 &lt;dbl&gt; 2, 2, 2, 4, 2, 2, 2, 4, 2, 2, 2, 2…\n$ urb_2015_num                        &lt;dbl&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1…\n$ urb_2015                            &lt;chr&gt; \"Städtischer Kernraum\", \"Städtisch…\n$ stadtische_landliche_gebiete        &lt;dbl&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1…\n$ urb_2021                            &lt;chr&gt; \"Städtisch\", \"Städtisch\", \"Städtis…\n$ urb_same                            &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE…"
  },
  {
    "objectID": "exercises/unit04/prak-04b-join-firmen-key.html",
    "href": "exercises/unit04/prak-04b-join-firmen-key.html",
    "title": "Praktikum 4b - Daten zusammenfügen",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\n\nLädt die janitor und tidyverse packages.\n\n\nlibrary(janitor)\nlibrary(tidyverse)\n\n\n\n\n\nLädt die Firmendaten, die zuvor aus dem OGD-Portal heruntergeladen und für diese Übung bereinigt wurden. Dieser Datensatz enthält tägliche Meldungen aus dem Schweizerischen Handelsamtsblatt (SHAB).\n\n\nfirmen &lt;- read_csv(\"data/ogd_12460_firmen_clean.csv\")\n\n\n\n\n\nglimpse(firmen)\n\nRows: 23,770\nColumns: 14\n$ jahr                &lt;dbl&gt; 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 20…\n$ kategorie           &lt;chr&gt; \"Widerruf der Auflösung\", \"Neueintragung\", \"Löschu…\n$ kategorie_gruppiert &lt;chr&gt; \"Anders\", \"Neueintragung\", \"Löschung\", \"Löschung\",…\n$ firmensitz_code     &lt;dbl&gt; 2831, 2831, 2770, 2770, 2775, 2763, 2828, 2831, 27…\n$ firmensitz          &lt;chr&gt; \"Pratteln\", \"Pratteln\", \"Muttenz\", \"Muttenz\", \"The…\n$ uid                 &lt;chr&gt; \"CHE114900844\", \"CHE175812531\", \"CHE131395143\", \"C…\n$ firmenname          &lt;chr&gt; \"Flipp GmbH in Liquidation\", \"Alaia Beauty GmbH\", …\n$ rechtsform_code     &lt;chr&gt; \"0107\", \"0107\", \"0101\", \"0101\", \"0101\", \"0107\", \"0…\n$ rechtsform          &lt;chr&gt; \"Gesellschaft mit beschränkter Haftung (GmbH)\", \"G…\n$ noga_code           &lt;chr&gt; \"181201\", \"960202\", \"432100\", \"692000\", \"329900\", …\n$ noga                &lt;chr&gt; \"Offsetdruck\", \"Kosmetiksalons\", \"Elektroinstallat…\n$ noga_abschnitt_code &lt;chr&gt; \"C\", \"S\", \"F\", \"M\", \"C\", \"G\", \"S\", \"L\", \"S\", \"U\", …\n$ noga_abschnitt      &lt;chr&gt; \"VERARBEITENDES GEWERBE/HERSTELLUNG VON WAREN\", \"E…\n$ noga_abteilung      &lt;chr&gt; \"Herstellung von Druckerzeugnissen; Vervielfältigu…\n\nsummary(firmen)\n\n      jahr       kategorie         kategorie_gruppiert firmensitz_code\n Min.   :2016   Length:23770       Length:23770        Min.   :2761   \n 1st Qu.:2018   Class :character   Class :character    1st Qu.:2767   \n Median :2020   Mode  :character   Mode  :character    Median :2773   \n Mean   :2020                                          Mean   :2799   \n 3rd Qu.:2023                                          3rd Qu.:2829   \n Max.   :2025                                          Max.   :2895   \n  firmensitz            uid             firmenname        rechtsform_code   \n Length:23770       Length:23770       Length:23770       Length:23770      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  rechtsform         noga_code             noga           noga_abschnitt_code\n Length:23770       Length:23770       Length:23770       Length:23770       \n Class :character   Class :character   Class :character   Class :character   \n Mode  :character   Mode  :character   Mode  :character   Mode  :character   \n                                                                             \n                                                                             \n                                                                             \n noga_abschnitt     noga_abteilung    \n Length:23770       Length:23770      \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n\n\n\nWie viele verschiedene Kategorien gibt es?\n\n\nfirmen |&gt; count(kategorie_gruppiert, sort = TRUE)\n\n# A tibble: 4 × 2\n  kategorie_gruppiert     n\n  &lt;chr&gt;               &lt;int&gt;\n1 Neueintragung       10843\n2 Löschung             7491\n3 Auflösung            3566\n4 Anders               1870\n\n\n\nWelche Jahre sind abgedeckt?\n\n\nfirmen |&gt;\n  distinct(jahr) |&gt;\n  arrange(jahr)\n\n# A tibble: 10 × 1\n    jahr\n   &lt;dbl&gt;\n 1  2016\n 2  2017\n 3  2018\n 4  2019\n 5  2020\n 6  2021\n 7  2022\n 8  2023\n 9  2024\n10  2025\n\n\n\n\n\nWir möchten die Trends der Firmen pro Jahr und Bezirk in BL analysieren. Dafür sollten wir zuerst die Bezirksdaten einfügen.\n\nLest die Raumgliedrungsdaten:\n\n\nraumgliederung &lt;- read_delim(\"data/ogd-10110-raumgliederung.csv\", delim = \";\")\nglimpse(raumgliederung)\n\nRows: 86\nColumns: 34\n$ BFS_Nummer                                &lt;dbl&gt; 2761, 2762, 2763, 2764, 2765…\n$ Gemeinde                                  &lt;chr&gt; \"Aesch (BL)\", \"Allschwil\", \"…\n$ Bezirk_Nummer                             &lt;dbl&gt; 1301, 1301, 1301, 1301, 1301…\n$ Bezirk                                    &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"A…\n$ Grossregion_Code                          &lt;dbl&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ Grossregion                               &lt;chr&gt; \"Nordwestschweiz\", \"Nordwest…\n$ Agglomeration_2020_Code                   &lt;dbl&gt; 2701, 2701, 2701, 2701, 2701…\n$ Agglomeration_2020                        &lt;chr&gt; \"Basel (CH)\", \"Basel (CH)\", …\n$ Agglomerationsgrössenklasse_2020_Code     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Agglomerationsgrössenklasse_2020          &lt;chr&gt; \"&gt;= 500'000 Einwohner/innen\"…\n$ Städtischer_Charakter_2020_Code           &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 4, 2, 2…\n$ Städtischer_Charakter_2020                &lt;chr&gt; \"Agglomerationskerngemeinde …\n$ Statistische_Stadt_2020_Code              &lt;dbl&gt; 1, 1, 1, 0, 1, 1, 0, 0, 1, 1…\n$ Statistische_Stadt_2020                   &lt;chr&gt; \"Ja\", \"Ja\", \"Ja\", \"Nein\", \"J…\n$ Städtisch_Ländlich_2020_Code              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 2, 1, 1…\n$ Städtisch_Ländlich_2020                   &lt;chr&gt; \"Städtisch\", \"Städtisch\", \"S…\n$ Gemeindetypologie_2020_9_Code             &lt;dbl&gt; 11, 11, 11, 11, 11, 11, 11, …\n$ Gemeindetypologie_2020_9                  &lt;chr&gt; \"Städtische Gemeinde einer g…\n$ Gemeindetypologie_2020_25_Code            &lt;dbl&gt; 112, 112, 112, 113, 113, 113…\n$ Gemeindetypologie_2020_25                 &lt;chr&gt; \"Städtische Arbeitsplatzgeme…\n$ Arbeitsmarktgrossregion_2018_Code         &lt;chr&gt; \"08\", \"08\", \"08\", \"08\", \"08\"…\n$ Arbeitsmarktgrossregion_2018              &lt;chr&gt; \"Region Basel\", \"Region Base…\n$ Arbeitsmarktregion_2018_Code              &lt;chr&gt; \"08012\", \"08012\", \"08012\", \"…\n$ Arbeitsmarktregion_2018                   &lt;chr&gt; \"Reinach (BL) - Allschwil\", …\n$ Berggebiet_2019_Code                      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Berggebiet_2019                           &lt;chr&gt; \"Nein\", \"Nein\", \"Nein\", \"Nei…\n$ Urbanisierungsgrad_2011_Code              &lt;dbl&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 1…\n$ Urbanisierungsgrad_2011                   &lt;chr&gt; \"Dichtbesiedeltes Gebiet\", \"…\n$ Erweiterte_Stadt_2011_Code                &lt;dbl&gt; 2701950, 2701950, 2701950, 0…\n$ Erweiterte_Stadt_2011                     &lt;chr&gt; \"Basel: erweiterte Stadt\", \"…\n$ Funktionales_städtisches_Gebiet_2014_Code &lt;dbl&gt; 2701960, 2701960, 2701960, 2…\n$ Funktionales_städtisches_Gebiet_2014      &lt;chr&gt; \"Basel: funktionales städtis…\n$ Geometrie                                 &lt;chr&gt; \"{\\\"coordinates\\\": [[[[7.567…\n$ Geometrisches_Zentrum                     &lt;chr&gt; \"47.473950622, 7.585373859\",…\n\n\n\nBereinigt die Namen und behaltet nur die vier ersten Spalten (bfs_nummer, gemeinde, bezirk_nummer, bezirk):\n\n\nraumgliederung &lt;- raumgliederung |&gt;\n  clean_names() |&gt;\n  select(1:4)\nglimpse(raumgliederung)\n\nRows: 86\nColumns: 4\n$ bfs_nummer    &lt;dbl&gt; 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 27…\n$ gemeinde      &lt;chr&gt; \"Aesch (BL)\", \"Allschwil\", \"Arlesheim\", \"Biel-Benken\", \"…\n$ bezirk_nummer &lt;dbl&gt; 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 13…\n$ bezirk        &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"Arlesheim\", \"Arlesheim\", \"Arl…\n\n\n\nVerknüpft die Bezirksdaten mit dem Unternehmensdatensatz und verwendet dabei die folgenden Spalten als Schlüssel: firmensitz_code == bfs_nummer, firmensitz == gemeinde:\n\n\nfirmen_joined &lt;- firmen |&gt;\n  left_join(y = raumgliederung, join_by(firmensitz_code == bfs_nummer, firmensitz == gemeinde)) |&gt;\n  relocate(starts_with(\"bezirk\"), .after = firmensitz)\n\nglimpse(firmen_joined)\n\nRows: 23,770\nColumns: 16\n$ jahr                &lt;dbl&gt; 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 20…\n$ kategorie           &lt;chr&gt; \"Widerruf der Auflösung\", \"Neueintragung\", \"Löschu…\n$ kategorie_gruppiert &lt;chr&gt; \"Anders\", \"Neueintragung\", \"Löschung\", \"Löschung\",…\n$ firmensitz_code     &lt;dbl&gt; 2831, 2831, 2770, 2770, 2775, 2763, 2828, 2831, 27…\n$ firmensitz          &lt;chr&gt; \"Pratteln\", \"Pratteln\", \"Muttenz\", \"Muttenz\", \"The…\n$ bezirk_nummer       &lt;dbl&gt; 1303, 1303, 1301, 1301, 1301, 1301, 1303, 1303, 13…\n$ bezirk              &lt;chr&gt; \"Liestal\", \"Liestal\", \"Arlesheim\", \"Arlesheim\", \"A…\n$ uid                 &lt;chr&gt; \"CHE114900844\", \"CHE175812531\", \"CHE131395143\", \"C…\n$ firmenname          &lt;chr&gt; \"Flipp GmbH in Liquidation\", \"Alaia Beauty GmbH\", …\n$ rechtsform_code     &lt;chr&gt; \"0107\", \"0107\", \"0101\", \"0101\", \"0101\", \"0107\", \"0…\n$ rechtsform          &lt;chr&gt; \"Gesellschaft mit beschränkter Haftung (GmbH)\", \"G…\n$ noga_code           &lt;chr&gt; \"181201\", \"960202\", \"432100\", \"692000\", \"329900\", …\n$ noga                &lt;chr&gt; \"Offsetdruck\", \"Kosmetiksalons\", \"Elektroinstallat…\n$ noga_abschnitt_code &lt;chr&gt; \"C\", \"S\", \"F\", \"M\", \"C\", \"G\", \"S\", \"L\", \"S\", \"U\", …\n$ noga_abschnitt      &lt;chr&gt; \"VERARBEITENDES GEWERBE/HERSTELLUNG VON WAREN\", \"E…\n$ noga_abteilung      &lt;chr&gt; \"Herstellung von Druckerzeugnissen; Vervielfältigu…\n\n\n\n\n\n\n\n\nBehaltet nur Jahre bis und mit 2024\nErstellt ein Balkendiagram der Anzahl von Firmen pro Kategorie, Jahr und Bezirk\n\n\n# Pro Bezirk, bar plot\n\nfirmen_joined |&gt;\n  filter(jahr != 2025) |&gt;\n  ggplot(aes(x = jahr, fill = kategorie_gruppiert)) +\n  geom_bar() +\n  facet_wrap(~bezirk) +\n  theme_minimal() +\n  labs(\n    x = \"\",\n    y = \"Anzahl Firmen\",\n    title = \"Anzahl Firmen in BL pro Bezirk und Kategorie\",\n    caption = \"https://data.bl.ch/explore/dataset/12460\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nBehaltet nur Jahre bis und mit 2024\nVerwendet summarise() um die Anzahl von Firmen pro Jahr, Bezirk und gruppierte Kategorien zu berechnen\nErstellt ein Liniendiagram der Anzahl von Firmen pro Kategorie, Jahr und Bezirk\n\n\n# Pro Bezirk, line plot\n\nfirmen_joined |&gt;\n  filter(jahr != 2025) |&gt;\n  summarise(n = n(), .by = c(jahr, kategorie_gruppiert, bezirk)) |&gt;\n  ggplot(aes(x = jahr, y = n, colour = kategorie_gruppiert)) +\n  geom_point() +\n  geom_line() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~bezirk) +\n  theme_minimal() +\n  labs(\n    x = \"\",\n    y = \"Anzahl Firmen\",\n    title = \"Anzahl Firmen in BL pro Bezirk und Kategorie\",\n    caption = \"https://data.bl.ch/explore/dataset/12460\"\n  )"
  },
  {
    "objectID": "exercises/unit04/prak-04b-join-firmen-key.html#packages-laden",
    "href": "exercises/unit04/prak-04b-join-firmen-key.html#packages-laden",
    "title": "Praktikum 4b - Daten zusammenfügen",
    "section": "",
    "text": "Lädt die janitor und tidyverse packages.\n\n\nlibrary(janitor)\nlibrary(tidyverse)"
  },
  {
    "objectID": "exercises/unit04/prak-04b-join-firmen-key.html#daten-laden",
    "href": "exercises/unit04/prak-04b-join-firmen-key.html#daten-laden",
    "title": "Praktikum 4b - Daten zusammenfügen",
    "section": "",
    "text": "Lädt die Firmendaten, die zuvor aus dem OGD-Portal heruntergeladen und für diese Übung bereinigt wurden. Dieser Datensatz enthält tägliche Meldungen aus dem Schweizerischen Handelsamtsblatt (SHAB).\n\n\nfirmen &lt;- read_csv(\"data/ogd_12460_firmen_clean.csv\")"
  },
  {
    "objectID": "exercises/unit04/prak-04b-join-firmen-key.html#daten-erkunden",
    "href": "exercises/unit04/prak-04b-join-firmen-key.html#daten-erkunden",
    "title": "Praktikum 4b - Daten zusammenfügen",
    "section": "",
    "text": "glimpse(firmen)\n\nRows: 23,770\nColumns: 14\n$ jahr                &lt;dbl&gt; 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 20…\n$ kategorie           &lt;chr&gt; \"Widerruf der Auflösung\", \"Neueintragung\", \"Löschu…\n$ kategorie_gruppiert &lt;chr&gt; \"Anders\", \"Neueintragung\", \"Löschung\", \"Löschung\",…\n$ firmensitz_code     &lt;dbl&gt; 2831, 2831, 2770, 2770, 2775, 2763, 2828, 2831, 27…\n$ firmensitz          &lt;chr&gt; \"Pratteln\", \"Pratteln\", \"Muttenz\", \"Muttenz\", \"The…\n$ uid                 &lt;chr&gt; \"CHE114900844\", \"CHE175812531\", \"CHE131395143\", \"C…\n$ firmenname          &lt;chr&gt; \"Flipp GmbH in Liquidation\", \"Alaia Beauty GmbH\", …\n$ rechtsform_code     &lt;chr&gt; \"0107\", \"0107\", \"0101\", \"0101\", \"0101\", \"0107\", \"0…\n$ rechtsform          &lt;chr&gt; \"Gesellschaft mit beschränkter Haftung (GmbH)\", \"G…\n$ noga_code           &lt;chr&gt; \"181201\", \"960202\", \"432100\", \"692000\", \"329900\", …\n$ noga                &lt;chr&gt; \"Offsetdruck\", \"Kosmetiksalons\", \"Elektroinstallat…\n$ noga_abschnitt_code &lt;chr&gt; \"C\", \"S\", \"F\", \"M\", \"C\", \"G\", \"S\", \"L\", \"S\", \"U\", …\n$ noga_abschnitt      &lt;chr&gt; \"VERARBEITENDES GEWERBE/HERSTELLUNG VON WAREN\", \"E…\n$ noga_abteilung      &lt;chr&gt; \"Herstellung von Druckerzeugnissen; Vervielfältigu…\n\nsummary(firmen)\n\n      jahr       kategorie         kategorie_gruppiert firmensitz_code\n Min.   :2016   Length:23770       Length:23770        Min.   :2761   \n 1st Qu.:2018   Class :character   Class :character    1st Qu.:2767   \n Median :2020   Mode  :character   Mode  :character    Median :2773   \n Mean   :2020                                          Mean   :2799   \n 3rd Qu.:2023                                          3rd Qu.:2829   \n Max.   :2025                                          Max.   :2895   \n  firmensitz            uid             firmenname        rechtsform_code   \n Length:23770       Length:23770       Length:23770       Length:23770      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  rechtsform         noga_code             noga           noga_abschnitt_code\n Length:23770       Length:23770       Length:23770       Length:23770       \n Class :character   Class :character   Class :character   Class :character   \n Mode  :character   Mode  :character   Mode  :character   Mode  :character   \n                                                                             \n                                                                             \n                                                                             \n noga_abschnitt     noga_abteilung    \n Length:23770       Length:23770      \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n\n\n\nWie viele verschiedene Kategorien gibt es?\n\n\nfirmen |&gt; count(kategorie_gruppiert, sort = TRUE)\n\n# A tibble: 4 × 2\n  kategorie_gruppiert     n\n  &lt;chr&gt;               &lt;int&gt;\n1 Neueintragung       10843\n2 Löschung             7491\n3 Auflösung            3566\n4 Anders               1870\n\n\n\nWelche Jahre sind abgedeckt?\n\n\nfirmen |&gt;\n  distinct(jahr) |&gt;\n  arrange(jahr)\n\n# A tibble: 10 × 1\n    jahr\n   &lt;dbl&gt;\n 1  2016\n 2  2017\n 3  2018\n 4  2019\n 5  2020\n 6  2021\n 7  2022\n 8  2023\n 9  2024\n10  2025"
  },
  {
    "objectID": "exercises/unit04/prak-04b-join-firmen-key.html#bezirksdaten-zusammenfügen",
    "href": "exercises/unit04/prak-04b-join-firmen-key.html#bezirksdaten-zusammenfügen",
    "title": "Praktikum 4b - Daten zusammenfügen",
    "section": "",
    "text": "Wir möchten die Trends der Firmen pro Jahr und Bezirk in BL analysieren. Dafür sollten wir zuerst die Bezirksdaten einfügen.\n\nLest die Raumgliedrungsdaten:\n\n\nraumgliederung &lt;- read_delim(\"data/ogd-10110-raumgliederung.csv\", delim = \";\")\nglimpse(raumgliederung)\n\nRows: 86\nColumns: 34\n$ BFS_Nummer                                &lt;dbl&gt; 2761, 2762, 2763, 2764, 2765…\n$ Gemeinde                                  &lt;chr&gt; \"Aesch (BL)\", \"Allschwil\", \"…\n$ Bezirk_Nummer                             &lt;dbl&gt; 1301, 1301, 1301, 1301, 1301…\n$ Bezirk                                    &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"A…\n$ Grossregion_Code                          &lt;dbl&gt; 3, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ Grossregion                               &lt;chr&gt; \"Nordwestschweiz\", \"Nordwest…\n$ Agglomeration_2020_Code                   &lt;dbl&gt; 2701, 2701, 2701, 2701, 2701…\n$ Agglomeration_2020                        &lt;chr&gt; \"Basel (CH)\", \"Basel (CH)\", …\n$ Agglomerationsgrössenklasse_2020_Code     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Agglomerationsgrössenklasse_2020          &lt;chr&gt; \"&gt;= 500'000 Einwohner/innen\"…\n$ Städtischer_Charakter_2020_Code           &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 4, 2, 2…\n$ Städtischer_Charakter_2020                &lt;chr&gt; \"Agglomerationskerngemeinde …\n$ Statistische_Stadt_2020_Code              &lt;dbl&gt; 1, 1, 1, 0, 1, 1, 0, 0, 1, 1…\n$ Statistische_Stadt_2020                   &lt;chr&gt; \"Ja\", \"Ja\", \"Ja\", \"Nein\", \"J…\n$ Städtisch_Ländlich_2020_Code              &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 2, 1, 1…\n$ Städtisch_Ländlich_2020                   &lt;chr&gt; \"Städtisch\", \"Städtisch\", \"S…\n$ Gemeindetypologie_2020_9_Code             &lt;dbl&gt; 11, 11, 11, 11, 11, 11, 11, …\n$ Gemeindetypologie_2020_9                  &lt;chr&gt; \"Städtische Gemeinde einer g…\n$ Gemeindetypologie_2020_25_Code            &lt;dbl&gt; 112, 112, 112, 113, 113, 113…\n$ Gemeindetypologie_2020_25                 &lt;chr&gt; \"Städtische Arbeitsplatzgeme…\n$ Arbeitsmarktgrossregion_2018_Code         &lt;chr&gt; \"08\", \"08\", \"08\", \"08\", \"08\"…\n$ Arbeitsmarktgrossregion_2018              &lt;chr&gt; \"Region Basel\", \"Region Base…\n$ Arbeitsmarktregion_2018_Code              &lt;chr&gt; \"08012\", \"08012\", \"08012\", \"…\n$ Arbeitsmarktregion_2018                   &lt;chr&gt; \"Reinach (BL) - Allschwil\", …\n$ Berggebiet_2019_Code                      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Berggebiet_2019                           &lt;chr&gt; \"Nein\", \"Nein\", \"Nein\", \"Nei…\n$ Urbanisierungsgrad_2011_Code              &lt;dbl&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 1…\n$ Urbanisierungsgrad_2011                   &lt;chr&gt; \"Dichtbesiedeltes Gebiet\", \"…\n$ Erweiterte_Stadt_2011_Code                &lt;dbl&gt; 2701950, 2701950, 2701950, 0…\n$ Erweiterte_Stadt_2011                     &lt;chr&gt; \"Basel: erweiterte Stadt\", \"…\n$ Funktionales_städtisches_Gebiet_2014_Code &lt;dbl&gt; 2701960, 2701960, 2701960, 2…\n$ Funktionales_städtisches_Gebiet_2014      &lt;chr&gt; \"Basel: funktionales städtis…\n$ Geometrie                                 &lt;chr&gt; \"{\\\"coordinates\\\": [[[[7.567…\n$ Geometrisches_Zentrum                     &lt;chr&gt; \"47.473950622, 7.585373859\",…\n\n\n\nBereinigt die Namen und behaltet nur die vier ersten Spalten (bfs_nummer, gemeinde, bezirk_nummer, bezirk):\n\n\nraumgliederung &lt;- raumgliederung |&gt;\n  clean_names() |&gt;\n  select(1:4)\nglimpse(raumgliederung)\n\nRows: 86\nColumns: 4\n$ bfs_nummer    &lt;dbl&gt; 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 27…\n$ gemeinde      &lt;chr&gt; \"Aesch (BL)\", \"Allschwil\", \"Arlesheim\", \"Biel-Benken\", \"…\n$ bezirk_nummer &lt;dbl&gt; 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 1301, 13…\n$ bezirk        &lt;chr&gt; \"Arlesheim\", \"Arlesheim\", \"Arlesheim\", \"Arlesheim\", \"Arl…\n\n\n\nVerknüpft die Bezirksdaten mit dem Unternehmensdatensatz und verwendet dabei die folgenden Spalten als Schlüssel: firmensitz_code == bfs_nummer, firmensitz == gemeinde:\n\n\nfirmen_joined &lt;- firmen |&gt;\n  left_join(y = raumgliederung, join_by(firmensitz_code == bfs_nummer, firmensitz == gemeinde)) |&gt;\n  relocate(starts_with(\"bezirk\"), .after = firmensitz)\n\nglimpse(firmen_joined)\n\nRows: 23,770\nColumns: 16\n$ jahr                &lt;dbl&gt; 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 20…\n$ kategorie           &lt;chr&gt; \"Widerruf der Auflösung\", \"Neueintragung\", \"Löschu…\n$ kategorie_gruppiert &lt;chr&gt; \"Anders\", \"Neueintragung\", \"Löschung\", \"Löschung\",…\n$ firmensitz_code     &lt;dbl&gt; 2831, 2831, 2770, 2770, 2775, 2763, 2828, 2831, 27…\n$ firmensitz          &lt;chr&gt; \"Pratteln\", \"Pratteln\", \"Muttenz\", \"Muttenz\", \"The…\n$ bezirk_nummer       &lt;dbl&gt; 1303, 1303, 1301, 1301, 1301, 1301, 1303, 1303, 13…\n$ bezirk              &lt;chr&gt; \"Liestal\", \"Liestal\", \"Arlesheim\", \"Arlesheim\", \"A…\n$ uid                 &lt;chr&gt; \"CHE114900844\", \"CHE175812531\", \"CHE131395143\", \"C…\n$ firmenname          &lt;chr&gt; \"Flipp GmbH in Liquidation\", \"Alaia Beauty GmbH\", …\n$ rechtsform_code     &lt;chr&gt; \"0107\", \"0107\", \"0101\", \"0101\", \"0101\", \"0107\", \"0…\n$ rechtsform          &lt;chr&gt; \"Gesellschaft mit beschränkter Haftung (GmbH)\", \"G…\n$ noga_code           &lt;chr&gt; \"181201\", \"960202\", \"432100\", \"692000\", \"329900\", …\n$ noga                &lt;chr&gt; \"Offsetdruck\", \"Kosmetiksalons\", \"Elektroinstallat…\n$ noga_abschnitt_code &lt;chr&gt; \"C\", \"S\", \"F\", \"M\", \"C\", \"G\", \"S\", \"L\", \"S\", \"U\", …\n$ noga_abschnitt      &lt;chr&gt; \"VERARBEITENDES GEWERBE/HERSTELLUNG VON WAREN\", \"E…\n$ noga_abteilung      &lt;chr&gt; \"Herstellung von Druckerzeugnissen; Vervielfältigu…"
  },
  {
    "objectID": "exercises/unit04/prak-04b-join-firmen-key.html#visualisierung",
    "href": "exercises/unit04/prak-04b-join-firmen-key.html#visualisierung",
    "title": "Praktikum 4b - Daten zusammenfügen",
    "section": "",
    "text": "Behaltet nur Jahre bis und mit 2024\nErstellt ein Balkendiagram der Anzahl von Firmen pro Kategorie, Jahr und Bezirk\n\n\n# Pro Bezirk, bar plot\n\nfirmen_joined |&gt;\n  filter(jahr != 2025) |&gt;\n  ggplot(aes(x = jahr, fill = kategorie_gruppiert)) +\n  geom_bar() +\n  facet_wrap(~bezirk) +\n  theme_minimal() +\n  labs(\n    x = \"\",\n    y = \"Anzahl Firmen\",\n    title = \"Anzahl Firmen in BL pro Bezirk und Kategorie\",\n    caption = \"https://data.bl.ch/explore/dataset/12460\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nBehaltet nur Jahre bis und mit 2024\nVerwendet summarise() um die Anzahl von Firmen pro Jahr, Bezirk und gruppierte Kategorien zu berechnen\nErstellt ein Liniendiagram der Anzahl von Firmen pro Kategorie, Jahr und Bezirk\n\n\n# Pro Bezirk, line plot\n\nfirmen_joined |&gt;\n  filter(jahr != 2025) |&gt;\n  summarise(n = n(), .by = c(jahr, kategorie_gruppiert, bezirk)) |&gt;\n  ggplot(aes(x = jahr, y = n, colour = kategorie_gruppiert)) +\n  geom_point() +\n  geom_line() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~bezirk) +\n  theme_minimal() +\n  labs(\n    x = \"\",\n    y = \"Anzahl Firmen\",\n    title = \"Anzahl Firmen in BL pro Bezirk und Kategorie\",\n    caption = \"https://data.bl.ch/explore/dataset/12460\"\n  )"
  },
  {
    "objectID": "exercises/unit04/prak-04c-pivot-key.html",
    "href": "exercises/unit04/prak-04c-pivot-key.html",
    "title": "Praktikum 4c: Daten pivotieren",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages importieren\n\nLadet die Packages tidyverse und janitor\n\n\nlibrary(ggthemes)\nlibrary(janitor)\nlibrary(tidyverse)\n\n\n\nDaten laden\n\nImportiert die “data/ogd_12030_wetter.csv”-Datei. Das sind die Tagesdaten der NBCN-Station (Swiss National Basic Climate Network) Basel-Binningen vom OGD-Portal.\n\n\nwetter &lt;- read_delim(\"data/ogd_12030_wetter.csv\", delim = \";\") |&gt;\n  clean_names()\n\nglimpse(wetter)\n\nRows: 45,656\nColumns: 12\n$ datum                       &lt;date&gt; 1946-02-22, 1946-02-23, 1946-02-24, 1946-…\n$ jahr                        &lt;dbl&gt; 1946, 1946, 1946, 1946, 1946, 1946, 1946, …\n$ globalstrahlung_in_w_m2     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ gesamtschneemenge           &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ gesamtbewolkung             &lt;dbl&gt; 87, 93, 97, 100, 100, 100, 77, 100, 100, 8…\n$ luftdruck_in_h_pa           &lt;dbl&gt; 980.8, 973.5, 975.5, 975.8, 963.0, 960.2, …\n$ niederschlag                &lt;dbl&gt; 0.0, 1.9, 6.9, 2.1, 0.0, 0.3, 0.0, 0.2, 0.…\n$ sonnenscheindauer           &lt;dbl&gt; 240, 0, 132, 0, 36, 0, 66, 0, 0, 120, 228,…\n$ tagesmittel_lufttemperatur  &lt;dbl&gt; 0.8, 4.0, 3.5, 0.7, 5.0, 0.9, -0.1, -1.1, …\n$ tagesminimum_lufttemperatur &lt;dbl&gt; -0.7, 0.3, 0.9, 0.1, 3.1, 0.5, -2.2, -2.7,…\n$ tagesmaximum_lufttemperatur &lt;dbl&gt; 2.8, 5.8, 6.1, 3.1, 8.9, 4.0, 4.3, 0.0, 3.…\n$ relative_luftfeuchtigkeit   &lt;dbl&gt; 77.3, 70.7, 62.0, 92.7, 82.3, 95.0, 53.7, …\n\n\n\n\nNamen saubermachen\n\nBereinigt die Namen mit der janitor::clean_names()-Funktion\n\n\n\nDaten Zusammenfassen\n\nVerwendet group_by() und summarise() (oder summarise() und .by()) um die durschnittlichen pro Jahr zu rechnen:\n\nmaximale Tagestemperatur (tagesmaximum_lufttemperatur)\nminimale Tagestemperatur (tagesminimum_lufttemperatur)\nmittel Tagestemperatur (tagesmittel_lufttemperatur)\n\n\n\nwetter_summary &lt;- wetter |&gt;\n  summarise(\n    temp_mittel = mean(tagesmittel_lufttemperatur, na.rm = TRUE),\n    temp_min = mean(tagesminimum_lufttemperatur, na.rm = TRUE),\n    temp_max = mean(tagesmaximum_lufttemperatur, na.rm = TRUE),\n    .by = jahr\n  )\n\n\n\nLiniendiagramm\n\nreproduziert die folgende Grafik ungefähr.\n\n\n\nwetter_summary |&gt;\n  ggplot() +\n  geom_line(aes(x = jahr, y = temp_mittel), colour = \"lightblue\") +\n  geom_line(aes(x = jahr, y = temp_min), colour = \"orange\") +\n  geom_line(aes(x = jahr, y = temp_max), colour = \"black\") +\n  labs(\n    x = \"\",\n    y = \"Temperatur (°C)\",\n    title = \"Durschnittliche Temperaturen in der Binnigen-Station, BL\",\n    caption = \"Quelle: https://data.bl.ch/explore/dataset/12030/\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nDas Problem: mehrere geoms, keine colour-aesthetic, keine legend.\n\nVerlängert den Datensatz, indem ihr temp_typ und temp_wert in zwei Spalten zusammenfasst.\n\n\nwetter_summary_long &lt;- wetter_summary |&gt;\n  pivot_longer(\n    cols = -jahr,\n    names_to = \"temp_typ\",\n    values_to = \"temp_wert\"\n  )\n\n\np &lt;- wetter_summary_long |&gt;\n  ggplot(aes(x = jahr, y = temp_wert, colour = temp_typ)) +\n  geom_line(alpha = 0.4) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(\n    x = \"\",\n    y = \"Temperatur (°C)\",\n    title = \"Durschnittliche Temperaturen in der Binnigen-Station, BL\",\n    colour = \"\",\n    caption = \"Quelle: https://data.bl.ch/explore/dataset/12030/\"\n  ) +\n  scale_x_continuous(\n    breaks = seq(min(wetter_summary_long$jahr), max(wetter_summary_long$jahr), by = 10)\n  ) +\n  theme_minimal() +\n  scale_colour_colorblind(labels = c(\"Maximal\", \"Mittel\", \"Minimal\"))\n\np\n\n\n\n\n\n\n\n\n\n# ggsave(\"img/weather_averages.png\")"
  },
  {
    "objectID": "exercises/unit04/prep-firmen.html",
    "href": "exercises/unit04/prep-firmen.html",
    "title": "Prepare Companies Dataset",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages laden\n\nlibrary(tidyverse)\n\n\n\nDaten Laden\nWe use company mutation data from the OGD-Portal BL: dfmutationen nach Rechtsform, NOGA-Einteilung und Gemeinde (seit Februar 2016)\n\ndf &lt;- read_delim(\"data/ogd_12460-firmen.csv\", delim = \";\")\nglimpse(df)\n\nRows: 23,770\nColumns: 16\n$ kategorie                    &lt;chr&gt; \"Fusion\", \"Fusion\", \"Neueintragung\", \"Neu…\n$ publikationsdatum_shab       &lt;date&gt; 2018-06-26, 2018-06-26, 2018-06-26, 2018…\n$ journaldatum_handelsregister &lt;date&gt; 2018-06-21, 2018-06-21, 2018-06-21, 2018…\n$ id_shab                      &lt;dbl&gt; 4314737, 4314735, 4314731, 4314729, 43114…\n$ firmensitz_code              &lt;dbl&gt; 2824, 2770, 2887, 2763, 2831, 2770, 2831,…\n$ firmensitz                   &lt;chr&gt; \"Frenkendorf\", \"Muttenz\", \"Lampenberg\", \"…\n$ meldung                      &lt;chr&gt; \"Elektro Naegelin AG, in Frenkendorf, CHE…\n$ uid                          &lt;chr&gt; \"CHE115713279\", \"CHE115756975\", \"CHE23510…\n$ firmenname                   &lt;chr&gt; \"Elektro Naegelin AG\", \"Autohaus Wederich…\n$ rechtsform_code              &lt;chr&gt; \"0106\", \"0106\", \"0107\", \"0106\", \"0101\", \"…\n$ rechtsform                   &lt;chr&gt; \"Aktiengesellschaft (AG)\", \"Aktiengesells…\n$ noga_code                    &lt;chr&gt; \"432100\", \"452001\", \"711205\", \"282500\", \"…\n$ noga                         &lt;chr&gt; \"Elektroinstallation\", \"Instandhaltung un…\n$ noga_abschnitt_code          &lt;chr&gt; \"F\", \"G\", \"M\", \"C\", \"M\", \"G\", \"M\", \"S\", \"…\n$ noga_abschnitt               &lt;chr&gt; \"BAUGEWERBE/BAU\", \"HANDEL; INSTANDHALTUNG…\n$ noga_abteilung               &lt;chr&gt; \"Vorbereitende Baustellenarbeiten, Bauins…\n\nsummary(df)\n\n  kategorie         publikationsdatum_shab journaldatum_handelsregister\n Length:23770       Min.   :2016-02-03     Min.   :2016-01-29          \n Class :character   1st Qu.:2018-05-17     1st Qu.:2018-05-14          \n Mode  :character   Median :2020-10-02     Median :2020-09-29          \n                    Mean   :2020-09-05     Mean   :2020-08-31          \n                    3rd Qu.:2023-01-12     3rd Qu.:2023-01-09          \n                    Max.   :2025-01-29     Max.   :2025-01-24          \n    id_shab          firmensitz_code  firmensitz          meldung         \n Min.   :2.637e+06   Min.   :2761    Length:23770       Length:23770      \n 1st Qu.:4.235e+06   1st Qu.:2767    Class :character   Class :character  \n Median :1.005e+09   Median :2773    Mode  :character   Mode  :character  \n Mean   :7.217e+08   Mean   :2799                                         \n 3rd Qu.:1.006e+09   3rd Qu.:2829                                         \n Max.   :1.006e+09   Max.   :2895                                         \n     uid             firmenname        rechtsform_code     rechtsform       \n Length:23770       Length:23770       Length:23770       Length:23770      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n  noga_code             noga           noga_abschnitt_code noga_abschnitt    \n Length:23770       Length:23770       Length:23770        Length:23770      \n Class :character   Class :character   Class :character    Class :character  \n Mode  :character   Mode  :character   Mode  :character    Mode  :character  \n                                                                             \n                                                                             \n                                                                             \n noga_abteilung    \n Length:23770      \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\n\ndf |&gt; count(kategorie)\n\n# A tibble: 9 × 2\n  kategorie                     n\n  &lt;chr&gt;                     &lt;int&gt;\n1 Auflösung                  2243\n2 Auflösung infolge Konkurs  1323\n3 Fusion                      476\n4 Löschung                   7041\n5 Löschung infolge Fusion     450\n6 Neueintragung             10843\n7 Spaltung                     21\n8 Widerruf der Auflösung     1343\n9 Wiedereintragung             30\n\n\n\ndf |&gt;\n  mutate(jahr = year(journaldatum_handelsregister)) |&gt;\n  count(jahr, kategorie)\n\n# A tibble: 84 × 3\n    jahr kategorie                     n\n   &lt;dbl&gt; &lt;chr&gt;                     &lt;int&gt;\n 1  2016 Auflösung                   244\n 2  2016 Auflösung infolge Konkurs   136\n 3  2016 Fusion                       45\n 4  2016 Löschung                    875\n 5  2016 Löschung infolge Fusion      44\n 6  2016 Neueintragung               937\n 7  2016 Spaltung                      7\n 8  2016 Widerruf der Auflösung      171\n 9  2016 Wiedereintragung              5\n10  2017 Auflösung                   251\n# ℹ 74 more rows\n\n\n\ndf &lt;- df |&gt;\n  mutate(\n    jahr = year(journaldatum_handelsregister),\n    .after = journaldatum_handelsregister\n  ) |&gt;\n  mutate(\n    kategorie_gruppiert = fct_collapse(\n      kategorie,\n      \"Auflösung\" = c(\"Auflösung\", \"Auflösung infolge Konkurs\"),\n      \"Löschung\" = c(\"Löschung\", \"Löschung infolge Fusion\"),\n      \"Neueintragung\" = \"Neueintragung\",\n      other_level = \"Anders\"\n    ), .after = kategorie\n  ) |&gt;\n  arrange(desc(publikationsdatum_shab)) |&gt;\n  relocate(jahr) |&gt;\n  select(-where(is.Date), -meldung, -id_shab)\n\n\ndf |&gt;\n  summarise(n = n(), .by = c(jahr, kategorie_gruppiert)) |&gt;\n  filter(jahr != 2025) |&gt;\n  mutate(kategorie_gruppiert = fct_reorder(kategorie_gruppiert, -n)) |&gt;\n  ggplot(aes(x = jahr, y = n, colour = kategorie_gruppiert)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\n\n\n\n\n{\n  df |&gt;\n    summarise(n = n(), .by = c(jahr, kategorie_gruppiert)) |&gt;\n    filter(jahr != 2025) |&gt;\n    mutate(kategorie_gruppiert = fct_reorder(kategorie_gruppiert, -n)) |&gt;\n    ggplot(aes(x = jahr, y = n, fill = kategorie_gruppiert)) +\n    # geom_col(position = \"jitter\")\n    geom_col(position = \"fill\")\n} |&gt;\n  plotly::ggplotly()\n\n\n\n\n\n\n{\n  df |&gt;\n    summarise(n = n(), .by = c(jahr, kategorie_gruppiert)) |&gt;\n    filter(jahr != 2025) |&gt;\n    mutate(kategorie_gruppiert = fct_reorder(kategorie_gruppiert, n)) |&gt;\n    mutate(perc = n / sum(n), .by = jahr) |&gt; \n    ggplot(aes(x = jahr, y = perc, fill = kategorie_gruppiert)) +\n    # geom_col(position = \"jitter\")\n    geom_col()\n} |&gt;\n  plotly::ggplotly()\n\n\n\n\n\n\ndf |&gt; \n     add_count(jahr, kategorie_gruppiert) |&gt;\n    mutate(kategorie_gruppiert = fct_reorder(kategorie_gruppiert, n, mean)) |&gt;\n mutate(jahr = factor(jahr)) |&gt; \n  ggplot(aes(x = jahr, fill = kategorie_gruppiert)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\ndf &lt;- df |&gt; \n     add_count(jahr, kategorie_gruppiert) |&gt;\n    mutate(kategorie_gruppiert = fct_reorder(kategorie_gruppiert, -n, mean)) |&gt;\n mutate(across(c(jahr, kategorie, firmensitz_code, firmensitz), \\(x) factor(x))) |&gt; \n  select(-n)\n  \ndf |&gt; glimpse()\n\nRows: 23,770\nColumns: 14\n$ jahr                &lt;fct&gt; 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 20…\n$ kategorie           &lt;fct&gt; Widerruf der Auflösung, Neueintragung, Löschung, L…\n$ kategorie_gruppiert &lt;fct&gt; Anders, Neueintragung, Löschung, Löschung, Löschun…\n$ firmensitz_code     &lt;fct&gt; 2831, 2831, 2770, 2770, 2775, 2763, 2828, 2831, 27…\n$ firmensitz          &lt;fct&gt; Pratteln, Pratteln, Muttenz, Muttenz, Therwil, Arl…\n$ uid                 &lt;chr&gt; \"CHE114900844\", \"CHE175812531\", \"CHE131395143\", \"C…\n$ firmenname          &lt;chr&gt; \"Flipp GmbH in Liquidation\", \"Alaia Beauty GmbH\", …\n$ rechtsform_code     &lt;chr&gt; \"0107\", \"0107\", \"0101\", \"0101\", \"0101\", \"0107\", \"0…\n$ rechtsform          &lt;chr&gt; \"Gesellschaft mit beschränkter Haftung (GmbH)\", \"G…\n$ noga_code           &lt;chr&gt; \"181201\", \"960202\", \"432100\", \"692000\", \"329900\", …\n$ noga                &lt;chr&gt; \"Offsetdruck\", \"Kosmetiksalons\", \"Elektroinstallat…\n$ noga_abschnitt_code &lt;chr&gt; \"C\", \"S\", \"F\", \"M\", \"C\", \"G\", \"S\", \"L\", \"S\", \"U\", …\n$ noga_abschnitt      &lt;chr&gt; \"VERARBEITENDES GEWERBE/HERSTELLUNG VON WAREN\", \"E…\n$ noga_abteilung      &lt;chr&gt; \"Herstellung von Druckerzeugnissen; Vervielfältigu…\n\n\n\nwrite_csv(x = df, file = \"data/ogd_12460_firmen_clean.csv\")"
  },
  {
    "objectID": "exercises/unit05/prak-05a-type-coercion.html",
    "href": "exercises/unit05/prak-05a-type-coercion.html",
    "title": "Praktikum 05a: Type coercion",
    "section": "",
    "text": "c(1, 1L, \"C\")\n\n[1] \"1\" \"1\" \"C\"\n\n\n\n1\n\n[1] 1\n\n1L\n\n[1] 1\n\n\"C\"\n\n[1] \"C\"\n\n\n\n#typeof(c(1, 1L, \"C\"))"
  },
  {
    "objectID": "exercises/unit05/prak-05a-type-coercion.html#c1-1l-c",
    "href": "exercises/unit05/prak-05a-type-coercion.html#c1-1l-c",
    "title": "Praktikum 05a: Type coercion",
    "section": "",
    "text": "c(1, 1L, \"C\")\n\n[1] \"1\" \"1\" \"C\"\n\n\n\n1\n\n[1] 1\n\n1L\n\n[1] 1\n\n\"C\"\n\n[1] \"C\"\n\n\n\n#typeof(c(1, 1L, \"C\"))"
  },
  {
    "objectID": "exercises/unit05/prak-05a-type-coercion.html#c1l-0-a",
    "href": "exercises/unit05/prak-05a-type-coercion.html#c1l-0-a",
    "title": "Praktikum 05a: Type coercion",
    "section": "c(1L / 0, \"A\")",
    "text": "c(1L / 0, \"A\")\n\nc(1L / 0, \"A\")\n\n[1] \"Inf\" \"A\"  \n\n\n\n# typeof(1L)\n# typeof(0)\n# typeof(1L/0)\n# typeof(\"A\")\n\n\n#typeof(c(1L / 0, \"A\"))"
  },
  {
    "objectID": "exercises/unit05/prak-05a-type-coercion.html#c13-5",
    "href": "exercises/unit05/prak-05a-type-coercion.html#c13-5",
    "title": "Praktikum 05a: Type coercion",
    "section": "c(1:3, 5)",
    "text": "c(1:3, 5)\n\nc(1:3, 5)\n\n[1] 1 2 3 5\n\n\n\n# typeof(1:3)\n# typeof(5)\n\n\n#typeof(c(1:3, 5))"
  },
  {
    "objectID": "exercises/unit05/prak-05a-type-coercion.html#c3-3",
    "href": "exercises/unit05/prak-05a-type-coercion.html#c3-3",
    "title": "Praktikum 05a: Type coercion",
    "section": "c(3, \"3+\")",
    "text": "c(3, \"3+\")\n\nc(3, \"3+\")\n\n[1] \"3\"  \"3+\"\n\n\n\n# typeof(3)\n# typeof(\"3+\")\n\n\n# typeof(c(3, \"3+\"))"
  },
  {
    "objectID": "exercises/unit05/prak-05a-type-coercion.html#cna-true",
    "href": "exercises/unit05/prak-05a-type-coercion.html#cna-true",
    "title": "Praktikum 05a: Type coercion",
    "section": "c(NA, TRUE)",
    "text": "c(NA, TRUE)\n\nc(NA, TRUE)\n\n[1]   NA TRUE\n\n\n\n# typeof(NA)\n# typeof(TRUE)\n\n\n#typeof(c(NA, TRUE))"
  },
  {
    "objectID": "exercises/unit05/prak-05b-cond-mutate.html",
    "href": "exercises/unit05/prak-05b-cond-mutate.html",
    "title": "Praktium 05b: Bedingt mutate()",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nOGD-Datensätze\nWir werden mit zwei OGD-Datensätze arbeiten:\n\nAbstimmungsarchiv\nGebäude\n\nMan könnte OGD-Daten direkt aus dem OGd-Portal so einlesen:\n\nabstimmung &lt;- read.delim(\"https://baselland.opendatasoft.com/api/explore/v2.1/catalog/datasets/11990/exports/csv\", sep = \";\")\n\n\ngebaeude &lt;- read.delim(\"https://baselland.opendatasoft.com/api/explore/v2.1/catalog/datasets/12160/exports/csv\", sep = \";\")\n\nAchtung aktuell read.delim() statt read_delim().\n\n\nPackages laden\n\nLädt das tidyverse-Package.\n\n\n\nif_else()\n\nLädt die Daten “data/ogd_abstimmungsarchiv_11990.csv”.\nErkundet die Daten: glimpse(), summary(), View()\nWas ist die durchschnittliche Wahlbeteiligung? (summary(), summarise() + mean(), summarise() + median())\nErstellt eine neue kategorielle Variable turnout_cat, die zwei Niveaus hat:\n\nunterdurchschnittlich\nüberdurchschnittlich\n\n\n\n\ncase_when()\n\nLädt die Daten “data/ogd_gebaeude12160.csv”\nErkundet die Daten: glimpse(), summary(), View()\nBehaltet nur die folgenden Spalten:\n\n“gemeindenummer_bfs”\n\n“gemeindename”\n\n“baujahr_des_gebaeudes”\n\n“energie_waermequelle_heizung_primaer_code”\n\n“energie_waermequelle_heizung_primaer_bezeichnung”\n“gebaeudeflaeche”\n\n“anzahl_geschosse”\n\nWie viele verschiedene Primäre Wärmequellen gibt es?\nVerwendet case_when() und die Variable energie_waermequelle_heizung_primaer_bezeichnung um eine neue Variable der Wärmequelle zu erstellen, die vier Kategorien hat:\n\nGas, Heizöl → Fossil\nKeine → Keine\nUnbestimmt → Unbestimmt\nalle andere Quellen → Erneuerbare"
  },
  {
    "objectID": "exercises/unit05/prak-05c-forcats-firmen.html",
    "href": "exercises/unit05/prak-05c-forcats-firmen.html",
    "title": "Praktikum 5c: {forcats}",
    "section": "",
    "text": "Tastaturkürzel\n\n\n\n\n\n\n\nEinen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -\n\n\n\n\n\nPackages laden\n\nLadet Packages janitor und tidyverse.\n\n\n\nDaten laden\n\nLest die Firmen- und Raumgliederungsdaten ein und macht die Namen sauber (janitor::clean_names())\n\ndata/ogd_12460_firmen_clean.csv\ndata/ogd-10110-raumgliederung.csv\n\nErkundet die Daten mit glimpse() und summary().\nReinigt die Namen Vom Raumgliederung-Datensatz\n\n\n\nDaten transformieren\n\nWie viele Kategorien von rechtsform gibt es?\nFügt die Firmen- und Raumgliederungsdaten zusammen (Achtung! verschiedene Variablenamen, join_by())\nEntfernt das Jahr 2025\nVerwendet fct_lump um drei Kategorien der Rechstform zu behalten (other_level = “Anders”)\nVerwendet count() um das Ergebnis zu checken\n\n\n\nDaten visualisieren\n\nErstellt ein Balkendiagram der neuen gruppierte Rechtsform-Variable\nBenutzt fct_infreq() um die Balken absteigend zu ordnen\nErstellt ein Balkendiagramm der neuen gruppierte Rechtsform-Variable und dem Bezirk (Facettierung: facet_grid(rechtsform_gruppiert ~ bezirk))"
  },
  {
    "objectID": "exercises/unit05/prak-05d-cond-mutate-forcats.html",
    "href": "exercises/unit05/prak-05d-cond-mutate-forcats.html",
    "title": "Praktikum 05d: if_else(), case_when(), fct_infreq()",
    "section": "",
    "text": "Einen neuen Code-chunk hinzufügen\nCtrl + Alt + I\n\n\nCode “Zeile für Zeile” innerhalb eines Code-chunks ausführen\nCtrl + Enter\n\n\nDen gesamten Code-chunk ausführen\nCtrl + Shift + Enter\n\n\n(Aus-)kommentieren\nCtrl + Shift + C\n\n\nDas Pipe |&gt;\nCtrl + Shift + M\n\n\nDer Zuweisungs-Operator &lt;-\nAlt + -"
  },
  {
    "objectID": "exercises/unit05/prak-05d-cond-mutate-forcats.html#stetige-variable",
    "href": "exercises/unit05/prak-05d-cond-mutate-forcats.html#stetige-variable",
    "title": "Praktikum 05d: if_else(), case_when(), fct_infreq()",
    "section": "Stetige Variable",
    "text": "Stetige Variable\n\nErstellt zusätzlich zur Variable species_binary eine Spalte für BMI=mass[height(m)]^2\\text{BMI} = \\frac{\\text{mass}}{[\\text{height(m)]^2}}\n\nund eine kategorielle Variable bmi_cat mit folgenden Werten:\n\nBMI &lt; 18.5: Underweight\n18.5 ≤\\leq BMI &lt; 25: Healthy\n25 ≤\\leq BMI &lt; 30: Overweight\nBMI ≥\\geq 30: Obese\n\nund speichert den resultierenden Dataframe in einem neuen Objekt df1.\n\nErstellt ein Boxplot der Variable bmi gegen species_binary. Gibt es outliers?\nErstellt ein barplot von sex mit Zuordnung zur Variable bmi_cat. sex sollte abseteigend dargestellet werden (fct_infreq())."
  },
  {
    "objectID": "exercises/unit05/prak-05d-cond-mutate-forcats.html#kategorielle-variable",
    "href": "exercises/unit05/prak-05d-cond-mutate-forcats.html#kategorielle-variable",
    "title": "Praktikum 05d: if_else(), case_when(), fct_infreq()",
    "section": "Kategorielle Variable",
    "text": "Kategorielle Variable\nIm starwars Datensatz gibt es vier Typen von Kreaturen:\n\nMenschen = Human,\nEmpfindungsfähige Humanoide = Sentient Humanoid,\nNicht empfindungsfähiges Tiere = Non-Sentient Animal,\nDroiden = Droid.\n\nHier ist die Liste von empfindungsfähigen Humanoiden:\n\nsentient_humanoids &lt;- c(\"Aleena\", \"Besalisk\", \"Cerean\", \"Chagrian\", \"Clawdite\", \"Ewok\", \"Dug\", \"Zabrak\", \"Geonosian\", \"Gungan\", \"Hutt\", \"Iktotchi\", \"Kaleesh\", \"Kel Dor\", \"Mirialan\", \"Mon Calamari\", \"Muun\", \"Nautolan\", \"Neimodian\", \"Pau'an\", \"Togruta\", \"Twi'lek\", \"Wookiee\", \"Quermian\", \"Rodian\", \"Skakoan\", \"Sullustan\", \"Tholothian\", \"Togruta\", \"Toong\", \"Twi'lek\", \"Vulptereen\", \"Xexto\", \"Yoda's species\", \"Zabrak\")\n\nund die Liste von nicht empfindungsfähigen Tieren:\n\nnon_sentient_animals &lt;- c(\"Trandoshan\", \"Kaminoan\", \"Toydarian\")\n\n\nErstellt eine Spalte (species_type) für den Typ der Kreaturen. Benutzt case_when() und %in% dafür:\nNimmt Jabba the Hutt (“Jabba Desilijic Tiure”) raus und erstellt ein barplot (position = \"fill\") der Variable species_type mit bmi_cat als Zuordnung-Variable. Beide species_type und bmi_cat sollten absteigend dargestellt werden."
  },
  {
    "objectID": "exercises/unit06/prak_06a-quarto-projekt.html",
    "href": "exercises/unit06/prak_06a-quarto-projekt.html",
    "title": "Praktikum 06a: CO2-Emissionen",
    "section": "",
    "text": "Erstellt ein neues Quarto-Projekt Namens “energie”\nErstellt zwei Ordner im Projekt: “data” und “output”\nSpeichert die CO2-Emissionen nach Energieträger, Gemeinde und Jahr Datei in data/\nSpeichert die Raumgliederungsdaten in data/\nLädt die folgenden Packages: {skimr}, {janitor} und {tidyverse}\nLest die Daten ein: df und df_gem\nErkundet die Daten: names(), View(), glimpse(), summary(), skim()\nMacht die Namen sauber\nFügt den resultiereden Datensatz mit dem Gemeinde-Datensatz. Tipp: join_by(bfs_gemeindenummer == bfs_nummer) und es gibt eine Gemeinde-Spalte in jedem Datensatz.\nRechnet die durschnittlichen CO2-Emissionen pro Person, Jahr und Bezirk\nReproduziert die folgende Abbildung:"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Literatur",
    "section": "",
    "text": "Baumer, Benjamin S., Daniel T. Kaplan, und Nicholas J. Horton. 2024. Modern Data Science with R. 3. Aufl. https://mdsr-book.github.io/mdsr3e/.\n\n\nBryan, Jennifer. o. J. Happy Git and Github for the useR. https://happygitwithr.com/.\n\n\nÇetinkaya-Rundel, Mine. „Data Science in a Box“. https://datasciencebox.org/.\n\n\n———. 2019. „Tidy up your data science workflow with the tidyverse“. 2019. https://mine-cetinkaya-rundel.github.io/tidy-up-ds/2019-12-lausanne/tidy-up.html.\n\n\nChang, Winston. 2023. R Graphics Cookbook, 2nd edition. O’Reilly Media. https://r-graphics.org/.\n\n\nEllis, Andrew, und Boris Mayer. 2023. Einführung in R. https://methodenlehre.github.io/einfuehrung-in-R/.\n\n\nFrancis, Roy. 2019. „Working with ggplot2“. 2019. https://nbisweden.github.io/RaukR-2019/ggplot/presentation/ggplot_presentation.html.\n\n\nGrolemund, Garrett. 2014. Hands-On Programming with R. O’Reilly Media. https://rstudio-education.github.io/hopr/.\n\n\nHase, Valerie. 2021. Forschungsseminar: Text as data. Universität Zürich. https://bookdown.org/valerie_hase/Github/.\n\n\nHorst, Allison M, Alison Presmanes Hill, und Kristen B Gorman. 2020. „allisonhorst/palmerpenguins: v0.1.0“, Juli. https://doi.org/10.5281/zenodo.3960218.\n\n\nMethodenzentrum der Ruhr-Universität Bochum. „Einführung in R“. https://methodenzentrum.ruhr-uni-bochum.de/e-learning/software/einfuehrung-in-r/.\n\n\nRLadies-Freiburg. 2021. „Zero to (s)hero“. https://github.com/rladies/meetup-presentations_freiburg.\n\n\nRobinson, David. 2021. „Intro to the unvotes package“. 2021. https://cran.r-project.org/web/packages/unvotes/vignettes/unvotes.html.\n\n\nSchöbitz, Lars. 2021. „rstatsZH - Data Science mit R“. 2021. https://rstatszh.github.io/website/.\n\n\nVoeten, Erik. 2013. „Data and Analyses of Voting in the UN General Assembly“. In Routledge Handbook of International Organization, herausgegeben von Bob Reinalda. Routledge.\n\n\nWickham, Hadley. 2023. ggplot2: Elegant Graphics for Data Analysis (3e). https://ggplot2-book.org/.\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, und Garrett Grolemund. 2023. R for Data Science (2e). 2. Aufl. O’Reilly Media. https://r4ds.hadley.nz/.",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Literatur"
    ]
  },
  {
    "objectID": "slides/slide-02a-viz.html#diagramtypen",
    "href": "slides/slide-02a-viz.html#diagramtypen",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Diagramtypen",
    "text": "Diagramtypen\n❓"
  },
  {
    "objectID": "slides/slide-02a-viz.html#diagramtypen-1",
    "href": "slides/slide-02a-viz.html#diagramtypen-1",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Diagramtypen",
    "text": "Diagramtypen\n❓\n\n\nBalkendiagramm\n(bar chart)\n\n\nHistogramm\n(histogram)\n\n\nStreudiagramm\n(scatter plot)\n\n\nLiniendiagramm\n(line chart)\n\n\nBoxplot\n(boxplot)\n\n\nKreisdiagramm\n(pie chart)\n\n\ngeom_bar()\n\n\ngeom_histogram()\n\n\ngeom_point()\n\n\ngeom_line()\n\n\ngeom_boxplot()\n\n\n(überspringen)"
  },
  {
    "objectID": "slides/slide-02a-viz.html#r-package-ggplot2",
    "href": "slides/slide-02a-viz.html#r-package-ggplot2",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "R Package ggplot2",
    "text": "R Package ggplot2\n\n\n\n\n\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], \n                     y = [y-variable])) +\n   geom_xxx() +\n   other options"
  },
  {
    "objectID": "slides/slide-02a-viz.html#balkendiagramm",
    "href": "slides/slide-02a-viz.html#balkendiagramm",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Balkendiagramm",
    "text": "Balkendiagramm\n\nggplot(penguins, aes(x = species)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/slide-02a-viz.html#balkendiagramm-1",
    "href": "slides/slide-02a-viz.html#balkendiagramm-1",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Balkendiagramm",
    "text": "Balkendiagramm\n\nggplot(penguins, aes(x = species, fill = species)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/slide-02a-viz.html#balkendiagramm-2",
    "href": "slides/slide-02a-viz.html#balkendiagramm-2",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Balkendiagramm",
    "text": "Balkendiagramm\n\nggplot(penguins, aes(y = species, fill = species)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/slide-02a-viz.html#praktikum-02a",
    "href": "slides/slide-02a-viz.html#praktikum-02a",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Praktikum 02a",
    "text": "Praktikum 02a\nexercises/unit2/prak-02a-viz.qmd\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-02a-viz.html#praktikum-02b-visualisierung-hausaufgabe",
    "href": "slides/slide-02a-viz.html#praktikum-02b-visualisierung-hausaufgabe",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Praktikum 02b: Visualisierung (Hausaufgabe)",
    "text": "Praktikum 02b: Visualisierung (Hausaufgabe)\nprak-02b-viz.qmd"
  },
  {
    "objectID": "slides/slide-02a-viz.html#section",
    "href": "slides/slide-02a-viz.html#section",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "",
    "text": "Slides created via revealjs and Quarto.\nAccess slides as PDF.\nAll material is licensed under Creative Commons Attribution Share Alike 4.0 International."
  },
  {
    "objectID": "slides/slide-02a-viz.html#kategoriale-variablen",
    "href": "slides/slide-02a-viz.html#kategoriale-variablen",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Kategoriale Variablen",
    "text": "Kategoriale Variablen\n\nggplot(penguins, aes(x = species)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/slide-02a-viz.html#kategoriale-variablen-1",
    "href": "slides/slide-02a-viz.html#kategoriale-variablen-1",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Kategoriale Variablen",
    "text": "Kategoriale Variablen\n\nggplot(penguins, aes(x = species, fill = species)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/slide-02a-viz.html#kategoriale-variablen-2",
    "href": "slides/slide-02a-viz.html#kategoriale-variablen-2",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Kategoriale Variablen",
    "text": "Kategoriale Variablen\n\nggplot(penguins, aes(x = species, fill = island)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\nDie Grafik zeigt die Häufigkeit der einzelnen Pinguinarten auf den einzelnen Inseln."
  },
  {
    "objectID": "slides/slide-02a-viz.html#kategoriale-variablen-3",
    "href": "slides/slide-02a-viz.html#kategoriale-variablen-3",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Kategoriale Variablen",
    "text": "Kategoriale Variablen\n\nggplot(penguins, aes(x = species, fill = species)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\n\n\n\n\nDiese Grafik ist ein relativer Häufigkeitsplot, der durch die Einstellung position = “fill” im Geom erstellt wird. Sie ist nützlicher für den Vergleich von species über Inseln hinweg, da sie nicht durch die ungleiche Anzahl von Pinguinen auf den Inseln beeinflusst wird.\n\n\nforcats::fct_infreq()"
  },
  {
    "objectID": "slides/slide-02a-viz.html#numerische-variablen",
    "href": "slides/slide-02a-viz.html#numerische-variablen",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Numerische Variablen",
    "text": "Numerische Variablen\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 200)"
  },
  {
    "objectID": "slides/slide-02a-viz.html#numerische-variablen-1",
    "href": "slides/slide-02a-viz.html#numerische-variablen-1",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Numerische Variablen",
    "text": "Numerische Variablen\n\nBinwidth = 20Binwidth = 2000\n\n\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 20)\n\n\n\n\n\n\n\n\n\n\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 2000)\n\n\n\n\n\n\n\n\n\n\n\n\nEine Alternative für numerische variables ist density plot, eine smoothed-out version eines Histogramms."
  },
  {
    "objectID": "slides/slide-02a-viz.html#numerische-variablen-2",
    "href": "slides/slide-02a-viz.html#numerische-variablen-2",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Numerische Variablen",
    "text": "Numerische Variablen\n\nggplot(penguins, aes(x = body_mass_g)) +\n    geom_density()"
  },
  {
    "objectID": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable",
    "href": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Eine numerische und eine kategoriale Variable",
    "text": "Eine numerische und eine kategoriale Variable\n\nggplot(penguins, aes(x = species, y = body_mass_g)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\n\nErklärungen zum Boxplot\n\n\n\nAlternativ können wir density plots mit geom_density() erstellen."
  },
  {
    "objectID": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable-1",
    "href": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable-1",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Eine numerische und eine kategoriale Variable",
    "text": "Eine numerische und eine kategoriale Variable\n\nggplot(penguins, aes(x = body_mass_g, colour = species)) +\n  geom_density(linewidth = 1)"
  },
  {
    "objectID": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable-2",
    "href": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable-2",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Eine numerische und eine kategoriale Variable",
    "text": "Eine numerische und eine kategoriale Variable\n\nggplot(penguins, aes(x = body_mass_g, colour = species, fill = species)) +\n  geom_density(alpha = 0.4)"
  },
  {
    "objectID": "slides/slide-02a-viz.html#drei-oder-mehr-variablen",
    "href": "slides/slide-02a-viz.html#drei-oder-mehr-variablen",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Drei oder mehr Variablen",
    "text": "Drei oder mehr Variablen\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(colour = species, shape = island))\n\n\n\n\n\n\n\n\n\n\n\nWenn man zu viele ästhetische Zuordnungen zu einer Darstellung hinzufügt, wird sie unübersichtlich und schwer zu verstehen. Eine andere Möglichkeit, die besonders bei kategorialen Variablen nützlich ist, besteht darin, die Darstellung in facets aufzuteilen, d. h. in Unterdiagramme, die jeweils eine Teilmenge der Daten anzeigen."
  },
  {
    "objectID": "slides/slide-02a-viz.html#drei-oder-mehr-variablen-1",
    "href": "slides/slide-02a-viz.html#drei-oder-mehr-variablen-1",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Drei oder mehr Variablen",
    "text": "Drei oder mehr Variablen\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(colour = species, shape = island)) +\n  facet_wrap(~island)"
  },
  {
    "objectID": "slides/slide-02a-viz.html#section-1",
    "href": "slides/slide-02a-viz.html#section-1",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "",
    "text": "Auf dieser Website findet ihr einen Leitfaden für geeignete grafische Möglichkeiten je nach Datentyp: data-to-viz.com"
  },
  {
    "objectID": "slides/slide-02a-viz.html#praktikum-02b-visualisierung",
    "href": "slides/slide-02a-viz.html#praktikum-02b-visualisierung",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Praktikum 02b: Visualisierung",
    "text": "Praktikum 02b: Visualisierung\nprak-02b-viz.qmd\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable-3",
    "href": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable-3",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Eine numerische und eine kategoriale Variable",
    "text": "Eine numerische und eine kategoriale Variable\n\nlibrary(ggridges)\nggplot(penguins, aes(x = body_mass_g, y = species, fill = species, colour = species)) +\n  geom_density_ridges(scale = 0.95, alpha = 0.5)"
  },
  {
    "objectID": "slides/slide-02a-viz.html#drei-oder-mehr-variablen-2",
    "href": "slides/slide-02a-viz.html#drei-oder-mehr-variablen-2",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Drei oder mehr Variablen",
    "text": "Drei oder mehr Variablen\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(colour = species, shape = island)) +\n  facet_wrap(~island) +\n  guides(shape = \"none\")"
  },
  {
    "objectID": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable-4",
    "href": "slides/slide-02a-viz.html#eine-numerische-und-eine-kategoriale-variable-4",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Eine numerische und eine kategoriale Variable",
    "text": "Eine numerische und eine kategoriale Variable"
  },
  {
    "objectID": "slides/slide-02a-viz.html#numerische-variable",
    "href": "slides/slide-02a-viz.html#numerische-variable",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Numerische Variable",
    "text": "Numerische Variable\n\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 20) +\nggplot(penguins, aes(x = body_mass_g)) +\n  geom_histogram(binwidth = 2000)"
  },
  {
    "objectID": "slides/slide-02a-viz.html#kategoriale-variable",
    "href": "slides/slide-02a-viz.html#kategoriale-variable",
    "title": "Daten Visualisieren mit {ggplot2} [2/2]",
    "section": "Kategoriale Variable",
    "text": "Kategoriale Variable\n\nggplot(penguins, aes(x = fct_infreq(species))) +\n  geom_bar()"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#daten-transformation-mit-dplyr",
    "href": "slides/slide-03-dplyr.html#daten-transformation-mit-dplyr",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten-Transformation mit {dplyr}",
    "text": "Daten-Transformation mit {dplyr}\n\n\n\n\n\nZeilen: filtern, anordnen\n\nSpalten: auswählen, anordnen, umbenennen, erstellen\n\nGruppen: zusammenfassen, zählen\nTabellen: zusammenfügen"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#daten",
    "href": "slides/slide-03-dplyr.html#daten",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten",
    "text": "Daten\n\nlibrary(tidyverse)\nglimpse(starwars)\n\n\n\nRows: 87\nColumns: 14\n$ name       &lt;chr&gt; \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n$ height     &lt;int&gt; 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n$ mass       &lt;dbl&gt; 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n$ hair_color &lt;chr&gt; \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N…\n$ skin_color &lt;chr&gt; \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n$ eye_color  &lt;chr&gt; \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",…\n$ birth_year &lt;dbl&gt; 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n$ sex        &lt;chr&gt; \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n$ gender     &lt;chr&gt; \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n$ homeworld  &lt;chr&gt; \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n$ species    &lt;chr&gt; \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n$ films      &lt;list&gt; &lt;\"A New Hope\", \"The Empire Strikes Back\", \"Return of the J…\n$ vehicles   &lt;list&gt; &lt;\"Snowspeeder\", \"Imperial Speeder Bike\"&gt;, &lt;&gt;, &lt;&gt;, &lt;&gt;, \"Imp…\n$ starships  &lt;list&gt; &lt;\"X-wing\", \"Imperial shuttle\"&gt;, &lt;&gt;, &lt;&gt;, \"TIE Advanced x1\",…"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#spalten-auswählen",
    "href": "slides/slide-03-dplyr.html#spalten-auswählen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Spalten auswählen",
    "text": "Spalten auswählen\n\nselect(Datensatz, Spalten)"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#spalten-auswählen-1",
    "href": "slides/slide-03-dplyr.html#spalten-auswählen-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Spalten auswählen",
    "text": "Spalten auswählen\n\nselect(starwars, name, mass)\n\n\n\n# A tibble: 87 × 2\n   name                mass\n   &lt;chr&gt;              &lt;dbl&gt;\n 1 Luke Skywalker        77\n 2 C-3PO                 75\n 3 R2-D2                 32\n 4 Darth Vader          136\n 5 Leia Organa           49\n 6 Owen Lars            120\n 7 Beru Whitesun Lars    75\n 8 R5-D4                 32\n 9 Biggs Darklighter     84\n10 Obi-Wan Kenobi        77\n# ℹ 77 more rows"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#spalten-auswählen-2",
    "href": "slides/slide-03-dplyr.html#spalten-auswählen-2",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Spalten auswählen",
    "text": "Spalten auswählen\n\nselect(starwars, -height)\n\n\n\n# A tibble: 87 × 13\n   name   mass hair_color skin_color eye_color birth_year sex   gender homeworld\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    \n 1 Luke…    77 blond      fair       blue            19   male  mascu… Tatooine \n 2 C-3PO    75 &lt;NA&gt;       gold       yellow         112   none  mascu… Tatooine \n 3 R2-D2    32 &lt;NA&gt;       white, bl… red             33   none  mascu… Naboo    \n 4 Dart…   136 none       white      yellow          41.9 male  mascu… Tatooine \n 5 Leia…    49 brown      light      brown           19   fema… femin… Alderaan \n 6 Owen…   120 brown, gr… light      blue            52   male  mascu… Tatooine \n 7 Beru…    75 brown      light      blue            47   fema… femin… Tatooine \n 8 R5-D4    32 &lt;NA&gt;       white, red red             NA   none  mascu… Tatooine \n 9 Bigg…    84 black      light      brown           24   male  mascu… Tatooine \n10 Obi-…    77 auburn, w… fair       blue-gray       57   male  mascu… Stewjon  \n# ℹ 77 more rows\n# ℹ 4 more variables: species &lt;chr&gt;, films &lt;list&gt;, vehicles &lt;list&gt;,\n#   starships &lt;list&gt;"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#spalten-auswählen-3",
    "href": "slides/slide-03-dplyr.html#spalten-auswählen-3",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Spalten auswählen",
    "text": "Spalten auswählen\n\nselect(starwars, name:mass)\n\n\n\n# A tibble: 87 × 3\n   name               height  mass\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt;\n 1 Luke Skywalker        172    77\n 2 C-3PO                 167    75\n 3 R2-D2                  96    32\n 4 Darth Vader           202   136\n 5 Leia Organa           150    49\n 6 Owen Lars             178   120\n 7 Beru Whitesun Lars    165    75\n 8 R5-D4                  97    32\n 9 Biggs Darklighter     183    84\n10 Obi-Wan Kenobi        182    77\n# ℹ 77 more rows"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#spalten-auswählen-4",
    "href": "slides/slide-03-dplyr.html#spalten-auswählen-4",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Spalten auswählen",
    "text": "Spalten auswählen\n\nselect(starwars, starts_with(\"h\"))\n\n\n\n# A tibble: 87 × 3\n   height hair_color    homeworld\n    &lt;int&gt; &lt;chr&gt;         &lt;chr&gt;    \n 1    172 blond         Tatooine \n 2    167 &lt;NA&gt;          Tatooine \n 3     96 &lt;NA&gt;          Naboo    \n 4    202 none          Tatooine \n 5    150 brown         Alderaan \n 6    178 brown, grey   Tatooine \n 7    165 brown         Tatooine \n 8     97 &lt;NA&gt;          Tatooine \n 9    183 black         Tatooine \n10    182 auburn, white Stewjon  \n# ℹ 77 more rows"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#spalten-auswählen-5",
    "href": "slides/slide-03-dplyr.html#spalten-auswählen-5",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Spalten auswählen",
    "text": "Spalten auswählen\n\nselect(starwars, ends_with(\"color\"))\n\n\n\n# A tibble: 87 × 3\n   hair_color    skin_color  eye_color\n   &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;    \n 1 blond         fair        blue     \n 2 &lt;NA&gt;          gold        yellow   \n 3 &lt;NA&gt;          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 &lt;NA&gt;          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# ℹ 77 more rows\n\n\n\nSelection helpers: contains(\"s\"), where(is.numeric), everything()"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-spalte-verschieben",
    "href": "slides/slide-03-dplyr.html#eine-spalte-verschieben",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine Spalte verschieben",
    "text": "Eine Spalte verschieben\n\nrelocate(Datensatz, Spalten_zu_verschieben)"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-spalte-verschieben-1",
    "href": "slides/slide-03-dplyr.html#eine-spalte-verschieben-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine Spalte verschieben",
    "text": "Eine Spalte verschieben\n\n\n\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n\n\n\n\nrelocate(starwars, mass)\n\n\n\n# A tibble: 87 × 14\n    mass name     height hair_color skin_color eye_color birth_year sex   gender\n   &lt;dbl&gt; &lt;chr&gt;     &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1    77 Luke Sk…    172 blond      fair       blue            19   male  mascu…\n 2    75 C-3PO       167 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3    32 R2-D2        96 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4   136 Darth V…    202 none       white      yellow          41.9 male  mascu…\n 5    49 Leia Or…    150 brown      light      brown           19   fema… femin…\n 6   120 Owen La…    178 brown, gr… light      blue            52   male  mascu…\n 7    75 Beru Wh…    165 brown      light      blue            47   fema… femin…\n 8    32 R5-D4        97 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9    84 Biggs D…    183 black      light      brown           24   male  mascu…\n10    77 Obi-Wan…    182 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-spalte-verschieben-2",
    "href": "slides/slide-03-dplyr.html#eine-spalte-verschieben-2",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine Spalte verschieben",
    "text": "Eine Spalte verschieben\n\nrelocate(starwars, mass, .before = height)\n\n\n\n# A tibble: 87 × 14\n   name      mass height hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;    &lt;dbl&gt;  &lt;int&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    77    172 blond      fair       blue            19   male  mascu…\n 2 C-3PO       75    167 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2       32     96 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…   136    202 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    49    150 brown      light      brown           19   fema… femin…\n 6 Owen La…   120    178 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    75    165 brown      light      blue            47   fema… femin…\n 8 R5-D4       32     97 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    84    183 black      light      brown           24   male  mascu…\n10 Obi-Wan…    77    182 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-spalte-umbenennen",
    "href": "slides/slide-03-dplyr.html#eine-spalte-umbenennen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine Spalte umbenennen",
    "text": "Eine Spalte umbenennen\n\nrename(Datensatz, neuer_name = alter_name)"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-spalte-umbenennen-1",
    "href": "slides/slide-03-dplyr.html#eine-spalte-umbenennen-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine Spalte umbenennen",
    "text": "Eine Spalte umbenennen\n\nrename(starwars, gewicht = mass)\n\n\n\n# A tibble: 87 × 14\n   name   height gewicht hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;   &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke …    172      77 blond      fair       blue            19   male  mascu…\n 2 C-3PO     167      75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2      96      32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth…    202     136 none       white      yellow          41.9 male  mascu…\n 5 Leia …    150      49 brown      light      brown           19   fema… femin…\n 6 Owen …    178     120 brown, gr… light      blue            52   male  mascu…\n 7 Beru …    165      75 brown      light      blue            47   fema… femin…\n 8 R5-D4      97      32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs…    183      84 black      light      brown           24   male  mascu…\n10 Obi-W…    182      77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-neue-spalte-erstellen",
    "href": "slides/slide-03-dplyr.html#eine-neue-spalte-erstellen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine neue Spalte erstellen",
    "text": "Eine neue Spalte erstellen\n\nmutate(Datensatz, neue_spalte = Wert_neuer_spalte)"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-neue-spalte-erstellen-1",
    "href": "slides/slide-03-dplyr.html#eine-neue-spalte-erstellen-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine neue Spalte erstellen",
    "text": "Eine neue Spalte erstellen\n\nmutate(starwars, height_m = height / 100)\n\n\n\n# A tibble: 87 × 15\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 6 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;, height_m &lt;dbl&gt;"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-neue-spalte-erstellen-2",
    "href": "slides/slide-03-dplyr.html#eine-neue-spalte-erstellen-2",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine neue Spalte erstellen",
    "text": "Eine neue Spalte erstellen\n\nmutate(\n  starwars,\n  height_m = height / 100,\n  .after = height\n)\n\n\n\n# A tibble: 87 × 15\n   name   height height_m  mass hair_color skin_color eye_color birth_year sex  \n   &lt;chr&gt;   &lt;int&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;\n 1 Luke …    172     1.72    77 blond      fair       blue            19   male \n 2 C-3PO     167     1.67    75 &lt;NA&gt;       gold       yellow         112   none \n 3 R2-D2      96     0.96    32 &lt;NA&gt;       white, bl… red             33   none \n 4 Darth…    202     2.02   136 none       white      yellow          41.9 male \n 5 Leia …    150     1.5     49 brown      light      brown           19   fema…\n 6 Owen …    178     1.78   120 brown, gr… light      blue            52   male \n 7 Beru …    165     1.65    75 brown      light      blue            47   fema…\n 8 R5-D4      97     0.97    32 &lt;NA&gt;       white, red red             NA   none \n 9 Biggs…    183     1.83    84 black      light      brown           24   male \n10 Obi-W…    182     1.82    77 auburn, w… fair       blue-gray       57   male \n# ℹ 77 more rows\n# ℹ 6 more variables: gender &lt;chr&gt;, homeworld &lt;chr&gt;, species &lt;chr&gt;,\n#   films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#mehrere-spalten-erstellen",
    "href": "slides/slide-03-dplyr.html#mehrere-spalten-erstellen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Mehrere Spalten erstellen",
    "text": "Mehrere Spalten erstellen\n\nmutate(\n  starwars,\n  height_m = height / 100,\n  bmi = mass / height_m^2,\n  .after = mass\n)\n\n\n\n# A tibble: 87 × 16\n   name   height  mass height_m   bmi hair_color skin_color eye_color birth_year\n   &lt;chr&gt;   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt;\n 1 Luke …    172    77     1.72  26.0 blond      fair       blue            19  \n 2 C-3PO     167    75     1.67  26.9 &lt;NA&gt;       gold       yellow         112  \n 3 R2-D2      96    32     0.96  34.7 &lt;NA&gt;       white, bl… red             33  \n 4 Darth…    202   136     2.02  33.3 none       white      yellow          41.9\n 5 Leia …    150    49     1.5   21.8 brown      light      brown           19  \n 6 Owen …    178   120     1.78  37.9 brown, gr… light      blue            52  \n 7 Beru …    165    75     1.65  27.5 brown      light      blue            47  \n 8 R5-D4      97    32     0.97  34.0 &lt;NA&gt;       white, red red             NA  \n 9 Biggs…    183    84     1.83  25.1 black      light      brown           24  \n10 Obi-W…    182    77     1.82  23.2 auburn, w… fair       blue-gray       57  \n# ℹ 77 more rows\n# ℹ 7 more variables: sex &lt;chr&gt;, gender &lt;chr&gt;, homeworld &lt;chr&gt;, species &lt;chr&gt;,\n#   films &lt;list&gt;, vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#praktikum-spalten-transformation-mit-dplyr",
    "href": "slides/slide-03-dplyr.html#praktikum-spalten-transformation-mit-dplyr",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Praktikum: Spalten-Transformation mit {dplyr}",
    "text": "Praktikum: Spalten-Transformation mit {dplyr}\nprak-03a-spalten-abstimmung.qmd\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#the-pipe-1",
    "href": "slides/slide-03-dplyr.html#the-pipe-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "The Pipe |>",
    "text": "The Pipe |&gt;\n\nfilter: mass &lt; 300\nmutate: height_m, bmi\nselect: name, species, sex, bmi\narrange: desc(bmi)\n\n\n\narrange(select(mutate(filter(starwars, mass &lt; 300), height_m = height / 100, bmi = mass / height_m^2), name, species, sex, bmi), desc(bmi))\n\n\n\n# A tibble: 58 × 4\n   name             species        sex     bmi\n   &lt;chr&gt;            &lt;chr&gt;          &lt;chr&gt; &lt;dbl&gt;\n 1 Dud Bolt         Vulptereen     male   50.9\n 2 Yoda             Yoda's species male   39.0\n 3 Owen Lars        Human          male   37.9\n 4 IG-88            Droid          none   35  \n 5 R2-D2            Droid          none   34.7\n 6 Grievous         Kaleesh        male   34.1\n 7 R5-D4            Droid          none   34.0\n 8 Jek Tono Porkins &lt;NA&gt;           &lt;NA&gt;   34.0\n 9 Darth Vader      Human          male   33.3\n10 Sebulba          Dug            male   31.9\n# ℹ 48 more rows"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#the-pipe-2",
    "href": "slides/slide-03-dplyr.html#the-pipe-2",
    "title": "Daten transformieren mit {dplyr}",
    "section": "The Pipe |>",
    "text": "The Pipe |&gt;\n\nfilter: mass &lt; 300\nmutate: height_m, bmi\nselect: name, species, sex, bmi\narrange: desc(bmi)\n\n\narrange(\n  select(\n    mutate(\n      filter(starwars, mass &lt; 300),\n      height_m = height / 100,\n      bmi = mass / height_m^2\n    ),\n    name, species, sex, bmi\n  ),\n  desc(bmi)\n)\n\n\nWir könnten das ganze durch Einrückungen zumindest etwas lesbarer gestalten.\nDas ist schon etwas besser, aber immer noch nicht sonderlich intuitiv zu lesen – und schliessen wir nur eine Klammer an der falschen Stelle oder vergessen sie gar ganz, fliegt uns der gesamte Code um die Ohren."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#the-pipe-3",
    "href": "slides/slide-03-dplyr.html#the-pipe-3",
    "title": "Daten transformieren mit {dplyr}",
    "section": "The Pipe |>",
    "text": "The Pipe |&gt;\n\ndf1 &lt;- filter(starwars, mass &lt; 300)\ndf2 &lt;- mutate(df1,\n  height_m = height / 100,\n  bmi = mass / height_m^2\n)\ndf3 &lt;- select(df2, name, species, sex, bmi)\narrange(df3, desc(bmi))\n\n\n\n\nstarwars |&gt;\n  filter(mass &lt; 300) |&gt;\n  mutate(\n    height_m = height / 100,\n    bmi = mass / height_m^2\n  ) |&gt;\n  select(name, species, sex, bmi) |&gt;\n  arrange(desc(bmi))\n\n\n\nNatürlich könnten wir die Schritte der Analyse auch einzeln durchgehen und jeweils einem neuen “Objekt” zuweisen.\nMit dem Pipe-Operator |&gt; können wir diese Schritte in einer logischen Lesereihenfolge ohne die Erstellung von redundanten Objekten durchführen.\nWährend beide Formen ihre Zeit und ihren Ort haben, erzeugt das Pipe im Allgemeinen Datenanalysecode, der einfacher zu schreiben und zu lesen ist."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#the-pipe-4",
    "href": "slides/slide-03-dplyr.html#the-pipe-4",
    "title": "Daten transformieren mit {dplyr}",
    "section": "The Pipe %>%",
    "text": "The Pipe %&gt;%\n\n\n\n\n\n\n\n\nCtrl + ⇧ + M = |&gt;\n\n\nDer ursprüngliche Pipe-Operator wurde zuerst im Paket magrittr implementiert und in tidyverse integriert.\nFür unsere Zwecke sind base und magrittr gleichwertig. Siehe Unterschiede hier https://www.tidyverse.org/blog/2023/04/base-vs-magrittr-pipe/"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#section-2",
    "href": "slides/slide-03-dplyr.html#section-2",
    "title": "Daten transformieren mit {dplyr}",
    "section": "",
    "text": "Die native Pipe ist nun Teil von R und kann in Global Options ausgewählt werden."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#pipe-vs-layer",
    "href": "slides/slide-03-dplyr.html#pipe-vs-layer",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Pipe vs Layer",
    "text": "Pipe vs Layer\n\n|&gt; in {dplyr} pipelines: die Ausgabe der vorherigen Codezeile als erste Eingabe der nächsten Codezeile\n\n\n\n+ in ggplot2 für Schichten: wir erstellen Schichten die durch + getrennt sind"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#praktikum-dplyr-und",
    "href": "slides/slide-03-dplyr.html#praktikum-dplyr-und",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Praktikum: {dplyr} und |>",
    "text": "Praktikum: {dplyr} und |&gt;\nprak-03a-spalten-abstimmung.qmd\n −+ 10:00"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#daten-1",
    "href": "slides/slide-03-dplyr.html#daten-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten",
    "text": "Daten\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\nDie wichtigste gruppierte Operation ist eine Zusammenfassung. Wenn die Zusammenfassung zur Berechnung einer einzigen zusammenfassenden Statistik verwendet wird, reduziert sie den dataframe auf eine einzige Zeile für jede Gruppe."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#daten-zusammenfassen",
    "href": "slides/slide-03-dplyr.html#daten-zusammenfassen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten zusammenfassen",
    "text": "Daten zusammenfassen\n\npenguins |&gt;\n  summarise(\n    average_weight = mean(body_mass_g, na.rm = TRUE)\n  )\n\n\nMit der Funktion summarise() wird ein neuer Dataframe erstellt. Der Dataframe enthält eine Spalte für jede angegebene zusammenfassende Statistik. Dieser enthält eine Zeile für jede Kombination von Gruppierungsvariablen."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#daten-zusammenfassen-1",
    "href": "slides/slide-03-dplyr.html#daten-zusammenfassen-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten zusammenfassen",
    "text": "Daten zusammenfassen\n\npenguins |&gt;\n  summarise(\n    average_weight = mean(body_mass_g, na.rm = TRUE)\n  )\n\n# A tibble: 1 × 1\n  average_weight\n           &lt;dbl&gt;\n1          4202."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#daten-gruppieren",
    "href": "slides/slide-03-dplyr.html#daten-gruppieren",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten gruppieren",
    "text": "Daten gruppieren\n\ngroup_by(Datensatz, Gruppierungsvariablen)"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#daten-gruppieren-1",
    "href": "slides/slide-03-dplyr.html#daten-gruppieren-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten gruppieren",
    "text": "Daten gruppieren\n\nsummary(penguins)\n\n      species          island    bill_length_mm  bill_depth_mm  \n Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n                                 Mean   :43.92   Mean   :17.15  \n                                 3rd Qu.:48.50   3rd Qu.:18.70  \n                                 Max.   :59.60   Max.   :21.50  \n                                 NA's   :2       NA's   :2      \n flipper_length_mm  body_mass_g       sex           year     \n Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n 1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n Median :197.0     Median :4050   NA's  : 11   Median :2008  \n Mean   :200.9     Mean   :4202                Mean   :2008  \n 3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n Max.   :231.0     Max.   :6300                Max.   :2009  \n NA's   :2         NA's   :2"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#daten-gruppieren-3",
    "href": "slides/slide-03-dplyr.html#daten-gruppieren-3",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Daten gruppieren",
    "text": "Daten gruppieren\n\npenguins |&gt;\n  group_by(species)\n\n\n\n# A tibble: 344 × 8\n# Groups:   species [3]\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\nDie Funktion group_by() wird genutzt um einen existierenden Dataframe in einen gruppierten Dataframe zu konvertieren, sodass die folgenden Anweisungen auf der Ebene der Gruppen angewandt werden."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-gruppe-zusammenfassen",
    "href": "slides/slide-03-dplyr.html#eine-gruppe-zusammenfassen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine Gruppe zusammenfassen",
    "text": "Eine Gruppe zusammenfassen\n\npenguins |&gt;\n  group_by(species) |&gt;\n  summarise(\n    average_weight = mean(body_mass_g, na.rm = TRUE)\n  )\n\n\n\n# A tibble: 3 × 2\n  species   average_weight\n  &lt;fct&gt;              &lt;dbl&gt;\n1 Adelie             3701.\n2 Chinstrap          3733.\n3 Gentoo             5076."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-gruppe-zusammenfassen-1",
    "href": "slides/slide-03-dplyr.html#eine-gruppe-zusammenfassen-1",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine Gruppe zusammenfassen",
    "text": "Eine Gruppe zusammenfassen\n\npenguins |&gt;\n  summarise(\n    average_weight = mean(body_mass_g, na.rm = TRUE),\n    .by = species\n  )\n\n\n\n# A tibble: 3 × 2\n  species   average_weight\n  &lt;fct&gt;              &lt;dbl&gt;\n1 Adelie             3701.\n2 Gentoo             5076.\n3 Chinstrap          3733.\n\n\n\nWir wollen wissen, wie gross ist jede Species im Durschnitt."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#eine-gruppe-mehrfach-zusammenfassen",
    "href": "slides/slide-03-dplyr.html#eine-gruppe-mehrfach-zusammenfassen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Eine Gruppe mehrfach zusammenfassen",
    "text": "Eine Gruppe mehrfach zusammenfassen\n\npenguins |&gt;\n  group_by(species) |&gt;\n  summarise(\n    average_weight = mean(body_mass_g, na.rm = TRUE),\n    average_flipper_length = mean(flipper_length_mm, na.rm = TRUE)\n  )\n\n\n\n# A tibble: 3 × 3\n  species   average_weight average_flipper_length\n  &lt;fct&gt;              &lt;dbl&gt;                  &lt;dbl&gt;\n1 Adelie             3701.                   190.\n2 Chinstrap          3733.                   196.\n3 Gentoo             5076.                   217.\n\n\n\nIhr könnt in einem einzigen summarise() mehrere Zusammenfassungen erstellen."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#mehrere-gruppen-zusammenfassen",
    "href": "slides/slide-03-dplyr.html#mehrere-gruppen-zusammenfassen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Mehrere Gruppen zusammenfassen",
    "text": "Mehrere Gruppen zusammenfassen\n\npenguins |&gt;\n  group_by(species, island) |&gt;\n  summarise(average_weight = mean(body_mass_g, na.rm = TRUE))\n\n\n\n# A tibble: 5 × 3\n# Groups:   species [3]\n  species   island    average_weight\n  &lt;fct&gt;     &lt;fct&gt;              &lt;dbl&gt;\n1 Adelie    Biscoe             3710.\n2 Adelie    Dream              3688.\n3 Adelie    Torgersen          3706.\n4 Chinstrap Dream              3733.\n5 Gentoo    Biscoe             5076.\n\n\n\nWir wollen wissen, wie gross ist jede Species auf jeder Insel im Durschnitt."
  },
  {
    "objectID": "slides/slide-03-dplyr.html#frequenzen",
    "href": "slides/slide-03-dplyr.html#frequenzen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Frequenzen",
    "text": "Frequenzen\n\n\n\npenguins |&gt;\n  group_by(species) |&gt;\n  summarise(n = n())\n\n\n\n# A tibble: 3 × 2\n  species       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n\n\n\n\n\npenguins |&gt; count(species)\n\n\n\n# A tibble: 3 × 2\n  species       n\n  &lt;fct&gt;     &lt;int&gt;\n1 Adelie      152\n2 Chinstrap    68\n3 Gentoo      124\n\n\n\n\n\ngroup_by() + summarise() + n() ↔︎️ count()\n\n\n\nMost of data science is counting, and sometimes dividing.\n– Hadley Wickham\n\n\n\nEs gibt verschiedene nützliche Zusammenfassungen, aber eine sehr nützliche Zusammenfassung ist n(), die die Anzahl der Zeilen in jeder Gruppe zurückgibt.\nMeans und Counts können dich in Data Science überraschend weit bringen!"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#praktikum-03b-gruppen-zusammenfassen",
    "href": "slides/slide-03-dplyr.html#praktikum-03b-gruppen-zusammenfassen",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Praktikum 03b: Gruppen zusammenfassen",
    "text": "Praktikum 03b: Gruppen zusammenfassen\nprak-3b-groups-penguins.qmd\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#praktikum-03c-gebäude-und-energiequelle",
    "href": "slides/slide-03-dplyr.html#praktikum-03c-gebäude-und-energiequelle",
    "title": "Daten transformieren mit {dplyr}",
    "section": "Praktikum 03c: Gebäude und Energiequelle",
    "text": "Praktikum 03c: Gebäude und Energiequelle\nprak-03c-dplyr-gebaeude.qmd\n −+ 20:00"
  },
  {
    "objectID": "slides/slide-03-dplyr.html#section-4",
    "href": "slides/slide-03-dplyr.html#section-4",
    "title": "Daten transformieren mit {dplyr}",
    "section": "",
    "text": "Slides created via revealjs and Quarto.\nAccess slides as PDF.\nAll material is licensed under Creative Commons Attribution Share Alike 4.0 International."
  },
  {
    "objectID": "slides/slide-05-forcats.html#beispiel",
    "href": "slides/slide-05-forcats.html#beispiel",
    "title": "Daten rekodieren",
    "section": "Beispiel",
    "text": "Beispiel\n\ncat_lovers &lt;- read_csv(\"data/cat-lovers.csv\")\n\n\n\n\n\n\n\n\n\n\nname\nnumber_of_cats\nhandedness\n\n\n\n\nBernice Warren\n0\nleft\n\n\nWoodrow Stone\n0\nleft\n\n\nWillie Bass\n1\nleft\n\n\nTyrone Estrada\n3\nleft\n\n\nAlex Daniels\n3\nleft\n\n\nJane Bates\n2\nleft\n\n\nLatoya Simpson\n1\nleft\n\n\nDarin Woods\n1\nleft\n\n\nAgnes Cobb\n0\nleft\n\n\nTabitha Grant\n0\nleft\n\n\nPerry Cross\n0\nleft\n\n\nWanda Silva\n0\nleft\n\n\nAlicia Sims\n1\nleft\n\n\nEmily Logan\n3\nright\n\n\nWoodrow Elliott\n3\nright\n\n\nBrent Copeland\n2\nright\n\n\nPedro Carlson\n1\nright\n\n\nPatsy Luna\n1\nright\n\n\nBrett Robbins\n0\nright\n\n\nOliver George\n0\nright\n\n\nCalvin Perry\n1\nright\n\n\nLora Gutierrez\n1\nright\n\n\nCharlotte Sparks\n0\nright\n\n\nEarl Mack\n0\nright\n\n\nLeslie Wade\n4\nright\n\n\nSantiago Barker\n0\nright\n\n\nJose Bell\n0\nright\n\n\nLynda Smith\n0\nright\n\n\nBradford Marshall\n0\nright\n\n\nIrving Miller\n0\nright\n\n\nCaroline Simpson\n0\nright\n\n\nFrances Welch\n0\nright\n\n\nMelba Jenkins\n0\nright\n\n\nVeronica Morales\n0\nright\n\n\nJuanita Cunningham\n0\nright\n\n\nMaurice Howard\n0\nright\n\n\nTeri Pierce\n0\nright\n\n\nPhil Franklin\n0\nright\n\n\nJan Zimmerman\n0\nright\n\n\nLeslie Price\n0\nright\n\n\nBessie Patterson\n0\nright\n\n\nEthel Wolfe\n0\nright\n\n\nNaomi Wright\n1\nright\n\n\nSadie Frank\n3\nright\n\n\nLonnie Cannon\n3\nright\n\n\nTony Garcia\n2\nright\n\n\nDarla Newton\n1\nright\n\n\nGinger Clark\n1.5 - honestly I think one of my cats is half human\nright\n\n\nLionel Campbell\n0\nright\n\n\nFlorence Klein\n0\nright\n\n\nHarriet Leonard\n1\nright\n\n\nTerrence Harrington\n0\nright\n\n\nTravis Garner\n1\nright\n\n\nDoug Bass\nthree\nright\n\n\nPat Norris\n1\nright\n\n\nDawn Young\n1\nambidextrous\n\n\nShari Alvarez\n1\nambidextrous\n\n\nTamara Robinson\n0\nambidextrous\n\n\nMegan Morgan\n0\nambidextrous\n\n\nKara Obrien\n2\nambidextrous\n\n\n\n\n\n\n\n\n\nIn einer Umfrage wurden die Befragten nach Namen und Anzahl der Katzen gefragt."
  },
  {
    "objectID": "slides/slide-05-forcats.html#durschnittliche-anzahl",
    "href": "slides/slide-05-forcats.html#durschnittliche-anzahl",
    "title": "Daten rekodieren",
    "section": "Durschnittliche Anzahl",
    "text": "Durschnittliche Anzahl\n\ncat_lovers |&gt;\n  summarise(mean_cats = mean(number_of_cats))\n\n\n\n# A tibble: 1 × 1\n  mean_cats\n      &lt;dbl&gt;\n1        NA\n\n\n\nWarum funktioniert es nicht?!\n\n\n\ncat_lovers |&gt;\n  summarise(mean_cats = mean(number_of_cats, na.rm = TRUE))\n\n\n\n# A tibble: 1 × 1\n  mean_cats\n      &lt;dbl&gt;\n1        NA\n\n\n\n\nWarum funktioniert es immer noch nicht?!"
  },
  {
    "objectID": "slides/slide-05-forcats.html#einatmen-und-sich-die-daten-anschauen",
    "href": "slides/slide-05-forcats.html#einatmen-und-sich-die-daten-anschauen",
    "title": "Daten rekodieren",
    "section": "Einatmen… und sich die Daten Anschauen",
    "text": "Einatmen… und sich die Daten Anschauen\n\nWelchen Typ hat die Variable number_of_cats?\n\n\n\ncat_lovers |&gt;\n  glimpse()\n\n\n\nRows: 60\nColumns: 3\n$ name           &lt;chr&gt; \"Bernice Warren\", \"Woodrow Stone\", \"Willie Bass\", \"Tyro…\n$ number_of_cats &lt;chr&gt; \"0\", \"0\", \"1\", \"3\", \"3\", \"2\", \"1\", \"1\", \"0\", \"0\", \"0\", …\n$ handedness     &lt;chr&gt; \"left\", \"left\", \"left\", \"left\", \"left\", \"left\", \"left\",…"
  },
  {
    "objectID": "slides/slide-05-forcats.html#noch-einmal-einen-blick-darauf-werfen",
    "href": "slides/slide-05-forcats.html#noch-einmal-einen-blick-darauf-werfen",
    "title": "Daten rekodieren",
    "section": "Noch Einmal einen Blick darauf Werfen",
    "text": "Noch Einmal einen Blick darauf Werfen\n\ncat_lovers |&gt; count(number_of_cats)\n\n\n\n# A tibble: 7 × 2\n  number_of_cats                                          n\n  &lt;chr&gt;                                               &lt;int&gt;\n1 0                                                      32\n2 1                                                      15\n3 1.5 - honestly I think one of my cats is half human     1\n4 2                                                       4\n5 3                                                       6\n6 4                                                       1\n7 three                                                   1"
  },
  {
    "objectID": "slides/slide-05-forcats.html#manchmal-musst-du-auf-deine-befragten-aufpassen",
    "href": "slides/slide-05-forcats.html#manchmal-musst-du-auf-deine-befragten-aufpassen",
    "title": "Daten rekodieren",
    "section": "Manchmal musst Du auf deine Befragten aufpassen",
    "text": "Manchmal musst Du auf deine Befragten aufpassen\n\n\ncat_lovers |&gt;\n  mutate(number_of_cats = case_when(\n    number_of_cats == \"1.5 - honestly I think one of my cats is half human\" ~ 2,\n    number_of_cats == \"three\" ~ 3,\n    .default = as.numeric(number_of_cats)\n  )) |&gt;\n  summarise(mean_cats = mean(number_of_cats))\n\n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `number_of_cats = case_when(...)`.\nCaused by warning in `vec_case_when()`:\n! NAs introduced by coercion\n\n\n# A tibble: 1 × 1\n  mean_cats\n      &lt;dbl&gt;\n1     0.833"
  },
  {
    "objectID": "slides/slide-05-forcats.html#immer-datentypen-respektieren",
    "href": "slides/slide-05-forcats.html#immer-datentypen-respektieren",
    "title": "Daten rekodieren",
    "section": "Immer Datentypen Respektieren!",
    "text": "Immer Datentypen Respektieren!\n\ncat_lovers |&gt;\n  mutate(\n    number_of_cats = case_when(\n      number_of_cats == \"1.5 - honestly I think one of my cats is half human\" ~ \"2\",\n      number_of_cats == \"three\" ~ \"3\",\n      .default = number_of_cats\n    ),\n    number_of_cats = as.numeric(number_of_cats)\n  ) |&gt;\n  summarise(mean_cats = mean(number_of_cats))\n\n\n\n# A tibble: 1 × 1\n  mean_cats\n      &lt;dbl&gt;\n1     0.833"
  },
  {
    "objectID": "slides/slide-05-forcats.html#jetzt-wo-wir-wissen-was-wir-tun",
    "href": "slides/slide-05-forcats.html#jetzt-wo-wir-wissen-was-wir-tun",
    "title": "Daten rekodieren",
    "section": "Jetzt, wo wir wissen, was wir tun…",
    "text": "Jetzt, wo wir wissen, was wir tun…\n\ncat_lovers &lt;- cat_lovers |&gt;\n  mutate(\n    number_of_cats = case_when(\n      number_of_cats == \"1.5 - honestly I think one of my cats is half human\" ~ \"2\",\n      number_of_cats == \"three\" ~ \"3\",\n      .default = number_of_cats\n    ),\n    number_of_cats = as.numeric(number_of_cats)\n  )"
  },
  {
    "objectID": "slides/slide-05-forcats.html#moral-der-geschichte",
    "href": "slides/slide-05-forcats.html#moral-der-geschichte",
    "title": "Daten rekodieren",
    "section": "Moral der Geschichte",
    "text": "Moral der Geschichte\n\n\nWenn sich Deine Daten nicht so verhalten, wie du es erwartest, könnte ein type coercion beim Einlesen der Daten die Ursache sein.\nGehe hinein, untersuche deine Daten, wende den Fix an, speichere deine Daten und lebe glücklich bis ans Ende deiner Tage.\n\n\n\nSotheby’s/AFP/Getty Images"
  },
  {
    "objectID": "slides/slide-05-forcats.html#datentypen-in-r",
    "href": "slides/slide-05-forcats.html#datentypen-in-r",
    "title": "Daten rekodieren",
    "section": "Datentypen in R",
    "text": "Datentypen in R\nAtomic vectors\n\n\nlogical: TRUE, FALSE\n\n\n\n\ncharacter: “Hallo”, “a”, “TRUE”\n\n\n\n\ninteger: 2L, 34L, 0L\n\n\n\n\ndouble: 1, 2.4, pi\n\n\n\nWie das Objekt im Speicher abgelegt wird"
  },
  {
    "objectID": "slides/slide-05-forcats.html#datentypen-in-r-1",
    "href": "slides/slide-05-forcats.html#datentypen-in-r-1",
    "title": "Daten rekodieren",
    "section": "Datentypen in R",
    "text": "Datentypen in R\ntypeof() → wie R das Objekt speichert\n\n\n\nlogical (TRUE/FALSE)\n\ntypeof(TRUE)\n\n[1] \"logical\"\n\n\n\ntypeof(c(TRUE, FALSE))\n\n[1] \"logical\"\n\n\n\n\n\ncharacter (Text)\n\ntypeof(\"Hallo\")\n\n[1] \"character\"\n\n\n\ntypeof(c(\"a\", \"aa\"))\n\n[1] \"character\"\n\n\n\n\n\n\n\ndouble (floating point)\n\ntypeof(3.56)\n\n[1] \"double\"\n\n\n\ntypeof(c(4, 3))\n\n[1] \"double\"\n\n\n\n\n\ninteger (Ganzzahl)\n\ntypeof(4L)\n\n[1] \"integer\"\n\n\n\ntypeof(1:4)\n\n[1] \"integer\""
  },
  {
    "objectID": "slides/slide-05-forcats.html#expliziter-vs.-impliziter-typenzwang",
    "href": "slides/slide-05-forcats.html#expliziter-vs.-impliziter-typenzwang",
    "title": "Daten rekodieren",
    "section": "Expliziter vs. Impliziter Typenzwang",
    "text": "Expliziter vs. Impliziter Typenzwang\n\n\nExplicit coercion as.logical(), as.numeric(), as.integer(), as.double(), as.character().\n\nx &lt;- c(TRUE, FALSE)\nas.character(x)\n\n\n\n[1] \"TRUE\"  \"FALSE\"\n\n\nImplicit coercion z. B. R konvertiert Variablen gemischter Typen in einen einzelnen Typ.\n\nc(15, \"Danke\")\n\n\n\n[1] \"15\"    \"Danke\"\n\n\n\nc(3L, pi)\n\n\n\n[1] 3.000000 3.141593\n\n\n\n\n… und das ist nicht immer eine gute Sache!"
  },
  {
    "objectID": "slides/slide-05-forcats.html#praktikum-type-coercion",
    "href": "slides/slide-05-forcats.html#praktikum-type-coercion",
    "title": "Daten rekodieren",
    "section": "Praktikum: Type Coercion",
    "text": "Praktikum: Type Coercion\nprak-05a-type-coercion.qmd\nWelcher Typ sind die angegebenenen Vektoren?"
  },
  {
    "objectID": "slides/slide-05-forcats.html#truefalse-if_else",
    "href": "slides/slide-05-forcats.html#truefalse-if_else",
    "title": "Daten rekodieren",
    "section": "TRUE/FALSE: if_else()",
    "text": "TRUE/FALSE: if_else()\nSchnabellänge kategorisieren: “überdurchschnittlich”, “unterdurchschnittlich”\n\n\npenguins |&gt;\n  summarise(median_bill_length = median(bill_length_mm, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  median_bill_length\n               &lt;dbl&gt;\n1               44.4"
  },
  {
    "objectID": "slides/slide-05-forcats.html#truefalse-if_else-1",
    "href": "slides/slide-05-forcats.html#truefalse-if_else-1",
    "title": "Daten rekodieren",
    "section": "TRUE/FALSE: if_else()",
    "text": "TRUE/FALSE: if_else()\nif_else(stimmt_das, das_passiert, sonst_das_passiert)\n\n\npenguins |&gt;\n  mutate(\n    bl_cat = if_else(bill_length_mm &lt; 44.45, \"unterdurchschnittlich\", \"überdurchschnittlich\")\n  ) |&gt;\n  count(bl_cat)\n\n\n\n# A tibble: 3 × 2\n  bl_cat                    n\n  &lt;chr&gt;                 &lt;int&gt;\n1 unterdurchschnittlich   171\n2 überdurchschnittlich    171\n3 &lt;NA&gt;                      2"
  },
  {
    "objectID": "slides/slide-05-forcats.html#truefalse-if_else-2",
    "href": "slides/slide-05-forcats.html#truefalse-if_else-2",
    "title": "Daten rekodieren",
    "section": "TRUE/FALSE: if_else()",
    "text": "TRUE/FALSE: if_else()\nif_else(stimmt_das, das_passiert, sonst_das_passiert, NA_so_behandeln)\n\n\npenguins |&gt;\n  mutate(\n    bl_cat =\n      if_else(\n        bill_length_mm &lt; 44.45, \"unterdurchschnittlich\", \"überdurchschnittlich\", missing = \"unbekannt\"\n      )\n  ) |&gt;\n  count(bl_cat)\n\n\n\n# A tibble: 3 × 2\n  bl_cat                    n\n  &lt;chr&gt;                 &lt;int&gt;\n1 unbekannt                 2\n2 unterdurchschnittlich   171\n3 überdurchschnittlich    171"
  },
  {
    "objectID": "slides/slide-05-forcats.html#mehrere-bedingungen-case_when-1",
    "href": "slides/slide-05-forcats.html#mehrere-bedingungen-case_when-1",
    "title": "Daten rekodieren",
    "section": "Mehrere Bedingungen: case_when()",
    "text": "Mehrere Bedingungen: case_when()\nSchnabellänge kategorisieren: short, medium, long\n\n\n\npenguins |&gt; \n  select(bill_length_mm) |&gt; \n  summary()\n\n\n bill_length_mm \n Min.   :32.10  \n 1st Qu.:39.23  \n Median :44.45  \n Mean   :43.92  \n 3rd Qu.:48.50  \n Max.   :59.60  \n NA's   :2"
  },
  {
    "objectID": "slides/slide-05-forcats.html#mehrere-bedingungen-case_when-2",
    "href": "slides/slide-05-forcats.html#mehrere-bedingungen-case_when-2",
    "title": "Daten rekodieren",
    "section": "Mehrere Bedingungen: case_when()",
    "text": "Mehrere Bedingungen: case_when()\n\npenguins |&gt;\n  mutate(\n    bl_cat = case_when(\n      is.na(bill_length_mm) ~ NA,\n      bill_length_mm &lt; 39.2 ~ \"short\",\n      between(bill_length_mm, 39.2, 48.5) ~ \"medium\",\n      .default = \"long\"\n    )\n  ) |&gt;\n  count(bl_cat)\n\n\n\n# A tibble: 4 × 2\n  bl_cat     n\n  &lt;chr&gt;  &lt;int&gt;\n1 long      84\n2 medium   175\n3 short     83\n4 &lt;NA&gt;       2"
  },
  {
    "objectID": "slides/slide-05-forcats.html#praktikum-daten-rekodieren",
    "href": "slides/slide-05-forcats.html#praktikum-daten-rekodieren",
    "title": "Daten rekodieren",
    "section": "Praktikum: Daten rekodieren",
    "text": "Praktikum: Daten rekodieren\nprak-05b-cond-mutate.qmd"
  },
  {
    "objectID": "slides/slide-05-forcats.html#datenstrukturen-1",
    "href": "slides/slide-05-forcats.html#datenstrukturen-1",
    "title": "Daten rekodieren",
    "section": "Datenstrukturen",
    "text": "Datenstrukturen\n\n\n\n\n\nclass() → wie sich das Objekt verhält\n\n\n\nVektoren sind wie Lego-Bausteine. Wir kleben sie zusammen, um kompliziertere Konstrukte zu bauen, z. B. Darstellungen von Daten.\nDas Attribut class bezieht sich auf die S3-Klasse eines Objekts, die sein Verhalten bestimmt. Ihr müsst euch keine Gedanken darüber machen, was S3-Klassen wirklich bedeuten, aber ihr könnt hier mehr darüber lesen, wenn ihr neugierig seid.\nWir werden nur einige Datenklassen behandeln, die für unsere Klasse wichtig sind. Diese sind: factors, dates, lists, dataframes."
  },
  {
    "objectID": "slides/slide-05-forcats.html#factors",
    "href": "slides/slide-05-forcats.html#factors",
    "title": "Daten rekodieren",
    "section": "Factors",
    "text": "Factors\n\\(\\rightarrow\\) Kategoriale Variablen: Character + Ganzzahl\n\n\n\n\n(x &lt;- c(\"BS\", \"MS\", \"PhD\", \"MS\"))\n\n[1] \"BS\"  \"MS\"  \"PhD\" \"MS\" \n\n\n\n\n\ntypeof(x)\n\n[1] \"character\"\n\n\n\n\n\nclass(x)\n\n[1] \"character\"\n\n\n\n\n\n\n(y &lt;- factor(x))\n\n[1] BS  MS  PhD MS \nLevels: BS MS PhD\n\n\n\n\n\ntypeof(y)\n\n[1] \"integer\"\n\n\n\n\n\nclass(y)\n\n[1] \"factor\"\n\n\n\n\n\nas.integer(y)\n\n[1] 1 2 3 2\n\n\n\n\n\nR verwendet factors, um kategoriale Variablen zu verarbeiten, also Variablen, die einen festen und bekannten Satz möglicher Werte haben.\nWir können uns factors wie Zeichen (level labels) und eine Ganzzahl (level numbers) zusammenkleben vorstellen."
  },
  {
    "objectID": "slides/slide-05-forcats.html#dates",
    "href": "slides/slide-05-forcats.html#dates",
    "title": "Daten rekodieren",
    "section": "Dates",
    "text": "Dates\nGanzezahl = Anzahl Tage seit Ursprung\n\n\n\n(y &lt;- as.Date(\"1990-01-01\"))\n\n\n\n[1] \"1990-01-01\"\n\n\n\n\ntypeof(y)\n\n\n\n[1] \"double\"\n\n\n\n\n\nclass(y)\n\n\n\n[1] \"Date\"\n\n\n\n\n\nas.integer(y)\n\n\n\n[1] 7305\n\n\n\n\n\nas.integer(y) / 365\n\n\n\n[1] 20.0137\n\n\n\n~ 20 Jahre nach dem 1970-01-01\n\n\n\n\n\n\n\n\nWir können uns Datumsangaben wie eine zusammengeklebte ganze Zahl (die Anzahl der Tage seit dem Ursprung, 1. Januar 1970) und eine ganze Zahl (der Ursprung) vorstellen.\nDates sind ein umfangreiches Thema, sie sehen auf den ersten Blick einfach aus, können aber komplex sein. Tidyverse verfügt über ein spezielles Package für die Arbeit mit Daten: lubridate."
  },
  {
    "objectID": "slides/slide-05-forcats.html#lists",
    "href": "slides/slide-05-forcats.html#lists",
    "title": "Daten rekodieren",
    "section": "Lists",
    "text": "Lists\nGenerische Vektorcontainers: Vektoren jeglicher Typ und Länge\n\nl &lt;- list(\n  x = 1:4,\n  y = c(\"Hallo\", \"hello\", \"salut\"),\n  z = c(TRUE, FALSE)\n)\nl\n\n\n\n$x\n[1] 1 2 3 4\n\n$y\n[1] \"Hallo\" \"hello\" \"salut\"\n\n$z\n[1]  TRUE FALSE"
  },
  {
    "objectID": "slides/slide-05-forcats.html#data-frames",
    "href": "slides/slide-05-forcats.html#data-frames",
    "title": "Daten rekodieren",
    "section": "Data Frames",
    "text": "Data Frames\nSpezielle Liste mit Vektoren gleicher Länge\n\n\n\n(df &lt;- data.frame(x = 1:2, y = 3:4))\n\n\n\n  x y\n1 1 3\n2 2 4\n\nclass(df)\n\n[1] \"data.frame\"\n\n\n\n\n\n(df &lt;- tibble(x = 1:2, y = 3:4))\n\n\n\n# A tibble: 2 × 2\n      x     y\n  &lt;int&gt; &lt;int&gt;\n1     1     3\n2     2     4\n\nclass(df)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\n\n\n\ndf |&gt;\n  pull(y)\n\n[1] 3 4\n\n\n\n\n\n\ndf$y\n\n[1] 3 4\n\n\n\n\n\nWir können uns Dataframes wie zusammengeklebte Vektoren gleicher Länge vorstellen.\n\nEin data frame ist eine spezielle Liste mit Vektoren gleicher Länge\nWenn wir die Funktion pull() verwenden, extrahieren wir einen Vektor aus dem Datenrahmen."
  },
  {
    "objectID": "slides/slide-05-forcats.html#daten",
    "href": "slides/slide-05-forcats.html#daten",
    "title": "Daten rekodieren",
    "section": "Daten",
    "text": "Daten\n\npenguins |&gt;\n  glimpse()\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\nDerzeit ist die year Variable bei penguins kontinuierlich von 2007 bis 2009. Es kann Situationen geben, in denen dies nicht das ist, was wir wollen, und wir es stattdessen in eine kategoriale Variable umwandeln möchten."
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-2",
    "href": "slides/slide-05-forcats.html#section-2",
    "title": "Daten rekodieren",
    "section": "",
    "text": "Code\npenguins |&gt;\n  ggplot(aes(x = species, fill = year)) +\n  geom_bar()\n\n\n\n\nWarning: The following aesthetics were dropped during statistical transformation: fill.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-3",
    "href": "slides/slide-05-forcats.html#section-3",
    "title": "Daten rekodieren",
    "section": "",
    "text": "penguins |&gt;\n  ggplot(aes(x = species, fill = factor(year))) +\n  geom_bar()"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-4",
    "href": "slides/slide-05-forcats.html#section-4",
    "title": "Daten rekodieren",
    "section": "",
    "text": "penguins |&gt;\n  mutate(year_factor = factor(year)) |&gt;\n  ggplot(aes(x = species, fill = year_factor)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\nfactor sorts levels alphabetically\nforcats::fct() uses in order of appearance\n\nSo can use: mutate(year_factor = fct(as.character(year)))"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-5",
    "href": "slides/slide-05-forcats.html#section-5",
    "title": "Daten rekodieren",
    "section": "",
    "text": "penguins |&gt;\n  mutate(\n    year_factor = factor(year),\n    species = fct_infreq(species)\n  ) |&gt;\n  ggplot(aes(x = species, fill = year_factor)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-6",
    "href": "slides/slide-05-forcats.html#section-6",
    "title": "Daten rekodieren",
    "section": "",
    "text": "penguins |&gt;\n  mutate(\n    year_factor = factor(year),\n    species = fct_infreq(species),\n    species = fct_rev(species)\n  ) |&gt;\n  ggplot(aes(x = species, fill = year_factor)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-7",
    "href": "slides/slide-05-forcats.html#section-7",
    "title": "Daten rekodieren",
    "section": "",
    "text": "penguins |&gt;\n  ggplot(aes(x = species, y = bill_depth_mm, fill = species)) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-8",
    "href": "slides/slide-05-forcats.html#section-8",
    "title": "Daten rekodieren",
    "section": "",
    "text": "penguins |&gt;\n  mutate(\n    species = fct_reorder(species, bill_depth_mm)\n  ) |&gt;\n  ggplot(aes(x = species, y = bill_depth_mm, fill = species)) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-10",
    "href": "slides/slide-05-forcats.html#section-10",
    "title": "Daten rekodieren",
    "section": "",
    "text": "starwars |&gt; count(species, sort = TRUE)\n\n\n\n# A tibble: 38 × 2\n   species      n\n   &lt;chr&gt;    &lt;int&gt;\n 1 Human       35\n 2 Droid        6\n 3 &lt;NA&gt;         4\n 4 Gungan       3\n 5 Kaminoan     2\n 6 Mirialan     2\n 7 Twi'lek      2\n 8 Wookiee      2\n 9 Zabrak       2\n10 Aleena       1\n# ℹ 28 more rows"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-11",
    "href": "slides/slide-05-forcats.html#section-11",
    "title": "Daten rekodieren",
    "section": "",
    "text": "starwars |&gt;\n  mutate(species = fct_lump(species, n = 2)) |&gt;\n  count(species)\n\n\n\n# A tibble: 4 × 2\n  species     n\n  &lt;fct&gt;   &lt;int&gt;\n1 Droid       6\n2 Human      35\n3 Other      42\n4 &lt;NA&gt;        4"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-12",
    "href": "slides/slide-05-forcats.html#section-12",
    "title": "Daten rekodieren",
    "section": "",
    "text": "starwars |&gt;\n  mutate(\n    species = fct_lump(species, n = 2),\n    species = fct_relevel(species, \"Human\")\n  ) |&gt;\n  count(species)\n\n\n\n# A tibble: 4 × 2\n  species     n\n  &lt;fct&gt;   &lt;int&gt;\n1 Human      35\n2 Droid       6\n3 Other      42\n4 &lt;NA&gt;        4"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-13",
    "href": "slides/slide-05-forcats.html#section-13",
    "title": "Daten rekodieren",
    "section": "",
    "text": "starwars |&gt;\n  mutate(\n    species = fct_lump(species, n = 2),\n    species = fct_relevel(species, \"Human\"),\n    species = fct_recode(species, \"Mensch\" = \"Human\", \"Anders\" = \"Other\")\n  ) |&gt;\n  count(species)\n\n\n\n# A tibble: 4 × 2\n  species     n\n  &lt;fct&gt;   &lt;int&gt;\n1 Mensch     35\n2 Droid       6\n3 Anders     42\n4 &lt;NA&gt;        4"
  },
  {
    "objectID": "slides/slide-05-forcats.html#praktikum-forcats",
    "href": "slides/slide-05-forcats.html#praktikum-forcats",
    "title": "Daten rekodieren",
    "section": "Praktikum: {forcats}",
    "text": "Praktikum: {forcats}\nprak-05c-forcats-firmen.qmd\n\n\n\n−+\n20:00"
  },
  {
    "objectID": "slides/slide-05-forcats.html#praktikum-if_else-case_when-forcats",
    "href": "slides/slide-05-forcats.html#praktikum-if_else-case_when-forcats",
    "title": "Daten rekodieren",
    "section": "Praktikum: if_else(), case_when(), {forcats}",
    "text": "Praktikum: if_else(), case_when(), {forcats}\nprak-05d-cond-mutate-forcats.qmd\n\n\n\n−+\n30:00"
  },
  {
    "objectID": "slides/slide-05-forcats.html#section-14",
    "href": "slides/slide-05-forcats.html#section-14",
    "title": "Daten rekodieren",
    "section": "",
    "text": "Slides created via revealjs and Quarto.\nAccess slides as PDF.\nAll material is licensed under Creative Commons Attribution Share Alike 4.0 International."
  },
  {
    "objectID": "webpages/web-01-intro.html",
    "href": "webpages/web-01-intro.html",
    "title": "Unit 1",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\ndie sechs Elemente des Data Science Lifecycles aufzählen\n\n\naesthetic mappings für Datenvisualisierung im {ggplot2} R Package identifizieren\n\n\nvier Komponenten einer Quarto-Datei identifizieren",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 1"
    ]
  },
  {
    "objectID": "webpages/web-01-intro.html#ziele",
    "href": "webpages/web-01-intro.html#ziele",
    "title": "Unit 1",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\ndie sechs Elemente des Data Science Lifecycles aufzählen\n\n\naesthetic mappings für Datenvisualisierung im {ggplot2} R Package identifizieren\n\n\nvier Komponenten einer Quarto-Datei identifizieren",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 1"
    ]
  },
  {
    "objectID": "webpages/web-01-intro.html#folien",
    "href": "webpages/web-01-intro.html#folien",
    "title": "Unit 1",
    "section": " Folien",
    "text": "Folien\nFolien im Vollbild anzeigen | Folien als PDF herunterladen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 1"
    ]
  },
  {
    "objectID": "webpages/web-01-intro.html#praktika",
    "href": "webpages/web-01-intro.html#praktika",
    "title": "Unit 1",
    "section": " Praktika",
    "text": "Praktika\n\nPraktikum 01a - UN Votes\nPraktikum 01b - Bechdel\nPraktikum 01c - Scatterplot",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 1"
    ]
  },
  {
    "objectID": "webpages/web-01-intro.html#hausaufgaben-und-lektüre",
    "href": "webpages/web-01-intro.html#hausaufgaben-und-lektüre",
    "title": "Unit 1",
    "section": " Hausaufgaben und Lektüre",
    "text": "Hausaufgaben und Lektüre\n\nHausaufgabe - Rechtschreibung\nRStudio IDE Cheatsheet\nQuarto cheat sheet\nR for Data Science: Chapter 1 - Data visualisation; 1.1-1.3\nR for Data Science: Chapter 28 - Quarto",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 1"
    ]
  },
  {
    "objectID": "webpages/web-03-dplyr.html",
    "href": "webpages/web-03-dplyr.html",
    "title": "Unit 3",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\nBefehle zur Transformation von Spalten identifizieren und anwenden\n\n\nBefehle zur Gruppierung, Zusammenfassung und zum Zählen von Daten identifizieren und anwenden\n\n\nerläutern, wie man mehrere Befehle kombiniert",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 3"
    ]
  },
  {
    "objectID": "webpages/web-03-dplyr.html#ziele",
    "href": "webpages/web-03-dplyr.html#ziele",
    "title": "Unit 3",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\nBefehle zur Transformation von Spalten identifizieren und anwenden\n\n\nBefehle zur Gruppierung, Zusammenfassung und zum Zählen von Daten identifizieren und anwenden\n\n\nerläutern, wie man mehrere Befehle kombiniert",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 3"
    ]
  },
  {
    "objectID": "webpages/web-03-dplyr.html#folien",
    "href": "webpages/web-03-dplyr.html#folien",
    "title": "Unit 3",
    "section": " Folien",
    "text": "Folien\nFolien im Vollbild anzeigen | Folien als PDF herunterladen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 3"
    ]
  },
  {
    "objectID": "webpages/web-03-dplyr.html#praktika",
    "href": "webpages/web-03-dplyr.html#praktika",
    "title": "Unit 3",
    "section": " Praktika",
    "text": "Praktika\n\nPraktikum 03a - Spalten transformieren\nPraktikum 03b - Zusammenfassen und zählen\nPraktikum 03c - Zusammenfassen und zählen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 3"
    ]
  },
  {
    "objectID": "webpages/web-03-dplyr.html#hausaufgaben-und-lektüre",
    "href": "webpages/web-03-dplyr.html#hausaufgaben-und-lektüre",
    "title": "Unit 3",
    "section": " Hausaufgaben und Lektüre",
    "text": "Hausaufgaben und Lektüre\n\nHausaufgabe 03a - Bechdel-Daten wrangeln\ndplyr Cheatsheet\nR 4 Data Science: Chapter 3 - Data transformation\nR for data science: Chapter 13.3 - Counts\nThe tidyverse style guide",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 3"
    ]
  },
  {
    "objectID": "webpages/web-05-forcats.html",
    "href": "webpages/web-05-forcats.html",
    "title": "Unit 5",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\nDatentypen und -klassen in einem Datensatz identifizieren und deren Bedeutung erklären\n\n\nSpalten basierend auf Bedingungen umkodieren\n\n\nKategorien in Daten mit {forcats} umkodieren und sortieren",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 5"
    ]
  },
  {
    "objectID": "webpages/web-05-forcats.html#ziele",
    "href": "webpages/web-05-forcats.html#ziele",
    "title": "Unit 5",
    "section": "",
    "text": "Am Ende dieser Woche kannst du:\n\n\nDatentypen und -klassen in einem Datensatz identifizieren und deren Bedeutung erklären\n\n\nSpalten basierend auf Bedingungen umkodieren\n\n\nKategorien in Daten mit {forcats} umkodieren und sortieren",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 5"
    ]
  },
  {
    "objectID": "webpages/web-05-forcats.html#folien",
    "href": "webpages/web-05-forcats.html#folien",
    "title": "Unit 5",
    "section": " Folien",
    "text": "Folien\nFolien im Vollbild anzeigen | Folien als PDF herunterladen",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 5"
    ]
  },
  {
    "objectID": "webpages/web-05-forcats.html#praktika",
    "href": "webpages/web-05-forcats.html#praktika",
    "title": "Unit 5",
    "section": " Praktika",
    "text": "Praktika\n\nprak-05a-type-coercion.qmd\nprak-05b-cond-mutate.qmd\nprak-05c-forcats-firmen.qmd\nprak-05d-cond-mutate-forcats.qmd",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 5"
    ]
  },
  {
    "objectID": "webpages/web-05-forcats.html#lektüre",
    "href": "webpages/web-05-forcats.html#lektüre",
    "title": "Unit 5",
    "section": " Lektüre",
    "text": "Lektüre\n\nR for data science: Chapter 12.5 - Conditional transformations\nR for data science: Chapter 16 - Factors",
    "crumbs": [
      "{{< iconify fa6-brands square-github size=2x >}}",
      "Unit 5"
    ]
  }
]