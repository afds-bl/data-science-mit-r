---
title: "Praktikum 02c - Zeilen transformieren mit `dplyr`"
author: "___"
---

# Tastaturkürzel

|                                                              |                        |
|--------------------------------------------------------------|------------------------|
| Einen neuen Code-chunk hinzufügen                            | `Ctrl + Alt + I`       |
| Code "Zeile für Zeile" innerhalb eines Code-chunks ausführen | `Ctrl + Enter`         |
| Den gesamten Code-chunk ausführen                            | `Ctrl + Shift + Enter` |
| (Aus-)kommentieren                                           | `Ctrl + Shift + C`     |
| Das Pipe `|>`                                                | `Ctrl + Shift + M`     |
| Der Zuweisungs-Operator `<-`                                 | `Alt + -`              |

# R-Packages laden

1.  Lade `tidyverse` und `palmerpenguins`Packages.

# Daten erkunden

2.  Benutze `head()`, `summary()`, `str()` und `glimpse()` um die Daten zu erkunden:

# `filter()`

## Text Variablen Filtern

Variablen der Klassen `factor` und `character` werden mit einem Text string gefiltert. Filter für mehrere Werte mit `|` (*or*) Operator. Das Symbol auf deutscher Windows-Tastatur: `AltGr + 7`.

3.  Behalte Pinguine der Art `Chinstrap`.

```{r}
# filter(penguins, ___)
```

4.  Behalte Pinguine die entweder zur Art `Chinstrap` oder `Gentoo` gehören.

```{r}
# filter(penguins, ___ | ___)
```

```{r}
# filter(penguins, ___ %in% c("___", "___"))
```

5.  Behalte Pinguine der Art `Adelie` die auf der Insel `Dream` leben (Tipp: zwei mögliche Operatoren).

```{r}
# filter(penguins, ___)
```

```{r}
# filter(penguins, ___)
```

## Numerische Variablen Filtern

6.  Behalte Pinguine mit Gewicht 2900g oder leichter.

```{r}
# filter(penguins, ___)
```

7.  Behalte Pinguine der Art `Adelie` mit `bill_length_mm` über 40 mm.

```{r}
# filter(penguins, ___)
```

## `NA`s Filtern

8.  Welche variable haben `NA`? Hint: `skimr::skim()`
9.  Entferne Pinguine die keine Daten für `sex` haben. Hint: `is.na()`

```{r}
# filter(penguins, ___)
```

# `arrange()`

10. Den Datensatz mit der variable `body_mass_g` in absteigender Reihenfolge ordnen.

```{r}
# arrange(penguins, ___)
```

11. Den Datensatz mit den Variable `body_mass_g` und `bill_length_mm` ordnen.

# `distinct()`

12. Behalte eindeutige Zeilen mit den Variablen `species` und `island`.

    Wenn du die Anzahl der Vorkommen ermitteln willst, solltest du `distinct()` gegen `count()` austauschen (später im Kurs).
