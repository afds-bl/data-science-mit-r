---
title: "Unit 3: Spalten transformieren mit `dplyr`"
author: "___"
---

# Tastaturkürzel

|                                                              |                        |
|----------------------------------------------|-------------------------|
| Einen neuen Code-chunk hinzufügen                            | `Ctrl + Alt + I`       |
| Code "Zeile für Zeile" innerhalb eines Code-chunks ausführen | `Ctrl + Enter`         |
| Den gesamten Code-chunk ausführen                            | `Ctrl + Shift + Enter` |
| (Aus-)kommentieren                                           | `Ctrl + Shift + C`     |
| Das Pipe `|>`                                                | `Ctrl + Shift + M`     |
| Der Zuweisungs-Operator `<-`                                 | `Alt + -`              |

# Packages und Daten Laden

Lade packages `tidyverse` und `skimr`.

```{r}
library(skimr)
library(tidyverse)
```

Lade und erkunde die Abstimmungsdaten des Kantons BL: `View()`, `glimpse()` und `skim()`

```{r}
abstimmung <- read_delim("data/ogd_abstimmungsarchiv_11990.csv", delim = ";")
# glimpse(abstimmung)
# skim(abstimmung)
```

# Spalten transformieren

## Spaltennamen

Was sind die Namen der Spalten?

```{r}
names(abstimmung)
```


## Spalten verschieben: `relocate()`

Verschiebe die Prozentspalten (`percent_yeas`, `percent_nays`, `percent_turnout`) nach der Bezirksspalte (`district`):

```{r}
relocate(abstimmung, percent_yeas, percent_nays, percent_turnout, .after = district)
```


```{r}
relocate(abstimmung, starts_with("percent"), .after = district)
```

## Spalten auswählen: `select()`

Überlegt euch so viele Möglichkeiten wie möglich, um `date`, `entity_id`, `name`, `district`, `percent_yeas`, `percent_nays` und `percent_turnout` auszuwählen. Tipp: siehe [*select helpers*](https://dplyr.tidyverse.org/reference/select.html).

```{r}
select(abstimmung, date, entity_id, name, district, percent_yeas, percent_nays, percent_turnout)
```


```{r}
select(abstimmung, date:district, starts_with("percent_"))
```

```{r}
select(abstimmung, c(1:4, 11:13))
```

```{r}
select(abstimmung, date:percent_turnout, -c(vote_id, domain, type, title_de_CH, counted, answer))
```

## Spalten umbenennen: `rename()`

Benenne die folgenden Spalten in das deutsche Äquivalent um:

-   date → datum
-   entity_id → bfs_code
-   name → gemeinde
-   district → bezirk

```{r}
rename(abstimmung, datum = date, bfs_code = entity_id, gemeinde = name, bezirk = district)
```

## Werte einer Spalte ändern: `mutate()`

Stimmanteile als Prozentsatz anzeigen (durch 100 dividieren):

```{r}
mutate(
  abstimmung,
  percent_yeas = percent_yeas / 100,
  percent_nays = percent_nays / 100,
  percent_turnout = percent_turnout / 100,
  .keep = "used"
)
```

## Spalten erstellen: `mutate()`

Prüfe, ob die Summe der Ja- und Nein-Stimmen 100 beträgt.

```{r}
mutate(abstimmung, percent_total = percent_yeas + percent_nays, .keep = "used")
```

Berechne die Anzahl der Wähler, die sich beteiligt haben:

```{r}
mutate(abstimmung, turnout = percent_turnout * eligible_voters / 100, .after = percent_turnout)
```

# *The pipe*

Verwende *the pipe* für die folgenden Schritte:

-   Behalte Zeilen für eine Gemeinde deiner Wahl
-   Behalte alle Prozentteile und ja- und nein-Spalten
-   Berechne die Wahlbeteiligung (Grundgesamtheit ist in der `eligible_voters`-Spalte enthalten)

```{r}
abstimmung |>
  filter(name == "Allschwil") |>
  mutate(turnout = percent_turnout * eligible_voters / 100, .after = percent_turnout) |>
  select(contains(c("yeas", "nays", "turnout")), eligible_voters)
```

# Optional

Erstelle ein Boxplot von `percent_turnout` pro Bezirk:

```{r}
ggplot(abstimmung, aes(x = district, y = percent_turnout)) +
geom_boxplot(fill = "#E69F00", color = "#000000") +
labs(
  title = ("Verteilung der Wahlbeteiligung nach Bezirk"),
  subtitle = "Kanton Basel-Landschaft",
  x = "Bezirk",
  y = "Wahlbeteiligung (%)",
  caption = "Quelle: https://data.bl.ch/explore/dataset/11990/table"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Berechne den Anteil von ungültigen Stimmen (`invalid` und `empty`) pro Bezirk und Ergebnis (`answer`):
```{r}
abstimmung |> 
mutate(percent_invalid = (invalid + empty) / eligible_voters *  100) |> 
ggplot(aes(x = district, y = percent_invalid)) +
geom_boxplot(fill = "#E69F00", color = "#000000") +
facet_wrap(~answer) +
  labs(
  title = "Verteilung der ungültigen und leeren Stimmen nach Bezirk",
  subtitle = "Kanton Basel-Landschaft",
  x = "Bezirk",
  y = "Anteil (%)",
  caption = "Quelle: https://data.bl.ch/explore/dataset/11990/table"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

